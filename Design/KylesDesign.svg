<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns="http://www.w3.org/2000/svg" contentScriptType="application/ecmascript" contentStyleType="text/css"
     height="2475px" preserveAspectRatio="none" style="width:5275px;height:2475px;" version="1.1"
     viewBox="0 0 5275 2475" width="5275px" zoomAndPan="magnify">
    <defs>
        <filter height="300%" id="f1q1o7wfqgso2l" width="300%" x="-1" y="-1">
            <feGaussianBlur result="blurOut" stdDeviation="2.0"/>
            <feColorMatrix in="blurOut" result="blurOut2" type="matrix"
                           values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/>
            <feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/>
            <feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/>
        </filter>
    </defs>
    <g><!--MD5=[91066023993798d5dde570551cd8c913]
cluster omexmeta-->
        <polygon fill="#FFFFFF" filter="url(#f1q1o7wfqgso2l)"
                 points="22,24,81,24,88,47.6094,5093,47.6094,5093,2463,22,2463,22,24"
                 style="stroke: #000000; stroke-width: 1.5;"/>
        <line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="88" y1="47.6094" y2="47.6094"/>
        <text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="53" x="26" y="40.5332">semsim
        </text><!--MD5=[6cccae008001d5a007f1eee5c69935d8]
class omexmeta.Accessor-->
        <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="89.5078" id="semsim.Accessor"
              style="stroke: #A80036; stroke-width: 1.5;" width="418" x="3179" y="205"/>
        <ellipse cx="3358.25" cy="221" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M3361.0156,216.875 Q3361.1719,216.6563 3361.3594,216.5469 Q3361.5469,216.4375 3361.7656,216.4375 Q3362.1406,216.4375 3362.375,216.6953 Q3362.6094,216.9531 3362.6094,217.5625 L3362.6094,219.0156 Q3362.6094,219.625 3362.375,219.8906 Q3362.1406,220.1563 3361.7656,220.1563 Q3361.4219,220.1563 3361.2188,219.9531 Q3361.0156,219.7656 3360.9063,219.25 Q3360.8594,218.8906 3360.6719,218.7031 Q3360.3438,218.3281 3359.7344,218.1094 Q3359.125,217.8906 3358.5,217.8906 Q3357.7344,217.8906 3357.1016,218.2188 Q3356.4688,218.5469 3355.9766,219.2969 Q3355.4844,220.0469 3355.4844,221.0781 L3355.4844,222.1719 Q3355.4844,223.4063 3356.375,224.2266 Q3357.2656,225.0469 3358.8594,225.0469 Q3359.7969,225.0469 3360.4531,224.7969 Q3360.8438,224.6406 3361.2656,224.2031 Q3361.5313,223.9375 3361.6797,223.8594 Q3361.8281,223.7813 3362.0313,223.7813 Q3362.3594,223.7813 3362.6172,224.0391 Q3362.875,224.2969 3362.875,224.6406 Q3362.875,224.9844 3362.5313,225.3906 Q3362.0313,225.9688 3361.2344,226.2969 Q3360.1563,226.75 3358.8594,226.75 Q3357.3438,226.75 3356.1406,226.125 Q3355.1563,225.625 3354.4688,224.5547 Q3353.7813,223.4844 3353.7813,222.2031 L3353.7813,221.0469 Q3353.7813,219.7188 3354.3984,218.5703 Q3355.0156,217.4219 3356.1094,216.8047 Q3357.2031,216.1875 3358.4375,216.1875 Q3359.1719,216.1875 3359.8203,216.3516 Q3360.4688,216.5156 3361.0156,216.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51"
              x="3378.75" y="225.9102">Accessor
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3180" x2="3596" y1="237" y2="237"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3180" x2="3596" y1="245" y2="245"/>
        <ellipse cx="3190" cy="256" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="376" x="3199" y="260.4189">hasCompartmentWithMetaId(const
            std::string&amp; metaid, libsbml::Model* m) : bool
        </text>
        <ellipse cx="3190" cy="269.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="392" x="3199" y="274.2549">findCompartment(const std::string&amp;
            sid, libsbml::Model* m) : libsbml::Compartment*
        </text>
        <ellipse cx="3190" cy="283.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="390" x="3199" y="288.0908">findUnitDefinition(const std::string&amp;
            sid, libsbml::Model* m) : libsbml::UnitDefinition*
        </text><!--MD5=[c8c118dbdee25114759ee7345884fbe6]
class omexmeta.Annotation-->
        <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="75.6719" id="semsim.Annotation"
              style="stroke: #A80036; stroke-width: 1.5;" width="286" x="3632" y="212"/>
        <ellipse cx="3741.75" cy="228" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M3744.5156,223.875 Q3744.6719,223.6563 3744.8594,223.5469 Q3745.0469,223.4375 3745.2656,223.4375 Q3745.6406,223.4375 3745.875,223.6953 Q3746.1094,223.9531 3746.1094,224.5625 L3746.1094,226.0156 Q3746.1094,226.625 3745.875,226.8906 Q3745.6406,227.1563 3745.2656,227.1563 Q3744.9219,227.1563 3744.7188,226.9531 Q3744.5156,226.7656 3744.4063,226.25 Q3744.3594,225.8906 3744.1719,225.7031 Q3743.8438,225.3281 3743.2344,225.1094 Q3742.625,224.8906 3742,224.8906 Q3741.2344,224.8906 3740.6016,225.2188 Q3739.9688,225.5469 3739.4766,226.2969 Q3738.9844,227.0469 3738.9844,228.0781 L3738.9844,229.1719 Q3738.9844,230.4063 3739.875,231.2266 Q3740.7656,232.0469 3742.3594,232.0469 Q3743.2969,232.0469 3743.9531,231.7969 Q3744.3438,231.6406 3744.7656,231.2031 Q3745.0313,230.9375 3745.1797,230.8594 Q3745.3281,230.7813 3745.5313,230.7813 Q3745.8594,230.7813 3746.1172,231.0391 Q3746.375,231.2969 3746.375,231.6406 Q3746.375,231.9844 3746.0313,232.3906 Q3745.5313,232.9688 3744.7344,233.2969 Q3743.6563,233.75 3742.3594,233.75 Q3740.8438,233.75 3739.6406,233.125 Q3738.6563,232.625 3737.9688,231.5547 Q3737.2813,230.4844 3737.2813,229.2031 L3737.2813,228.0469 Q3737.2813,226.7188 3737.8984,225.5703 Q3738.5156,224.4219 3739.6094,223.8047 Q3740.7031,223.1875 3741.9375,223.1875 Q3742.6719,223.1875 3743.3203,223.3516 Q3743.9688,223.5156 3744.5156,223.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58"
              x="3762.25" y="232.9102">Annotation
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3633" x2="3917" y1="244" y2="244"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3633" x2="3917" y1="252" y2="252"/>
        <ellipse cx="3643" cy="263" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="243" x="3652" y="267.4189">stripAnnotations(libsbml::SBMLDocument*
            d) : void
        </text>
        <ellipse cx="3643" cy="276.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="260" x="3652" y="281.2549">
            stripAnnotationsFromElement(libsbml::SBase* x) : void
        </text><!--MD5=[441b65b94063ae95fc7577ef03717872]
class omexmeta.AnnotationBase-->
        <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="158.6875" id="semsim.AnnotationBase"
              style="stroke: #A80036; stroke-width: 1.5;" width="555" x="1795.5" y="170.5"/>
        <ellipse cx="2025.25" cy="186.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M2027.4375,188.2656 L2023.2969,188.2656 L2022.875,189.2969 L2023.2969,189.2969 Q2023.9063,189.2969 2024.1719,189.5313 Q2024.4375,189.7656 2024.4375,190.1563 Q2024.4375,190.5313 2024.1719,190.7656 Q2023.9063,191 2023.2969,191 L2021,191 Q2020.3906,191 2020.1328,190.7656 Q2019.875,190.5313 2019.875,190.1406 Q2019.875,189.7656 2020.1484,189.5234 Q2020.4219,189.2813 2021.0469,189.2969 L2023.7188,182.6406 L2022.6094,182.6406 Q2022,182.6406 2021.7344,182.4063 Q2021.4688,182.1719 2021.4688,181.7813 Q2021.4688,181.4063 2021.7344,181.1719 Q2022,180.9375 2022.6094,180.9375 L2026.2813,180.9375 L2029.6719,189.2969 Q2030.2656,189.2969 2030.4531,189.4375 Q2030.8438,189.7031 2030.8438,190.1563 Q2030.8438,190.5313 2030.5859,190.7656 Q2030.3281,191 2029.7188,191 L2027.4219,191 Q2026.8125,191 2026.5469,190.7656 Q2026.2813,190.5313 2026.2813,190.1406 Q2026.2813,189.7656 2026.5469,189.5313 Q2026.8125,189.2969 2027.4219,189.2969 L2027.8438,189.2969 L2027.4375,188.2656 Z M2026.7188,186.5625 L2025.3594,183.1875 L2023.9844,186.5625 L2026.7188,186.5625 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs"
              textLength="87" x="2045.75" y="191.4102">AnnotationBase
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="1796.5" x2="2349.5" y1="202.5" y2="202.5"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="1796.5" x2="2349.5" y1="210.5" y2="210.5"/>
        <ellipse cx="1806.5" cy="221.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91"
              x="1815.5" y="225.9189">~AnnotationBase()
        </text>
        <ellipse cx="1806.5" cy="235.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
              textLength="163" x="1815.5" y="239.7549">clone() : AnnotationBase* {query}
        </text>
        <ellipse cx="1806.5" cy="249.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
              textLength="139" x="1815.5" y="253.5908">isComposite() : bool {query}
        </text>
        <ellipse cx="1806.5" cy="263.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
              textLength="401" x="1815.5" y="267.4268">getRDF(const URI&amp; sbml_base_uri, const std::string&amp;
            format) : std::string {query}
        </text>
        <ellipse cx="1806.5" cy="276.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
              textLength="152" x="1815.5" y="281.2627">humanize() : std::string {query}
        </text>
        <ellipse cx="1806.5" cy="290.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
              textLength="159" x="1815.5" y="295.0986">getMetaId() : std::string&amp; {query}
        </text>
        <ellipse cx="1806.5" cy="304.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
              textLength="442" x="1815.5" y="308.9346">makeComposite(const PhysicalProperty&amp; prop) : std::unique_ptr&lt;AnnotationBase&gt;
            {query}
        </text>
        <ellipse cx="1806.5" cy="318.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
              textLength="529" x="1815.5" y="322.7705">serializeToRDF(const URI&amp; sbml_base_uri, raptor_world* world,
            raptor_serializer* serializer) : void {query}
        </text><!--MD5=[ec586cbc5128e105129e974e1d86062e]
class omexmeta.CHEBI-->
        <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="61.8359" id="semsim.CHEBI"
              style="stroke: #A80036; stroke-width: 1.5;" width="178" x="551" y="652"/>
        <ellipse cx="617.25" cy="668" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M620.0156,663.875 Q620.1719,663.6563 620.3594,663.5469 Q620.5469,663.4375 620.7656,663.4375 Q621.1406,663.4375 621.375,663.6953 Q621.6094,663.9531 621.6094,664.5625 L621.6094,666.0156 Q621.6094,666.625 621.375,666.8906 Q621.1406,667.1563 620.7656,667.1563 Q620.4219,667.1563 620.2188,666.9531 Q620.0156,666.7656 619.9063,666.25 Q619.8594,665.8906 619.6719,665.7031 Q619.3438,665.3281 618.7344,665.1094 Q618.125,664.8906 617.5,664.8906 Q616.7344,664.8906 616.1016,665.2188 Q615.4688,665.5469 614.9766,666.2969 Q614.4844,667.0469 614.4844,668.0781 L614.4844,669.1719 Q614.4844,670.4063 615.375,671.2266 Q616.2656,672.0469 617.8594,672.0469 Q618.7969,672.0469 619.4531,671.7969 Q619.8438,671.6406 620.2656,671.2031 Q620.5313,670.9375 620.6797,670.8594 Q620.8281,670.7813 621.0313,670.7813 Q621.3594,670.7813 621.6172,671.0391 Q621.875,671.2969 621.875,671.6406 Q621.875,671.9844 621.5313,672.3906 Q621.0313,672.9688 620.2344,673.2969 Q619.1563,673.75 617.8594,673.75 Q616.3438,673.75 615.1406,673.125 Q614.1563,672.625 613.4688,671.5547 Q612.7813,670.4844 612.7813,669.2031 L612.7813,668.0469 Q612.7813,666.7188 613.3984,665.5703 Q614.0156,664.4219 615.1094,663.8047 Q616.2031,663.1875 617.4375,663.1875 Q618.1719,663.1875 618.8203,663.3516 Q619.4688,663.5156 620.0156,663.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37"
              x="637.75" y="672.9102">CHEBI
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="552" x2="728" y1="684" y2="684"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="552" x2="728" y1="692" y2="692"/>
        <ellipse cx="562" cy="703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="152" x="571" y="707.4189">get(OntologyTerm t) : Resource
        </text><!--MD5=[8eaef2c99f09896dce0d0aea2512c221]
class omexmeta.CL-->
        <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="61.8359" id="semsim.CL"
              style="stroke: #A80036; stroke-width: 1.5;" width="178" x="764" y="652"/>
        <ellipse cx="840.75" cy="668" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M843.5156,663.875 Q843.6719,663.6563 843.8594,663.5469 Q844.0469,663.4375 844.2656,663.4375 Q844.6406,663.4375 844.875,663.6953 Q845.1094,663.9531 845.1094,664.5625 L845.1094,666.0156 Q845.1094,666.625 844.875,666.8906 Q844.6406,667.1563 844.2656,667.1563 Q843.9219,667.1563 843.7188,666.9531 Q843.5156,666.7656 843.4063,666.25 Q843.3594,665.8906 843.1719,665.7031 Q842.8438,665.3281 842.2344,665.1094 Q841.625,664.8906 841,664.8906 Q840.2344,664.8906 839.6016,665.2188 Q838.9688,665.5469 838.4766,666.2969 Q837.9844,667.0469 837.9844,668.0781 L837.9844,669.1719 Q837.9844,670.4063 838.875,671.2266 Q839.7656,672.0469 841.3594,672.0469 Q842.2969,672.0469 842.9531,671.7969 Q843.3438,671.6406 843.7656,671.2031 Q844.0313,670.9375 844.1797,670.8594 Q844.3281,670.7813 844.5313,670.7813 Q844.8594,670.7813 845.1172,671.0391 Q845.375,671.2969 845.375,671.6406 Q845.375,671.9844 845.0313,672.3906 Q844.5313,672.9688 843.7344,673.2969 Q842.6563,673.75 841.3594,673.75 Q839.8438,673.75 838.6406,673.125 Q837.6563,672.625 836.9688,671.5547 Q836.2813,670.4844 836.2813,669.2031 L836.2813,668.0469 Q836.2813,666.7188 836.8984,665.5703 Q837.5156,664.4219 838.6094,663.8047 Q839.7031,663.1875 840.9375,663.1875 Q841.6719,663.1875 842.3203,663.3516 Q842.9688,663.5156 843.5156,663.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="16"
              x="861.25" y="672.9102">CL
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="765" x2="941" y1="684" y2="684"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="765" x2="941" y1="692" y2="692"/>
        <ellipse cx="775" cy="703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="152" x="784" y="707.4189">get(OntologyTerm t) : Resource
        </text><!--MD5=[d69461e9c857cbe08c1f85e977b0ebdf]
class omexmeta.Component-->
        <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="463.0781" id="semsim.Component"
              style="stroke: #A80036; stroke-width: 1.5;" width="540" x="2023" y="1641"/>
        <ellipse cx="2256.25" cy="1657" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M2259.0156,1652.875 Q2259.1719,1652.6563 2259.3594,1652.5469 Q2259.5469,1652.4375 2259.7656,1652.4375 Q2260.1406,1652.4375 2260.375,1652.6953 Q2260.6094,1652.9531 2260.6094,1653.5625 L2260.6094,1655.0156 Q2260.6094,1655.625 2260.375,1655.8906 Q2260.1406,1656.1563 2259.7656,1656.1563 Q2259.4219,1656.1563 2259.2188,1655.9531 Q2259.0156,1655.7656 2258.9063,1655.25 Q2258.8594,1654.8906 2258.6719,1654.7031 Q2258.3438,1654.3281 2257.7344,1654.1094 Q2257.125,1653.8906 2256.5,1653.8906 Q2255.7344,1653.8906 2255.1016,1654.2188 Q2254.4688,1654.5469 2253.9766,1655.2969 Q2253.4844,1656.0469 2253.4844,1657.0781 L2253.4844,1658.1719 Q2253.4844,1659.4063 2254.375,1660.2266 Q2255.2656,1661.0469 2256.8594,1661.0469 Q2257.7969,1661.0469 2258.4531,1660.7969 Q2258.8438,1660.6406 2259.2656,1660.2031 Q2259.5313,1659.9375 2259.6797,1659.8594 Q2259.8281,1659.7813 2260.0313,1659.7813 Q2260.3594,1659.7813 2260.6172,1660.0391 Q2260.875,1660.2969 2260.875,1660.6406 Q2260.875,1660.9844 2260.5313,1661.3906 Q2260.0313,1661.9688 2259.2344,1662.2969 Q2258.1563,1662.75 2256.8594,1662.75 Q2255.3438,1662.75 2254.1406,1662.125 Q2253.1563,1661.625 2252.4688,1660.5547 Q2251.7813,1659.4844 2251.7813,1658.2031 L2251.7813,1657.0469 Q2251.7813,1655.7188 2252.3984,1654.5703 Q2253.0156,1653.4219 2254.1094,1652.8047 Q2255.2031,1652.1875 2256.4375,1652.1875 Q2257.1719,1652.1875 2257.8203,1652.3516 Q2258.4688,1652.5156 2259.0156,1652.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65"
              x="2276.75" y="1661.9102">Component
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="2024" x2="2562" y1="1673" y2="1673"/>
        <polygon fill="none" points="2034,1679,2038,1683,2034,1687,2030,1683"
                 style="stroke: #B38D22; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130"
              x="2043" y="1688.4189">annotation_ : AnnotationPtr
        </text>
        <polygon fill="none" points="2034,1692.8359,2038,1696.8359,2034,1700.8359,2030,1696.8359"
                 style="stroke: #B38D22; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94"
              x="2043" y="1702.2549">about_value_ : std::string
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="2024" x2="2562" y1="1708.6719" y2="1708.6719"/>
        <ellipse cx="2034" cy="1719.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62"
              x="2043" y="1724.0908">Component()
        </text>
        <ellipse cx="2034" cy="1733.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243"
              x="2043" y="1737.9268">Component(const SingularAnnotation&amp; annotation)
        </text>
        <ellipse cx="2034" cy="1747.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220"
              x="2043" y="1751.7627">Component(SingularAnnotation&amp;&amp; annotation)
        </text>
        <ellipse cx="2034" cy="1761.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254"
              x="2043" y="1765.5986">Component(const CompositeAnnotation&amp; annotation)
        </text>
        <ellipse cx="2034" cy="1775.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231"
              x="2043" y="1779.4346">Component(CompositeAnnotation&amp;&amp; annotation)
        </text>
        <ellipse cx="2034" cy="1788.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181"
              x="2043" y="1793.2705">Component(const Component&amp; other)
        </text>
        <ellipse cx="2034" cy="1802.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="412"
              x="2043" y="1807.1064">Component(Component&amp;&amp; other) noexcept:
            annotation_(std::move(otherannotation_))
        </text>
        <ellipse cx="2034" cy="1816.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68"
              x="2043" y="1820.9424">~Component()
        </text>
        <ellipse cx="2034" cy="1830.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207"
              x="2043" y="1834.7783">getAnnotation() : AnnotationBase&amp; {query}
        </text>
        <ellipse cx="2034" cy="1844.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168"
              x="2043" y="1848.6143">getAnnotation() : AnnotationBase&amp;
        </text>
        <ellipse cx="2034" cy="1858.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140"
              x="2043" y="1862.4502">clone() : Component* {query}
        </text>
        <ellipse cx="2034" cy="1871.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282"
              x="2043" y="1876.2861">getCompositeAnnotation() : CompositeAnnotation&amp; {query}
        </text>
        <ellipse cx="2034" cy="1885.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243"
              x="2043" y="1890.1221">getCompositeAnnotation() : CompositeAnnotation&amp;
        </text>
        <ellipse cx="2034" cy="1899.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183"
              x="2043" y="1903.958">getURI(const URI&amp; base) : URI {query}
        </text>
        <ellipse cx="2034" cy="1913.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267"
              x="2043" y="1917.7939">containsMetaId(const std::string&amp; metaid) : bool {query}
        </text>
        <ellipse cx="2034" cy="1927.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146"
              x="2043" y="1931.6299">hasAnnotation() : bool {query}
        </text>
        <ellipse cx="2034" cy="1941.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196"
              x="2043" y="1945.4658">hasCompositeAnnotation() : bool {query}
        </text>
        <ellipse cx="2034" cy="1954.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125"
              x="2043" y="1959.3018">hasMetaId() : bool {query}
        </text>
        <ellipse cx="2034" cy="1968.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185"
              x="2043" y="1973.1377">hasSingularAnnotation() : bool {query}
        </text>
        <ellipse cx="2034" cy="1982.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124"
              x="2043" y="1986.9736">isProcess() : bool {query}
        </text>
        <ellipse cx="2034" cy="1996.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390"
              x="2043" y="2000.8096">getRDF(const URI&amp; sbml_base_uri, const std::string&amp; format) : std::string
            {query}
        </text>
        <ellipse cx="2034" cy="2010.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150"
              x="2043" y="2014.6455">humanize() : std::string {query}
        </text>
        <ellipse cx="2034" cy="2024.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157"
              x="2043" y="2028.4814">getMetaId() : std::string&amp; {query}
        </text>
        <ellipse cx="2034" cy="2037.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="514"
              x="2043" y="2042.3174">serializeToRDF(const URI&amp; sbml_base_uri, raptor_world* world,
            raptor_serializer* serializer) : void {query}
        </text>
        <ellipse cx="2034" cy="2051.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238"
              x="2043" y="2056.1533">setAnnotation(AnnotationBase* annotation) : void
        </text>
        <ellipse cx="2034" cy="2065.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271"
              x="2043" y="2069.9893">setAnnotation(const AnnotationBase&amp; annotation) : void
        </text>
        <ellipse cx="2034" cy="2079.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236"
              x="2043" y="2083.8252">setAnnotation(AnnotationPtr&amp;&amp; annotation) : void
        </text>
        <ellipse cx="2034" cy="2093.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202"
              x="2043" y="2097.6611">setMetaId(const std::string&amp; metaid) : void
        </text><!--MD5=[4665198f023e503db5bd0f7e7dbe67c3]
class omexmeta.CompositeAnnotation-->
        <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="338.5547" id="semsim.CompositeAnnotation"
              style="stroke: #A80036; stroke-width: 1.5;" width="621" x="1815.5" y="513.5"/>
        <ellipse cx="2062.25" cy="529.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M2065.0156,525.375 Q2065.1719,525.1563 2065.3594,525.0469 Q2065.5469,524.9375 2065.7656,524.9375 Q2066.1406,524.9375 2066.375,525.1953 Q2066.6094,525.4531 2066.6094,526.0625 L2066.6094,527.5156 Q2066.6094,528.125 2066.375,528.3906 Q2066.1406,528.6563 2065.7656,528.6563 Q2065.4219,528.6563 2065.2188,528.4531 Q2065.0156,528.2656 2064.9063,527.75 Q2064.8594,527.3906 2064.6719,527.2031 Q2064.3438,526.8281 2063.7344,526.6094 Q2063.125,526.3906 2062.5,526.3906 Q2061.7344,526.3906 2061.1016,526.7188 Q2060.4688,527.0469 2059.9766,527.7969 Q2059.4844,528.5469 2059.4844,529.5781 L2059.4844,530.6719 Q2059.4844,531.9063 2060.375,532.7266 Q2061.2656,533.5469 2062.8594,533.5469 Q2063.7969,533.5469 2064.4531,533.2969 Q2064.8438,533.1406 2065.2656,532.7031 Q2065.5313,532.4375 2065.6797,532.3594 Q2065.8281,532.2813 2066.0313,532.2813 Q2066.3594,532.2813 2066.6172,532.5391 Q2066.875,532.7969 2066.875,533.1406 Q2066.875,533.4844 2066.5313,533.8906 Q2066.0313,534.4688 2065.2344,534.7969 Q2064.1563,535.25 2062.8594,535.25 Q2061.3438,535.25 2060.1406,534.625 Q2059.1563,534.125 2058.4688,533.0547 Q2057.7813,531.9844 2057.7813,530.7031 L2057.7813,529.5469 Q2057.7813,528.2188 2058.3984,527.0703 Q2059.0156,525.9219 2060.1094,525.3047 Q2061.2031,524.6875 2062.4375,524.6875 Q2063.1719,524.6875 2063.8203,524.8516 Q2064.4688,525.0156 2065.0156,525.375 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119"
              x="2082.75" y="534.4102">CompositeAnnotation
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="1816.5" x2="2435.5" y1="545.5" y2="545.5"/>
        <polygon fill="none" points="1826.5,551.5,1830.5,555.5,1826.5,559.5,1822.5,555.5"
                 style="stroke: #B38D22; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67"
              x="1835.5" y="560.9189">entity_ : Entity
        </text>
        <polygon fill="none" points="1826.5,565.3359,1830.5,569.3359,1826.5,573.3359,1822.5,569.3359"
                 style="stroke: #B38D22; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137"
              x="1835.5" y="574.7549">property_ : PhysicalProperty
        </text>
        <polygon fill="none" points="1826.5,579.1719,1830.5,583.1719,1826.5,587.1719,1822.5,583.1719"
                 style="stroke: #B38D22; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94"
              x="1835.5" y="588.5908">about_value_ : std::string
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="1816.5" x2="2435.5" y1="595.0078" y2="595.0078"/>
        <ellipse cx="1826.5" cy="606.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="495"
              x="1835.5" y="610.4268">CompositeAnnotation(const std::string&amp; metaid, const PhysicalProperty&amp;
            property, const Entity&amp; entity)
        </text>
        <ellipse cx="1826.5" cy="619.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="449"
              x="1835.5" y="624.2627">CompositeAnnotation(const std::string&amp; metaid, PhysicalProperty&amp;&amp;
            property, Entity&amp;&amp; entity)
        </text>
        <ellipse cx="1826.5" cy="633.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277"
              x="1835.5" y="638.0986">CompositeAnnotation(const CompositeAnnotation&amp; other)
        </text>
        <ellipse cx="1826.5" cy="647.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254"
              x="1835.5" y="651.9346">CompositeAnnotation(CompositeAnnotation&amp;&amp; other)
        </text>
        <ellipse cx="1826.5" cy="661.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="434"
              x="1835.5" y="665.7705">CompositeAnnotation(const SingularAnnotation&amp; other, const PhysicalProperty&amp;
            property)
        </text>
        <ellipse cx="1826.5" cy="675.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163"
              x="1835.5" y="679.6064">clone() : AnnotationBase* {query}
        </text>
        <ellipse cx="1826.5" cy="689.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339"
              x="1835.5" y="693.4424">makeComposite(const PhysicalProperty&amp; prop) : AnnotationPtr {query}
        </text>
        <ellipse cx="1826.5" cy="702.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130"
              x="1835.5" y="707.2783">getEntity() : Entity&amp; {query}
        </text>
        <ellipse cx="1826.5" cy="716.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91"
              x="1835.5" y="721.1143">getEntity() : Entity&amp;
        </text>
        <ellipse cx="1826.5" cy="730.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134"
              x="1835.5" y="734.9502">isComposite() : bool {query}
        </text>
        <ellipse cx="1826.5" cy="744.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139"
              x="1835.5" y="748.7861">isEntityEmpty() : bool {query}
        </text>
        <ellipse cx="1826.5" cy="758.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390"
              x="1835.5" y="762.6221">getRDF(const URI&amp; sbml_base_uri, const std::string&amp; format) : std::string
            {query}
        </text>
        <ellipse cx="1826.5" cy="772.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150"
              x="1835.5" y="776.458">humanize() : std::string {query}
        </text>
        <ellipse cx="1826.5" cy="785.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157"
              x="1835.5" y="790.2939">getMetaId() : std::string&amp; {query}
        </text>
        <ellipse cx="1826.5" cy="799.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329"
              x="1835.5" y="804.1299">addTerm(const Relation&amp; relation, const Resource&amp; resource) : void
        </text>
        <polygon fill="#FFFF44" points="1826.5,808.5469,1830.5,812.5469,1826.5,816.5469,1822.5,812.5469"
                 style="stroke: #B38D22; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="595"
              x="1835.5" y="817.9658">serializePhysicalPropertyToRDF(const URI&amp; sbml_base_uri, raptor_world* world,
            raptor_serializer* serializer) : void {query}
        </text>
        <ellipse cx="1826.5" cy="827.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="514"
              x="1835.5" y="831.8018">serializeToRDF(const URI&amp; sbml_base_uri, raptor_world* world,
            raptor_serializer* serializer) : void {query}
        </text>
        <ellipse cx="1826.5" cy="841.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202"
              x="1835.5" y="845.6377">setMetaId(const std::string&amp; metaid) : void
        </text><!--MD5=[7c6155da535fc19cd9ebd659dd160118]
class omexmeta.Condition-->
        <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="75.6719" id="semsim.Condition"
              style="stroke: #A80036; stroke-width: 1.5;" width="257" x="3953.5" y="212"/>
        <ellipse cx="4051.25" cy="228" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4053.4375,229.7656 L4049.2969,229.7656 L4048.875,230.7969 L4049.2969,230.7969 Q4049.9063,230.7969 4050.1719,231.0313 Q4050.4375,231.2656 4050.4375,231.6563 Q4050.4375,232.0313 4050.1719,232.2656 Q4049.9063,232.5 4049.2969,232.5 L4047,232.5 Q4046.3906,232.5 4046.1328,232.2656 Q4045.875,232.0313 4045.875,231.6406 Q4045.875,231.2656 4046.1484,231.0234 Q4046.4219,230.7813 4047.0469,230.7969 L4049.7188,224.1406 L4048.6094,224.1406 Q4048,224.1406 4047.7344,223.9063 Q4047.4688,223.6719 4047.4688,223.2813 Q4047.4688,222.9063 4047.7344,222.6719 Q4048,222.4375 4048.6094,222.4375 L4052.2813,222.4375 L4055.6719,230.7969 Q4056.2656,230.7969 4056.4531,230.9375 Q4056.8438,231.2031 4056.8438,231.6563 Q4056.8438,232.0313 4056.5859,232.2656 Q4056.3281,232.5 4055.7188,232.5 L4053.4219,232.5 Q4052.8125,232.5 4052.5469,232.2656 Q4052.2813,232.0313 4052.2813,231.6406 Q4052.2813,231.2656 4052.5469,231.0313 Q4052.8125,230.7969 4053.4219,230.7969 L4053.8438,230.7969 L4053.4375,229.7656 Z M4052.7188,228.0625 L4051.3594,224.6875 L4049.9844,228.0625 L4052.7188,228.0625 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs"
              textLength="53" x="4071.75" y="232.9102">Condition
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3954.5" x2="4209.5" y1="244" y2="244"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3954.5" x2="4209.5" y1="252" y2="252"/>
        <ellipse cx="3964.5" cy="263" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58"
              x="3973.5" y="267.4189">~Condition()
        </text>
        <ellipse cx="3964.5" cy="276.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
              textLength="231" x="3973.5" y="281.2549">matches(const Component&amp; component) : bool
        </text><!--MD5=[afe0c8e6a2f433b41fd44a20399f528f]
class omexmeta.DescriptorTerm-->
        <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="75.6719" id="semsim.DescriptorTerm"
              style="stroke: #A80036; stroke-width: 1.5;" width="358" x="627" y="1415"/>
        <ellipse cx="758.75" cy="1431" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M761.5156,1426.875 Q761.6719,1426.6563 761.8594,1426.5469 Q762.0469,1426.4375 762.2656,1426.4375 Q762.6406,1426.4375 762.875,1426.6953 Q763.1094,1426.9531 763.1094,1427.5625 L763.1094,1429.0156 Q763.1094,1429.625 762.875,1429.8906 Q762.6406,1430.1563 762.2656,1430.1563 Q761.9219,1430.1563 761.7188,1429.9531 Q761.5156,1429.7656 761.4063,1429.25 Q761.3594,1428.8906 761.1719,1428.7031 Q760.8438,1428.3281 760.2344,1428.1094 Q759.625,1427.8906 759,1427.8906 Q758.2344,1427.8906 757.6016,1428.2188 Q756.9688,1428.5469 756.4766,1429.2969 Q755.9844,1430.0469 755.9844,1431.0781 L755.9844,1432.1719 Q755.9844,1433.4063 756.875,1434.2266 Q757.7656,1435.0469 759.3594,1435.0469 Q760.2969,1435.0469 760.9531,1434.7969 Q761.3438,1434.6406 761.7656,1434.2031 Q762.0313,1433.9375 762.1797,1433.8594 Q762.3281,1433.7813 762.5313,1433.7813 Q762.8594,1433.7813 763.1172,1434.0391 Q763.375,1434.2969 763.375,1434.6406 Q763.375,1434.9844 763.0313,1435.3906 Q762.5313,1435.9688 761.7344,1436.2969 Q760.6563,1436.75 759.3594,1436.75 Q757.8438,1436.75 756.6406,1436.125 Q755.6563,1435.625 754.9688,1434.5547 Q754.2813,1433.4844 754.2813,1432.2031 L754.2813,1431.0469 Q754.2813,1429.7188 754.8984,1428.5703 Q755.5156,1427.4219 756.6094,1426.8047 Q757.7031,1426.1875 758.9375,1426.1875 Q759.6719,1426.1875 760.3203,1426.3516 Q760.9688,1426.5156 761.5156,1426.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86"
              x="779.25" y="1435.9102">DescriptorTerm
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="628" x2="984" y1="1447" y2="1447"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="628" x2="984" y1="1455" y2="1455"/>
        <ellipse cx="638" cy="1466" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332"
              x="647" y="1470.4189">DescriptorTerm(const Relation&amp; relation, const Resource&amp; resource)
        </text>
        <ellipse cx="638" cy="1479.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286"
              x="647" y="1484.2549">DescriptorTerm(Relation&amp;&amp; relation, Resource&amp;&amp; resource)
        </text><!--MD5=[af8b20ab111e024f308e86c84cc7a3ff]
class omexmeta.Entity--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="310.8828" id="semsim.Entity" style="stroke: #A80036; stroke-width: 1.5;" width="540" x="2654" y="940"/><ellipse cx="2905.25" cy="956" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2908.0156,951.875 Q2908.1719,951.6563 2908.3594,951.5469 Q2908.5469,951.4375 2908.7656,951.4375 Q2909.1406,951.4375 2909.375,951.6953 Q2909.6094,951.9531 2909.6094,952.5625 L2909.6094,954.0156 Q2909.6094,954.625 2909.375,954.8906 Q2909.1406,955.1563 2908.7656,955.1563 Q2908.4219,955.1563 2908.2188,954.9531 Q2908.0156,954.7656 2907.9063,954.25 Q2907.8594,953.8906 2907.6719,953.7031 Q2907.3438,953.3281 2906.7344,953.1094 Q2906.125,952.8906 2905.5,952.8906 Q2904.7344,952.8906 2904.1016,953.2188 Q2903.4688,953.5469 2902.9766,954.2969 Q2902.4844,955.0469 2902.4844,956.0781 L2902.4844,957.1719 Q2902.4844,958.4063 2903.375,959.2266 Q2904.2656,960.0469 2905.8594,960.0469 Q2906.7969,960.0469 2907.4531,959.7969 Q2907.8438,959.6406 2908.2656,959.2031 Q2908.5313,958.9375 2908.6797,958.8594 Q2908.8281,958.7813 2909.0313,958.7813 Q2909.3594,958.7813 2909.6172,959.0391 Q2909.875,959.2969 2909.875,959.6406 Q2909.875,959.9844 2909.5313,960.3906 Q2909.0313,960.9688 2908.2344,961.2969 Q2907.1563,961.75 2905.8594,961.75 Q2904.3438,961.75 2903.1406,961.125 Q2902.1563,960.625 2901.4688,959.5547 Q2900.7813,958.4844 2900.7813,957.2031 L2900.7813,956.0469 Q2900.7813,954.7188 2901.3984,953.5703 Q2902.0156,952.4219 2903.1094,951.8047 Q2904.2031,951.1875 2905.4375,951.1875 Q2906.1719,951.1875 2906.8203,951.3516 Q2907.4688,951.5156 2908.0156,951.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="2925.75" y="960.9102">Entity</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2655" x2="3193" y1="972" y2="972"/><polygon fill="none" points="2665,978,2669,982,2665,986,2661,982" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2674" y="987.4189">descriptors_ : Descriptors</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2655" x2="3193" y1="993.8359" y2="993.8359"/><ellipse cx="2665" cy="1004.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="2674" y="1009.2549">Entity(const std::string&amp; metaid)</text><ellipse cx="2665" cy="1018.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="2674" y="1023.0908">Entity(const std::string&amp; metaid, const Resource&amp; definition)</text><ellipse cx="2665" cy="1032.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="2674" y="1036.9268">Entity(const std::string&amp; metaid, const Resource&amp; definition, const EntityDescriptor&amp; d)</text><ellipse cx="2665" cy="1046.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="2674" y="1050.7627">Entity(const std::string&amp; metaid, Resource&amp;&amp; definition, EntityDescriptor&amp;&amp; d)</text><ellipse cx="2665" cy="1060.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2674" y="1064.5986">Entity(const SingularAnnotation&amp; annotation)</text><ellipse cx="2665" cy="1074.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="2674" y="1078.4346">Entity(const Entity&amp; other)</text><ellipse cx="2665" cy="1087.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="2674" y="1092.2705">Entity(Entity&amp;&amp; other)</text><ellipse cx="2665" cy="1101.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2674" y="1106.1064">descriptors_() : ) ,</text><ellipse cx="2665" cy="1115.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="2674" y="1119.9424">getDescriptors() : Descriptors&amp; {query}</text><ellipse cx="2665" cy="1129.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2674" y="1133.7783">getDescriptors() : Descriptors&amp;</text><ellipse cx="2665" cy="1143.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="2674" y="1147.6143">getDescriptor(std::size_t k) : EntityDescriptor&amp; {query}</text><ellipse cx="2665" cy="1157.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2674" y="1161.4502">getDescriptor(std::size_t k) : EntityDescriptor&amp;</text><ellipse cx="2665" cy="1170.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2674" y="1175.2861">getNumDescriptors() : std::size_t {query}</text><ellipse cx="2665" cy="1184.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2674" y="1189.1221">humanize() : std::string {query}</text><polygon fill="#FFFF44" points="2665,1193.5391,2669,1197.5391,2665,1201.5391,2661,1197.5391" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="2674" y="1202.958">humanizeDescriptors() : std::string {query}</text><ellipse cx="2665" cy="1212.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="2674" y="1216.7939">addDescriptor(const EntityDescriptor&amp; d) : void</text><ellipse cx="2665" cy="1226.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="2674" y="1230.6299">addDescriptor(EntityDescriptor&amp;&amp; d) : void</text><ellipse cx="2665" cy="1240.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="514" x="2674" y="1244.4658">serializeToRDF(const URI&amp; sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}</text><!--MD5=[0b7aaed7880df208364e3e9f579573a8]
class omexmeta.EntityBase--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="380.0625" id="semsim.EntityBase" style="stroke: #A80036; stroke-width: 1.5;" width="758" x="2386" y="60"/><ellipse cx="2731.75" cy="76" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2734.5156,71.875 Q2734.6719,71.6563 2734.8594,71.5469 Q2735.0469,71.4375 2735.2656,71.4375 Q2735.6406,71.4375 2735.875,71.6953 Q2736.1094,71.9531 2736.1094,72.5625 L2736.1094,74.0156 Q2736.1094,74.625 2735.875,74.8906 Q2735.6406,75.1563 2735.2656,75.1563 Q2734.9219,75.1563 2734.7188,74.9531 Q2734.5156,74.7656 2734.4063,74.25 Q2734.3594,73.8906 2734.1719,73.7031 Q2733.8438,73.3281 2733.2344,73.1094 Q2732.625,72.8906 2732,72.8906 Q2731.2344,72.8906 2730.6016,73.2188 Q2729.9688,73.5469 2729.4766,74.2969 Q2728.9844,75.0469 2728.9844,76.0781 L2728.9844,77.1719 Q2728.9844,78.4063 2729.875,79.2266 Q2730.7656,80.0469 2732.3594,80.0469 Q2733.2969,80.0469 2733.9531,79.7969 Q2734.3438,79.6406 2734.7656,79.2031 Q2735.0313,78.9375 2735.1797,78.8594 Q2735.3281,78.7813 2735.5313,78.7813 Q2735.8594,78.7813 2736.1172,79.0391 Q2736.375,79.2969 2736.375,79.6406 Q2736.375,79.9844 2736.0313,80.3906 Q2735.5313,80.9688 2734.7344,81.2969 Q2733.6563,81.75 2732.3594,81.75 Q2730.8438,81.75 2729.6406,81.125 Q2728.6563,80.625 2727.9688,79.5547 Q2727.2813,78.4844 2727.2813,77.2031 L2727.2813,76.0469 Q2727.2813,74.7188 2727.8984,73.5703 Q2728.5156,72.4219 2729.6094,71.8047 Q2730.7031,71.1875 2731.9375,71.1875 Q2732.6719,71.1875 2733.3203,71.3516 Q2733.9688,71.5156 2734.5156,71.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="2752.25" y="80.9102">EntityBase</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2387" x2="3143" y1="92" y2="92"/><polygon fill="none" points="2397,98,2401,102,2397,106,2393,102" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="2406" y="107.4189">definitions_ : Definitions</text><polygon fill="none" points="2397,111.8359,2401,115.8359,2397,119.8359,2393,115.8359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="2406" y="121.2549">terms_ : Terms</text><ellipse cx="2397" cy="130.6719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="2406" y="135.0908">about_value_ : return</text><polygon fill="none" points="2397,139.5078,2401,143.5078,2397,147.5078,2393,143.5078" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="2406" y="148.9268">about_value_ : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2387" x2="3143" y1="155.3438" y2="155.3438"/><ellipse cx="2397" cy="166.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="2406" y="170.7627">EntityBase(std::string metaid, const Resource&amp; definition)</text><ellipse cx="2397" cy="180.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="732" x="2406" y="184.5986">EntityBase(EntityBase&amp;&amp; other) noexcept: about_value_(std::move(othermetaid_)), definitions_(std::move(otherdefinitions_)), terms_(std::move(otherterms_))</text><ellipse cx="2397" cy="194.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="2406" y="198.4346">EntityBase(std::string metaid, Resource&amp;&amp; definition)</text><ellipse cx="2397" cy="207.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="2406" y="212.2705">getDefinitions() : Definitions&amp; {query}</text><ellipse cx="2397" cy="221.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="2406" y="226.1064">getDefinitions() : Definitions&amp;</text><ellipse cx="2397" cy="235.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="2406" y="239.9424">getDefinition(std::size_t k) : Resource&amp; {query}</text><ellipse cx="2397" cy="249.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2406" y="253.7783">getURI(const URI&amp; base) : URI {query}</text><ellipse cx="2397" cy="263.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="2406" y="267.6143">isEmpty() : bool {query}</text><ellipse cx="2397" cy="277.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="2406" y="281.4502">matchesDefinition(const Resource&amp; definition) : bool</text><ellipse cx="2397" cy="290.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="2406" y="295.2861">getNumDefinitions() : std::size_t {query}</text><ellipse cx="2397" cy="304.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2406" y="309.1221">humanize() : std::string {query}</text><polygon fill="#FFFF44" points="2397,313.5391,2401,317.5391,2397,321.5391,2393,317.5391" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="2406" y="322.958">humanizeDefintions() : std::string {query}</text><ellipse cx="2397" cy="332.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2406" y="336.7939">toString(std::size_t indent) : std::string {query}</text><ellipse cx="2397" cy="346.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="2406" y="350.6299">addDefinition(const Resource&amp; definition) : void</text><ellipse cx="2397" cy="360.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="2406" y="364.4658">addExtraneousTerm(const Term&amp; term) : void</text><ellipse cx="2397" cy="373.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="2406" y="378.3018">addExtraneousTerm(Term&amp;&amp; term) : void</text><polygon fill="#FFFF44" points="2397,382.7188,2401,386.7188,2397,390.7188,2393,386.7188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="635" x="2406" y="392.1377">serializeDefinition(const Resource&amp; def, const URI&amp; sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}</text><polygon fill="#FFFF44" points="2397,396.5547,2401,400.5547,2397,404.5547,2393,400.5547" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="597" x="2406" y="405.9736">serializeTerm(const Term&amp; term, const URI&amp; sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}</text><ellipse cx="2397" cy="415.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="514" x="2406" y="419.8096">serializeToRDF(const URI&amp; sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}</text><ellipse cx="2397" cy="429.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="2406" y="433.6455">setMetaId(const std::string&amp; metaid) : void</text><!--MD5=[aacc367a5a45ff3d0dda25c047d23959]
class omexmeta.EntityDescriptor--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="227.8672" id="semsim.EntityDescriptor" style="stroke: #A80036; stroke-width: 1.5;" width="831" x="4245.5" y="136"/><ellipse cx="4613.75" cy="152" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4616.5156,147.875 Q4616.6719,147.6563 4616.8594,147.5469 Q4617.0469,147.4375 4617.2656,147.4375 Q4617.6406,147.4375 4617.875,147.6953 Q4618.1094,147.9531 4618.1094,148.5625 L4618.1094,150.0156 Q4618.1094,150.625 4617.875,150.8906 Q4617.6406,151.1563 4617.2656,151.1563 Q4616.9219,151.1563 4616.7188,150.9531 Q4616.5156,150.7656 4616.4063,150.25 Q4616.3594,149.8906 4616.1719,149.7031 Q4615.8438,149.3281 4615.2344,149.1094 Q4614.625,148.8906 4614,148.8906 Q4613.2344,148.8906 4612.6016,149.2188 Q4611.9688,149.5469 4611.4766,150.2969 Q4610.9844,151.0469 4610.9844,152.0781 L4610.9844,153.1719 Q4610.9844,154.4063 4611.875,155.2266 Q4612.7656,156.0469 4614.3594,156.0469 Q4615.2969,156.0469 4615.9531,155.7969 Q4616.3438,155.6406 4616.7656,155.2031 Q4617.0313,154.9375 4617.1797,154.8594 Q4617.3281,154.7813 4617.5313,154.7813 Q4617.8594,154.7813 4618.1172,155.0391 Q4618.375,155.2969 4618.375,155.6406 Q4618.375,155.9844 4618.0313,156.3906 Q4617.5313,156.9688 4616.7344,157.2969 Q4615.6563,157.75 4614.3594,157.75 Q4612.8438,157.75 4611.6406,157.125 Q4610.6563,156.625 4609.9688,155.5547 Q4609.2813,154.4844 4609.2813,153.2031 L4609.2813,152.0469 Q4609.2813,150.7188 4609.8984,149.5703 Q4610.5156,148.4219 4611.6094,147.8047 Q4612.7031,147.1875 4613.9375,147.1875 Q4614.6719,147.1875 4615.3203,147.3516 Q4615.9688,147.5156 4616.5156,147.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="4634.25" y="156.9102">EntityDescriptor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4246.5" x2="5075.5" y1="168" y2="168"/><polygon fill="none" points="4256.5,174,4260.5,178,4256.5,182,4252.5,178" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="4265.5" y="183.4189">terms_ : DescriptorTerms</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4246.5" x2="5075.5" y1="189.8359" y2="189.8359"/><ellipse cx="4256.5" cy="200.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="4265.5" y="205.2549">EntityDescriptor()</text><ellipse cx="4256.5" cy="214.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="4265.5" y="219.0908">EntityDescriptor(const EntityDescriptor&amp; other)</text><ellipse cx="4256.5" cy="228.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="4265.5" y="232.9268">EntityDescriptor(EntityDescriptor&amp;&amp; other)</text><ellipse cx="4256.5" cy="242.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="4265.5" y="246.7627">EntityDescriptor(std::initializer_list&lt;T&gt; l)</text><ellipse cx="4256.5" cy="256.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="4265.5" y="260.5986">isEmpty() : bool {query}</text><ellipse cx="4256.5" cy="270.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="4265.5" y="274.4346">humanize() : std::string {query}</text><polygon fill="#FFFF44" points="4256.5,278.8516,4260.5,282.8516,4256.5,286.8516,4252.5,282.8516" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="4265.5" y="288.2705">humanizeTerms() : std::string {query}</text><ellipse cx="4256.5" cy="297.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="4265.5" y="302.1064">addTerm(const DescriptorTerm&amp; t) : void</text><ellipse cx="4256.5" cy="311.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="4265.5" y="315.9424">addTerm(DescriptorTerm&amp;&amp; t) : void</text><ellipse cx="4256.5" cy="325.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="4265.5" y="329.7783">addTerm(const Relation&amp; relation, const Resource&amp; resource) : void</text><polygon fill="#FFFF44" points="4256.5,334.1953,4260.5,338.1953,4256.5,342.1953,4252.5,338.1953" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="805" x="4265.5" y="343.6143">serializeDescriptorTermToRDF(const DescriptorTerm&amp; term, const URI&amp; linked_uri, const URI&amp; term_uri, raptor_world* world, raptor_serializer* serializer) : void {query}</text><ellipse cx="4256.5" cy="353.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="639" x="4265.5" y="357.4502">serializeToRDF(const URI&amp; sbml_base_uri, const std::string&amp; metaid, raptor_world* world, raptor_serializer* serializer) : void {query}</text><!--MD5=[56a12410ddf8cec595a9a7a90b01741d]
class omexmeta.Exception--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="117.1797" id="semsim.Exception" style="stroke: #A80036; stroke-width: 1.5;" width="184" x="1576" y="191.5"/><ellipse cx="1637.25" cy="207.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1640.0156,203.375 Q1640.1719,203.1563 1640.3594,203.0469 Q1640.5469,202.9375 1640.7656,202.9375 Q1641.1406,202.9375 1641.375,203.1953 Q1641.6094,203.4531 1641.6094,204.0625 L1641.6094,205.5156 Q1641.6094,206.125 1641.375,206.3906 Q1641.1406,206.6563 1640.7656,206.6563 Q1640.4219,206.6563 1640.2188,206.4531 Q1640.0156,206.2656 1639.9063,205.75 Q1639.8594,205.3906 1639.6719,205.2031 Q1639.3438,204.8281 1638.7344,204.6094 Q1638.125,204.3906 1637.5,204.3906 Q1636.7344,204.3906 1636.1016,204.7188 Q1635.4688,205.0469 1634.9766,205.7969 Q1634.4844,206.5469 1634.4844,207.5781 L1634.4844,208.6719 Q1634.4844,209.9063 1635.375,210.7266 Q1636.2656,211.5469 1637.8594,211.5469 Q1638.7969,211.5469 1639.4531,211.2969 Q1639.8438,211.1406 1640.2656,210.7031 Q1640.5313,210.4375 1640.6797,210.3594 Q1640.8281,210.2813 1641.0313,210.2813 Q1641.3594,210.2813 1641.6172,210.5391 Q1641.875,210.7969 1641.875,211.1406 Q1641.875,211.4844 1641.5313,211.8906 Q1641.0313,212.4688 1640.2344,212.7969 Q1639.1563,213.25 1637.8594,213.25 Q1636.3438,213.25 1635.1406,212.625 Q1634.1563,212.125 1633.4688,211.0547 Q1632.7813,209.9844 1632.7813,208.7031 L1632.7813,207.5469 Q1632.7813,206.2188 1633.3984,205.0703 Q1634.0156,203.9219 1635.1094,203.3047 Q1636.2031,202.6875 1637.4375,202.6875 Q1638.1719,202.6875 1638.8203,202.8516 Q1639.4688,203.0156 1640.0156,203.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="53" x="1657.75" y="212.4102">Exception</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1577" x2="1759" y1="223.5" y2="223.5"/><polygon fill="none" points="1587,229.5,1591,233.5,1587,237.5,1583,233.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="1596" y="238.9189">msg_ : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1577" x2="1759" y1="245.3359" y2="245.3359"/><ellipse cx="1587" cy="256.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="1596" y="260.7549">Exception(const char* message)</text><ellipse cx="1587" cy="270.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1596" y="274.5908">Exception(std::string message)</text><ellipse cx="1587" cy="284.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="1596" y="288.4268">~Exception()</text><ellipse cx="1587" cy="297.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1596" y="302.2627">what() : char* {query}</text><!--MD5=[a1aaf60b6c0219e36a1df6a96ca8eb74]
class omexmeta.GO--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="61.8359" id="semsim.GO" style="stroke: #A80036; stroke-width: 1.5;" width="178" x="977" y="652"/><ellipse cx="1052.75" cy="668" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1055.5156,663.875 Q1055.6719,663.6563 1055.8594,663.5469 Q1056.0469,663.4375 1056.2656,663.4375 Q1056.6406,663.4375 1056.875,663.6953 Q1057.1094,663.9531 1057.1094,664.5625 L1057.1094,666.0156 Q1057.1094,666.625 1056.875,666.8906 Q1056.6406,667.1563 1056.2656,667.1563 Q1055.9219,667.1563 1055.7188,666.9531 Q1055.5156,666.7656 1055.4063,666.25 Q1055.3594,665.8906 1055.1719,665.7031 Q1054.8438,665.3281 1054.2344,665.1094 Q1053.625,664.8906 1053,664.8906 Q1052.2344,664.8906 1051.6016,665.2188 Q1050.9688,665.5469 1050.4766,666.2969 Q1049.9844,667.0469 1049.9844,668.0781 L1049.9844,669.1719 Q1049.9844,670.4063 1050.875,671.2266 Q1051.7656,672.0469 1053.3594,672.0469 Q1054.2969,672.0469 1054.9531,671.7969 Q1055.3438,671.6406 1055.7656,671.2031 Q1056.0313,670.9375 1056.1797,670.8594 Q1056.3281,670.7813 1056.5313,670.7813 Q1056.8594,670.7813 1057.1172,671.0391 Q1057.375,671.2969 1057.375,671.6406 Q1057.375,671.9844 1057.0313,672.3906 Q1056.5313,672.9688 1055.7344,673.2969 Q1054.6563,673.75 1053.3594,673.75 Q1051.8438,673.75 1050.6406,673.125 Q1049.6563,672.625 1048.9688,671.5547 Q1048.2813,670.4844 1048.2813,669.2031 L1048.2813,668.0469 Q1048.2813,666.7188 1048.8984,665.5703 Q1049.5156,664.4219 1050.6094,663.8047 Q1051.7031,663.1875 1052.9375,663.1875 Q1053.6719,663.1875 1054.3203,663.3516 Q1054.9688,663.5156 1055.5156,663.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="18" x="1073.25" y="672.9102">GO</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="978" x2="1154" y1="684" y2="684"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="978" x2="1154" y1="692" y2="692"/><ellipse cx="988" cy="703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="152" x="997" y="707.4189">get(OntologyTerm t) : Resource</text><!--MD5=[f71e509d6e94fabd562d6d342c34e461]
class omexmeta.IdentityCondition--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="103.3438" id="semsim.IdentityCondition" style="stroke: #A80036; stroke-width: 1.5;" width="290" x="1268" y="1044"/><ellipse cx="1363.25" cy="1060" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1366.0156,1055.875 Q1366.1719,1055.6563 1366.3594,1055.5469 Q1366.5469,1055.4375 1366.7656,1055.4375 Q1367.1406,1055.4375 1367.375,1055.6953 Q1367.6094,1055.9531 1367.6094,1056.5625 L1367.6094,1058.0156 Q1367.6094,1058.625 1367.375,1058.8906 Q1367.1406,1059.1563 1366.7656,1059.1563 Q1366.4219,1059.1563 1366.2188,1058.9531 Q1366.0156,1058.7656 1365.9063,1058.25 Q1365.8594,1057.8906 1365.6719,1057.7031 Q1365.3438,1057.3281 1364.7344,1057.1094 Q1364.125,1056.8906 1363.5,1056.8906 Q1362.7344,1056.8906 1362.1016,1057.2188 Q1361.4688,1057.5469 1360.9766,1058.2969 Q1360.4844,1059.0469 1360.4844,1060.0781 L1360.4844,1061.1719 Q1360.4844,1062.4063 1361.375,1063.2266 Q1362.2656,1064.0469 1363.8594,1064.0469 Q1364.7969,1064.0469 1365.4531,1063.7969 Q1365.8438,1063.6406 1366.2656,1063.2031 Q1366.5313,1062.9375 1366.6797,1062.8594 Q1366.8281,1062.7813 1367.0313,1062.7813 Q1367.3594,1062.7813 1367.6172,1063.0391 Q1367.875,1063.2969 1367.875,1063.6406 Q1367.875,1063.9844 1367.5313,1064.3906 Q1367.0313,1064.9688 1366.2344,1065.2969 Q1365.1563,1065.75 1363.8594,1065.75 Q1362.3438,1065.75 1361.1406,1065.125 Q1360.1563,1064.625 1359.4688,1063.5547 Q1358.7813,1062.4844 1358.7813,1061.2031 L1358.7813,1060.0469 Q1358.7813,1058.7188 1359.3984,1057.5703 Q1360.0156,1056.4219 1361.1094,1055.8047 Q1362.2031,1055.1875 1363.4375,1055.1875 Q1364.1719,1055.1875 1364.8203,1055.3516 Q1365.4688,1055.5156 1366.0156,1055.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="1383.75" y="1064.9102">IdentityCondition</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1269" x2="1557" y1="1076" y2="1076"/><polygon fill="none" points="1279,1082,1283,1086,1279,1090,1275,1086" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="1288" y="1091.4189">is_version_of_value_ : Resource</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1269" x2="1557" y1="1097.8359" y2="1097.8359"/><ellipse cx="1279" cy="1108.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1288" y="1113.2549">IdentityCondition(Resource resource)</text><ellipse cx="1279" cy="1122.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="1288" y="1127.0908">matchEntity(const EntityBase&amp; entity) : bool {query}</text><ellipse cx="1279" cy="1136.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264" x="1288" y="1140.9268">matches(const Component&amp; component) : bool {query}</text><!--MD5=[6346e31d09662a6763b59c5199d0ee18]
class omexmeta.Mediator--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="131.0156" id="semsim.Mediator" style="stroke: #A80036; stroke-width: 1.5;" width="536" x="2025" y="1387.5"/><ellipse cx="2265.25" cy="1403.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2268.0156,1399.375 Q2268.1719,1399.1563 2268.3594,1399.0469 Q2268.5469,1398.9375 2268.7656,1398.9375 Q2269.1406,1398.9375 2269.375,1399.1953 Q2269.6094,1399.4531 2269.6094,1400.0625 L2269.6094,1401.5156 Q2269.6094,1402.125 2269.375,1402.3906 Q2269.1406,1402.6563 2268.7656,1402.6563 Q2268.4219,1402.6563 2268.2188,1402.4531 Q2268.0156,1402.2656 2267.9063,1401.75 Q2267.8594,1401.3906 2267.6719,1401.2031 Q2267.3438,1400.8281 2266.7344,1400.6094 Q2266.125,1400.3906 2265.5,1400.3906 Q2264.7344,1400.3906 2264.1016,1400.7188 Q2263.4688,1401.0469 2262.9766,1401.7969 Q2262.4844,1402.5469 2262.4844,1403.5781 L2262.4844,1404.6719 Q2262.4844,1405.9063 2263.375,1406.7266 Q2264.2656,1407.5469 2265.8594,1407.5469 Q2266.7969,1407.5469 2267.4531,1407.2969 Q2267.8438,1407.1406 2268.2656,1406.7031 Q2268.5313,1406.4375 2268.6797,1406.3594 Q2268.8281,1406.2813 2269.0313,1406.2813 Q2269.3594,1406.2813 2269.6172,1406.5391 Q2269.875,1406.7969 2269.875,1407.1406 Q2269.875,1407.4844 2269.5313,1407.8906 Q2269.0313,1408.4688 2268.2344,1408.7969 Q2267.1563,1409.25 2265.8594,1409.25 Q2264.3438,1409.25 2263.1406,1408.625 Q2262.1563,1408.125 2261.4688,1407.0547 Q2260.7813,1405.9844 2260.7813,1404.7031 L2260.7813,1403.5469 Q2260.7813,1402.2188 2261.3984,1401.0703 Q2262.0156,1399.9219 2263.1094,1399.3047 Q2264.2031,1398.6875 2265.4375,1398.6875 Q2266.1719,1398.6875 2266.8203,1398.8516 Q2267.4688,1399.0156 2268.0156,1399.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="47" x="2285.75" y="1408.4102">Mediator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2026" x2="2560" y1="1419.5" y2="1419.5"/><polygon fill="none" points="2036,1425.5,2040,1429.5,2036,1433.5,2032,1429.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2045" y="1434.9189">component_ : Component*</text><polygon fill="none" points="2036,1439.3359,2040,1443.3359,2036,1447.3359,2032,1443.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2045" y="1448.7549">multiplier_ : double</text><polygon fill="none" points="2036,1453.1719,2040,1457.1719,2036,1461.1719,2032,1457.1719" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="2045" y="1462.5908">id_ : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2026" x2="2560" y1="1469.0078" y2="1469.0078"/><ellipse cx="2036" cy="1480.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="2045" y="1484.4268">Mediator(const std::string&amp; id, Component* component, double multiplier)</text><ellipse cx="2036" cy="1493.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="510" x="2045" y="1498.2627">serializeToRDF(const URI&amp; sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : URI {query}</text><ellipse cx="2036" cy="1507.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="2045" y="1512.0986">containsMetaId(const std::string&amp; metaid) : bool {query}</text><!--MD5=[1be1574ca4bf504a271a4eccd224004b]
class omexmeta.MetaID-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="75.6719" id="semsim.MetaID"
          style="stroke: #A80036; stroke-width: 1.5;" width="370" x="3550" y="645"/>
    <ellipse cx="3711.75" cy="661" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M3714.5156,656.875 Q3714.6719,656.6563 3714.8594,656.5469 Q3715.0469,656.4375 3715.2656,656.4375 Q3715.6406,656.4375 3715.875,656.6953 Q3716.1094,656.9531 3716.1094,657.5625 L3716.1094,659.0156 Q3716.1094,659.625 3715.875,659.8906 Q3715.6406,660.1563 3715.2656,660.1563 Q3714.9219,660.1563 3714.7188,659.9531 Q3714.5156,659.7656 3714.4063,659.25 Q3714.3594,658.8906 3714.1719,658.7031 Q3713.8438,658.3281 3713.2344,658.1094 Q3712.625,657.8906 3712,657.8906 Q3711.2344,657.8906 3710.6016,658.2188 Q3709.9688,658.5469 3709.4766,659.2969 Q3708.9844,660.0469 3708.9844,661.0781 L3708.9844,662.1719 Q3708.9844,663.4063 3709.875,664.2266 Q3710.7656,665.0469 3712.3594,665.0469 Q3713.2969,665.0469 3713.9531,664.7969 Q3714.3438,664.6406 3714.7656,664.2031 Q3715.0313,663.9375 3715.1797,663.8594 Q3715.3281,663.7813 3715.5313,663.7813 Q3715.8594,663.7813 3716.1172,664.0391 Q3716.375,664.2969 3716.375,664.6406 Q3716.375,664.9844 3716.0313,665.3906 Q3715.5313,665.9688 3714.7344,666.2969 Q3713.6563,666.75 3712.3594,666.75 Q3710.8438,666.75 3709.6406,666.125 Q3708.6563,665.625 3707.9688,664.5547 Q3707.2813,663.4844 3707.2813,662.2031 L3707.2813,661.0469 Q3707.2813,659.7188 3707.8984,658.5703 Q3708.5156,657.4219 3709.6094,656.8047 Q3710.7031,656.1875 3711.9375,656.1875 Q3712.6719,656.1875 3713.3203,656.3516 Q3713.9688,656.5156 3714.5156,656.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38"
          x="3732.25" y="665.9102">MetaID
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="3551" x2="3919" y1="677" y2="677"/>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="3551" x2="3919" y1="685" y2="685"/>
    <ellipse cx="3561" cy="696" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="344" x="3570" y="700.4189">contains(libsbml::Model* m, const
        std::string&amp; metaid) : bool
    </text>
    <ellipse cx="3561" cy="709.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="187" x="3570" y="714.2549">assignMetaIds(libsbml::Model* m) : void
    </text><!--MD5=[43d39757e2101634a31fd9ccafa6abad]
class omexmeta.NullPointerException-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="61.8359" id="semsim.NullPointerException"
          style="stroke: #A80036; stroke-width: 1.5;" width="164" x="1616" y="652"/>
    <ellipse cx="1639.1" cy="668" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M1641.8656,663.875 Q1642.0219,663.6563 1642.2094,663.5469 Q1642.3969,663.4375 1642.6156,663.4375 Q1642.9906,663.4375 1643.225,663.6953 Q1643.4594,663.9531 1643.4594,664.5625 L1643.4594,666.0156 Q1643.4594,666.625 1643.225,666.8906 Q1642.9906,667.1563 1642.6156,667.1563 Q1642.2719,667.1563 1642.0688,666.9531 Q1641.8656,666.7656 1641.7563,666.25 Q1641.7094,665.8906 1641.5219,665.7031 Q1641.1938,665.3281 1640.5844,665.1094 Q1639.975,664.8906 1639.35,664.8906 Q1638.5844,664.8906 1637.9516,665.2188 Q1637.3188,665.5469 1636.8266,666.2969 Q1636.3344,667.0469 1636.3344,668.0781 L1636.3344,669.1719 Q1636.3344,670.4063 1637.225,671.2266 Q1638.1156,672.0469 1639.7094,672.0469 Q1640.6469,672.0469 1641.3031,671.7969 Q1641.6938,671.6406 1642.1156,671.2031 Q1642.3813,670.9375 1642.5297,670.8594 Q1642.6781,670.7813 1642.8813,670.7813 Q1643.2094,670.7813 1643.4672,671.0391 Q1643.725,671.2969 1643.725,671.6406 Q1643.725,671.9844 1643.3813,672.3906 Q1642.8813,672.9688 1642.0844,673.2969 Q1641.0063,673.75 1639.7094,673.75 Q1638.1938,673.75 1636.9906,673.125 Q1636.0063,672.625 1635.3188,671.5547 Q1634.6313,670.4844 1634.6313,669.2031 L1634.6313,668.0469 Q1634.6313,666.7188 1635.2484,665.5703 Q1635.8656,664.4219 1636.9594,663.8047 Q1638.0531,663.1875 1639.2875,663.1875 Q1640.0219,663.1875 1640.6703,663.3516 Q1641.3188,663.5156 1641.8656,663.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="114"
          x="1654.9" y="672.9102">NullPointerException
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="1617" x2="1779" y1="684" y2="684"/>
    <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1624" y="692"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138"
          x="1636" y="699.4189">Exception : using Exception::
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="1617" x2="1779" y1="705.8359" y2="705.8359"/><!--MD5=[0f6d858529fa471ceaab802240ab9bad]
class omexmeta.OPB-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="61.8359" id="semsim.OPB"
          style="stroke: #A80036; stroke-width: 1.5;" width="178" x="1190" y="652"/>
    <ellipse cx="1262.25" cy="668" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M1265.0156,663.875 Q1265.1719,663.6563 1265.3594,663.5469 Q1265.5469,663.4375 1265.7656,663.4375 Q1266.1406,663.4375 1266.375,663.6953 Q1266.6094,663.9531 1266.6094,664.5625 L1266.6094,666.0156 Q1266.6094,666.625 1266.375,666.8906 Q1266.1406,667.1563 1265.7656,667.1563 Q1265.4219,667.1563 1265.2188,666.9531 Q1265.0156,666.7656 1264.9063,666.25 Q1264.8594,665.8906 1264.6719,665.7031 Q1264.3438,665.3281 1263.7344,665.1094 Q1263.125,664.8906 1262.5,664.8906 Q1261.7344,664.8906 1261.1016,665.2188 Q1260.4688,665.5469 1259.9766,666.2969 Q1259.4844,667.0469 1259.4844,668.0781 L1259.4844,669.1719 Q1259.4844,670.4063 1260.375,671.2266 Q1261.2656,672.0469 1262.8594,672.0469 Q1263.7969,672.0469 1264.4531,671.7969 Q1264.8438,671.6406 1265.2656,671.2031 Q1265.5313,670.9375 1265.6797,670.8594 Q1265.8281,670.7813 1266.0313,670.7813 Q1266.3594,670.7813 1266.6172,671.0391 Q1266.875,671.2969 1266.875,671.6406 Q1266.875,671.9844 1266.5313,672.3906 Q1266.0313,672.9688 1265.2344,673.2969 Q1264.1563,673.75 1262.8594,673.75 Q1261.3438,673.75 1260.1406,673.125 Q1259.1563,672.625 1258.4688,671.5547 Q1257.7813,670.4844 1257.7813,669.2031 L1257.7813,668.0469 Q1257.7813,666.7188 1258.3984,665.5703 Q1259.0156,664.4219 1260.1094,663.8047 Q1261.2031,663.1875 1262.4375,663.1875 Q1263.1719,663.1875 1263.8203,663.3516 Q1264.4688,663.5156 1265.0156,663.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="25"
          x="1282.75" y="672.9102">OPB
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="1191" x2="1367" y1="684" y2="684"/>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="1191" x2="1367" y1="692" y2="692"/>
    <ellipse cx="1201" cy="703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="152" x="1210" y="707.4189">get(OntologyTerm t) : Resource
    </text><!--MD5=[dffa8d51bbdc8803ad4eb21d20b70f3b]
class omexmeta.Ontology-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="61.8359" id="semsim.Ontology"
          style="stroke: #A80036; stroke-width: 1.5;" width="360" x="886" y="219"/>
    <ellipse cx="1037.75" cy="235" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M1040.5156,230.875 Q1040.6719,230.6563 1040.8594,230.5469 Q1041.0469,230.4375 1041.2656,230.4375 Q1041.6406,230.4375 1041.875,230.6953 Q1042.1094,230.9531 1042.1094,231.5625 L1042.1094,233.0156 Q1042.1094,233.625 1041.875,233.8906 Q1041.6406,234.1563 1041.2656,234.1563 Q1040.9219,234.1563 1040.7188,233.9531 Q1040.5156,233.7656 1040.4063,233.25 Q1040.3594,232.8906 1040.1719,232.7031 Q1039.8438,232.3281 1039.2344,232.1094 Q1038.625,231.8906 1038,231.8906 Q1037.2344,231.8906 1036.6016,232.2188 Q1035.9688,232.5469 1035.4766,233.2969 Q1034.9844,234.0469 1034.9844,235.0781 L1034.9844,236.1719 Q1034.9844,237.4063 1035.875,238.2266 Q1036.7656,239.0469 1038.3594,239.0469 Q1039.2969,239.0469 1039.9531,238.7969 Q1040.3438,238.6406 1040.7656,238.2031 Q1041.0313,237.9375 1041.1797,237.8594 Q1041.3281,237.7813 1041.5313,237.7813 Q1041.8594,237.7813 1042.1172,238.0391 Q1042.375,238.2969 1042.375,238.6406 Q1042.375,238.9844 1042.0313,239.3906 Q1041.5313,239.9688 1040.7344,240.2969 Q1039.6563,240.75 1038.3594,240.75 Q1036.8438,240.75 1035.6406,240.125 Q1034.6563,239.625 1033.9688,238.5547 Q1033.2813,237.4844 1033.2813,236.2031 L1033.2813,235.0469 Q1033.2813,233.7188 1033.8984,232.5703 Q1034.5156,231.4219 1035.6094,230.8047 Q1036.7031,230.1875 1037.9375,230.1875 Q1038.6719,230.1875 1039.3203,230.3516 Q1039.9688,230.5156 1040.5156,230.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48"
          x="1058.25" y="239.9102">Ontology
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="887" x2="1245" y1="251" y2="251"/>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="887" x2="1245" y1="259" y2="259"/>
    <ellipse cx="897" cy="270" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="334" x="906" y="274.4189">resolve(const std::string&amp; root,
        unsigned int t, int n_digits) : Resource
    </text><!--MD5=[04dfddebbc278430cc13b5cc667e3434]
class omexmeta.Participant-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="61.8359" id="semsim.Participant"
          style="stroke: #A80036; stroke-width: 1.5;" width="90" x="3229" y="1064.5"/>
    <ellipse cx="3244" cy="1080.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M3246.7656,1076.375 Q3246.9219,1076.1563 3247.1094,1076.0469 Q3247.2969,1075.9375 3247.5156,1075.9375 Q3247.8906,1075.9375 3248.125,1076.1953 Q3248.3594,1076.4531 3248.3594,1077.0625 L3248.3594,1078.5156 Q3248.3594,1079.125 3248.125,1079.3906 Q3247.8906,1079.6563 3247.5156,1079.6563 Q3247.1719,1079.6563 3246.9688,1079.4531 Q3246.7656,1079.2656 3246.6563,1078.75 Q3246.6094,1078.3906 3246.4219,1078.2031 Q3246.0938,1077.8281 3245.4844,1077.6094 Q3244.875,1077.3906 3244.25,1077.3906 Q3243.4844,1077.3906 3242.8516,1077.7188 Q3242.2188,1078.0469 3241.7266,1078.7969 Q3241.2344,1079.5469 3241.2344,1080.5781 L3241.2344,1081.6719 Q3241.2344,1082.9063 3242.125,1083.7266 Q3243.0156,1084.5469 3244.6094,1084.5469 Q3245.5469,1084.5469 3246.2031,1084.2969 Q3246.5938,1084.1406 3247.0156,1083.7031 Q3247.2813,1083.4375 3247.4297,1083.3594 Q3247.5781,1083.2813 3247.7813,1083.2813 Q3248.1094,1083.2813 3248.3672,1083.5391 Q3248.625,1083.7969 3248.625,1084.1406 Q3248.625,1084.4844 3248.2813,1084.8906 Q3247.7813,1085.4688 3246.9844,1085.7969 Q3245.9063,1086.25 3244.6094,1086.25 Q3243.0938,1086.25 3241.8906,1085.625 Q3240.9063,1085.125 3240.2188,1084.0547 Q3239.5313,1082.9844 3239.5313,1081.7031 L3239.5313,1080.5469 Q3239.5313,1079.2188 3240.1484,1078.0703 Q3240.7656,1076.9219 3241.8594,1076.3047 Q3242.9531,1075.6875 3244.1875,1075.6875 Q3244.9219,1075.6875 3245.5703,1075.8516 Q3246.2188,1076.0156 3246.7656,1076.375 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58"
          x="3258" y="1085.4102">Participant
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="3230" x2="3318" y1="1096.5" y2="1096.5"/>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="3230" x2="3318" y1="1104.5" y2="1104.5"/>
    <ellipse cx="3240" cy="1115.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64"
          x="3249" y="1119.9189">~Participant()
    </text><!--MD5=[284ac86e2690ee7954fa8c9b9c05fb4e]
class omexmeta.PhysicalProperty-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="158.6875" id="semsim.PhysicalProperty"
          style="stroke: #A80036; stroke-width: 1.5;" width="247" x="985.5" y="1016"/>
    <ellipse cx="1059.25" cy="1032" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M1062.0156,1027.875 Q1062.1719,1027.6563 1062.3594,1027.5469 Q1062.5469,1027.4375 1062.7656,1027.4375 Q1063.1406,1027.4375 1063.375,1027.6953 Q1063.6094,1027.9531 1063.6094,1028.5625 L1063.6094,1030.0156 Q1063.6094,1030.625 1063.375,1030.8906 Q1063.1406,1031.1563 1062.7656,1031.1563 Q1062.4219,1031.1563 1062.2188,1030.9531 Q1062.0156,1030.7656 1061.9063,1030.25 Q1061.8594,1029.8906 1061.6719,1029.7031 Q1061.3438,1029.3281 1060.7344,1029.1094 Q1060.125,1028.8906 1059.5,1028.8906 Q1058.7344,1028.8906 1058.1016,1029.2188 Q1057.4688,1029.5469 1056.9766,1030.2969 Q1056.4844,1031.0469 1056.4844,1032.0781 L1056.4844,1033.1719 Q1056.4844,1034.4063 1057.375,1035.2266 Q1058.2656,1036.0469 1059.8594,1036.0469 Q1060.7969,1036.0469 1061.4531,1035.7969 Q1061.8438,1035.6406 1062.2656,1035.2031 Q1062.5313,1034.9375 1062.6797,1034.8594 Q1062.8281,1034.7813 1063.0313,1034.7813 Q1063.3594,1034.7813 1063.6172,1035.0391 Q1063.875,1035.2969 1063.875,1035.6406 Q1063.875,1035.9844 1063.5313,1036.3906 Q1063.0313,1036.9688 1062.2344,1037.2969 Q1061.1563,1037.75 1059.8594,1037.75 Q1058.3438,1037.75 1057.1406,1037.125 Q1056.1563,1036.625 1055.4688,1035.5547 Q1054.7813,1034.4844 1054.7813,1033.2031 L1054.7813,1032.0469 Q1054.7813,1030.7188 1055.3984,1029.5703 Q1056.0156,1028.4219 1057.1094,1027.8047 Q1058.2031,1027.1875 1059.4375,1027.1875 Q1060.1719,1027.1875 1060.8203,1027.3516 Q1061.4688,1027.5156 1062.0156,1027.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91"
          x="1079.75" y="1036.9102">PhysicalProperty
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="986.5" x2="1231.5" y1="1048" y2="1048"/>
    <polygon fill="none" points="996.5,1054,1000.5,1058,996.5,1062,992.5,1058"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106"
          x="1005.5" y="1063.4189">is_version_of_value_ : Resource
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="986.5" x2="1231.5" y1="1069.8359" y2="1069.8359"/>
    <ellipse cx="996.5" cy="1080.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220"
          x="1005.5" y="1085.2549">PhysicalProperty(const Resource&amp; resource)
    </text>
    <ellipse cx="996.5" cy="1094.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197"
          x="1005.5" y="1099.0908">PhysicalProperty(Resource&amp;&amp; resource)
    </text>
    <ellipse cx="996.5" cy="1108.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221"
          x="1005.5" y="1112.9268">PhysicalProperty(const std::string&amp; resource)
    </text>
    <ellipse cx="996.5" cy="1122.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198"
          x="1005.5" y="1126.7627">PhysicalProperty(std::string&amp;&amp; resource)
    </text>
    <ellipse cx="996.5" cy="1136.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172"
          x="1005.5" y="1140.5986">getResourceNode() : Resource&amp; {query}
    </text>
    <ellipse cx="996.5" cy="1150.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133"
          x="1005.5" y="1154.4346">getResourceNode() : Resource&amp;
    </text>
    <ellipse cx="996.5" cy="1163.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150"
          x="1005.5" y="1168.2705">humanize() : std::string {query}
    </text><!--MD5=[9d9fea588bded78c9ff0fd3d46fe24d8]
class omexmeta.Process-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="283.2109" id="semsim.Process"
          style="stroke: #A80036; stroke-width: 1.5;" width="540" x="2023" y="2164"/>
    <ellipse cx="2265.75" cy="2180" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M2268.5156,2175.875 Q2268.6719,2175.6563 2268.8594,2175.5469 Q2269.0469,2175.4375 2269.2656,2175.4375 Q2269.6406,2175.4375 2269.875,2175.6953 Q2270.1094,2175.9531 2270.1094,2176.5625 L2270.1094,2178.0156 Q2270.1094,2178.625 2269.875,2178.8906 Q2269.6406,2179.1563 2269.2656,2179.1563 Q2268.9219,2179.1563 2268.7188,2178.9531 Q2268.5156,2178.7656 2268.4063,2178.25 Q2268.3594,2177.8906 2268.1719,2177.7031 Q2267.8438,2177.3281 2267.2344,2177.1094 Q2266.625,2176.8906 2266,2176.8906 Q2265.2344,2176.8906 2264.6016,2177.2188 Q2263.9688,2177.5469 2263.4766,2178.2969 Q2262.9844,2179.0469 2262.9844,2180.0781 L2262.9844,2181.1719 Q2262.9844,2182.4063 2263.875,2183.2266 Q2264.7656,2184.0469 2266.3594,2184.0469 Q2267.2969,2184.0469 2267.9531,2183.7969 Q2268.3438,2183.6406 2268.7656,2183.2031 Q2269.0313,2182.9375 2269.1797,2182.8594 Q2269.3281,2182.7813 2269.5313,2182.7813 Q2269.8594,2182.7813 2270.1172,2183.0391 Q2270.375,2183.2969 2270.375,2183.6406 Q2270.375,2183.9844 2270.0313,2184.3906 Q2269.5313,2184.9688 2268.7344,2185.2969 Q2267.6563,2185.75 2266.3594,2185.75 Q2264.8438,2185.75 2263.6406,2185.125 Q2262.6563,2184.625 2261.9688,2183.5547 Q2261.2813,2182.4844 2261.2813,2181.2031 L2261.2813,2180.0469 Q2261.2813,2178.7188 2261.8984,2177.5703 Q2262.5156,2176.4219 2263.6094,2175.8047 Q2264.7031,2175.1875 2265.9375,2175.1875 Q2266.6719,2175.1875 2267.3203,2175.3516 Q2267.9688,2175.5156 2268.5156,2175.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="46"
          x="2286.25" y="2184.9102">Process
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="2024" x2="2562" y1="2196" y2="2196"/>
    <polygon fill="none" points="2034,2202,2038,2206,2034,2210,2030,2206" style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109"
          x="2043" y="2211.4189">mediators_ : Mediators
    </text>
    <polygon fill="none" points="2034,2215.8359,2038,2219.8359,2034,2223.8359,2030,2219.8359"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66"
          x="2043" y="2225.2549">sinks_ : Sinks
    </text>
    <polygon fill="none" points="2034,2229.6719,2038,2233.6719,2034,2237.6719,2030,2233.6719"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96"
          x="2043" y="2239.0908">sources_ : Sources
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="2024" x2="2562" y1="2245.5078" y2="2245.5078"/>
    <ellipse cx="2034" cy="2256.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48"
          x="2043" y="2260.9268">Process()
    </text>
    <ellipse cx="2034" cy="2270.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229"
          x="2043" y="2274.7627">Process(const SingularAnnotation&amp; annotation)
    </text>
    <ellipse cx="2034" cy="2284.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206"
          x="2043" y="2288.5986">Process(SingularAnnotation&amp;&amp; annotation)
    </text>
    <ellipse cx="2034" cy="2298.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240"
          x="2043" y="2302.4346">Process(const CompositeAnnotation&amp; annotation)
    </text>
    <ellipse cx="2034" cy="2311.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217"
          x="2043" y="2316.2705">Process(CompositeAnnotation&amp;&amp; annotation)
    </text>
    <ellipse cx="2034" cy="2325.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153"
          x="2043" y="2330.1064">Process(const Process&amp; other)
    </text>
    <ellipse cx="2034" cy="2339.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130"
          x="2043" y="2343.9424">Process(Process&amp;&amp; other)
    </text>
    <ellipse cx="2034" cy="2353.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140"
          x="2043" y="2357.7783">clone() : Component* {query}
    </text>
    <ellipse cx="2034" cy="2367.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267"
          x="2043" y="2371.6143">containsMetaId(const std::string&amp; metaid) : bool {query}
    </text>
    <ellipse cx="2034" cy="2381.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124"
          x="2043" y="2385.4502">isProcess() : bool {query}
    </text>
    <ellipse cx="2034" cy="2394.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218"
          x="2043" y="2399.2861">addMediator(const Mediator&amp; mediator) : void
    </text>
    <ellipse cx="2034" cy="2408.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154"
          x="2043" y="2413.1221">addSink(const Sink&amp; sink) : void
    </text>
    <ellipse cx="2034" cy="2422.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199"
          x="2043" y="2426.958">addSource(const Source&amp; source) : void
    </text>
    <ellipse cx="2034" cy="2436.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="514"
          x="2043" y="2440.7939">serializeToRDF(const URI&amp; sbml_base_uri, raptor_world* world, raptor_serializer*
        serializer) : void {query}
    </text><!--MD5=[243520c22403cdc2cf2e613e04b7acbd]
class omexmeta.Query-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="75.6719" id="semsim.Query"
          style="stroke: #A80036; stroke-width: 1.5;" width="275" x="3955.5" y="645"/>
    <ellipse cx="4072.25" cy="661" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M4074.4375,662.7656 L4070.2969,662.7656 L4069.875,663.7969 L4070.2969,663.7969 Q4070.9063,663.7969 4071.1719,664.0313 Q4071.4375,664.2656 4071.4375,664.6563 Q4071.4375,665.0313 4071.1719,665.2656 Q4070.9063,665.5 4070.2969,665.5 L4068,665.5 Q4067.3906,665.5 4067.1328,665.2656 Q4066.875,665.0313 4066.875,664.6406 Q4066.875,664.2656 4067.1484,664.0234 Q4067.4219,663.7813 4068.0469,663.7969 L4070.7188,657.1406 L4069.6094,657.1406 Q4069,657.1406 4068.7344,656.9063 Q4068.4688,656.6719 4068.4688,656.2813 Q4068.4688,655.9063 4068.7344,655.6719 Q4069,655.4375 4069.6094,655.4375 L4073.2813,655.4375 L4076.6719,663.7969 Q4077.2656,663.7969 4077.4531,663.9375 Q4077.8438,664.2031 4077.8438,664.6563 Q4077.8438,665.0313 4077.5859,665.2656 Q4077.3281,665.5 4076.7188,665.5 L4074.4219,665.5 Q4073.8125,665.5 4073.5469,665.2656 Q4073.2813,665.0313 4073.2813,664.6406 Q4073.2813,664.2656 4073.5469,664.0313 Q4073.8125,663.7969 4074.4219,663.7969 L4074.8438,663.7969 L4074.4375,662.7656 Z M4073.7188,661.0625 L4072.3594,657.6875 L4070.9844,661.0625 L4073.7188,661.0625 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs"
          textLength="33" x="4092.75" y="665.9102">Query
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="3956.5" x2="4229.5" y1="677" y2="677"/>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="3956.5" x2="4229.5" y1="685" y2="685"/>
    <ellipse cx="3966.5" cy="696" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44"
          x="3975.5" y="700.4189">~Query()
    </text>
    <ellipse cx="3966.5" cy="709.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
          textLength="249" x="3975.5" y="714.2549">run(SemsimModel&amp; model) : QueryResults {query}
    </text><!--MD5=[79525d6c3d17adc9b16e2e6c5960c4f5]
class omexmeta.QueryResults-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="89.5078" id="semsim.QueryResults"
          style="stroke: #A80036; stroke-width: 1.5;" width="138" x="4266" y="638"/>
    <ellipse cx="4294.95" cy="654" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M4297.7156,649.875 Q4297.8719,649.6563 4298.0594,649.5469 Q4298.2469,649.4375 4298.4656,649.4375 Q4298.8406,649.4375 4299.075,649.6953 Q4299.3094,649.9531 4299.3094,650.5625 L4299.3094,652.0156 Q4299.3094,652.625 4299.075,652.8906 Q4298.8406,653.1563 4298.4656,653.1563 Q4298.1219,653.1563 4297.9188,652.9531 Q4297.7156,652.7656 4297.6063,652.25 Q4297.5594,651.8906 4297.3719,651.7031 Q4297.0438,651.3281 4296.4344,651.1094 Q4295.825,650.8906 4295.2,650.8906 Q4294.4344,650.8906 4293.8016,651.2188 Q4293.1688,651.5469 4292.6766,652.2969 Q4292.1844,653.0469 4292.1844,654.0781 L4292.1844,655.1719 Q4292.1844,656.4063 4293.075,657.2266 Q4293.9656,658.0469 4295.5594,658.0469 Q4296.4969,658.0469 4297.1531,657.7969 Q4297.5438,657.6406 4297.9656,657.2031 Q4298.2313,656.9375 4298.3797,656.8594 Q4298.5281,656.7813 4298.7313,656.7813 Q4299.0594,656.7813 4299.3172,657.0391 Q4299.575,657.2969 4299.575,657.6406 Q4299.575,657.9844 4299.2313,658.3906 Q4298.7313,658.9688 4297.9344,659.2969 Q4296.8563,659.75 4295.5594,659.75 Q4294.0438,659.75 4292.8406,659.125 Q4291.8563,658.625 4291.1688,657.5547 Q4290.4813,656.4844 4290.4813,655.2031 L4290.4813,654.0469 Q4290.4813,652.7188 4291.0984,651.5703 Q4291.7156,650.4219 4292.8094,649.8047 Q4293.9031,649.1875 4295.1375,649.1875 Q4295.8719,649.1875 4296.5203,649.3516 Q4297.1688,649.5156 4297.7156,649.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75"
          x="4312.05" y="658.9102">QueryResults
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="4267" x2="4403" y1="670" y2="670"/>
    <polygon fill="none" points="4277,676,4281,680,4277,684,4273,680" style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112"
          x="4286" y="685.4189">refs_ : ComponentRefs
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="4267" x2="4403" y1="691.8359" y2="691.8359"/>
    <ellipse cx="4277" cy="702.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77"
          x="4286" y="707.2549">begin() : iterator
    </text>
    <ellipse cx="4277" cy="716.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69"
          x="4286" y="721.0908">end() : iterator
    </text><!--MD5=[74b10a4cd0183cf2b0ad1b4b1d669f6c]
class omexmeta.RDFReader-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="227.8672" id="semsim.RDFReader"
          style="stroke: #A80036; stroke-width: 1.5;" width="637" x="4439.5" y="569"/>
    <ellipse cx="4720.75" cy="585" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M4723.5156,580.875 Q4723.6719,580.6563 4723.8594,580.5469 Q4724.0469,580.4375 4724.2656,580.4375 Q4724.6406,580.4375 4724.875,580.6953 Q4725.1094,580.9531 4725.1094,581.5625 L4725.1094,583.0156 Q4725.1094,583.625 4724.875,583.8906 Q4724.6406,584.1563 4724.2656,584.1563 Q4723.9219,584.1563 4723.7188,583.9531 Q4723.5156,583.7656 4723.4063,583.25 Q4723.3594,582.8906 4723.1719,582.7031 Q4722.8438,582.3281 4722.2344,582.1094 Q4721.625,581.8906 4721,581.8906 Q4720.2344,581.8906 4719.6016,582.2188 Q4718.9688,582.5469 4718.4766,583.2969 Q4717.9844,584.0469 4717.9844,585.0781 L4717.9844,586.1719 Q4717.9844,587.4063 4718.875,588.2266 Q4719.7656,589.0469 4721.3594,589.0469 Q4722.2969,589.0469 4722.9531,588.7969 Q4723.3438,588.6406 4723.7656,588.2031 Q4724.0313,587.9375 4724.1797,587.8594 Q4724.3281,587.7813 4724.5313,587.7813 Q4724.8594,587.7813 4725.1172,588.0391 Q4725.375,588.2969 4725.375,588.6406 Q4725.375,588.9844 4725.0313,589.3906 Q4724.5313,589.9688 4723.7344,590.2969 Q4722.6563,590.75 4721.3594,590.75 Q4719.8438,590.75 4718.6406,590.125 Q4717.6563,589.625 4716.9688,588.5547 Q4716.2813,587.4844 4716.2813,586.2031 L4716.2813,585.0469 Q4716.2813,583.7188 4716.8984,582.5703 Q4717.5156,581.4219 4718.6094,580.8047 Q4719.7031,580.1875 4720.9375,580.1875 Q4721.6719,580.1875 4722.3203,580.3516 Q4722.9688,580.5156 4723.5156,580.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66"
          x="4741.25" y="589.9102">RDFReader
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="4440.5" x2="5075.5" y1="601" y2="601"/>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="4440.5" x2="5075.5" y1="609" y2="609"/>
    <ellipse cx="4450.5" cy="620" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="183" x="4459.5" y="624.4189">RaptorTermToURI(raptor_term* t) : URI
    </text>
    <ellipse cx="4450.5" cy="633.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="176" x="4459.5" y="638.2549">isMetaId(const std::string&amp; uri) :
        bool
    </text>
    <ellipse cx="4450.5" cy="647.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="142" x="4459.5" y="652.0908">isMetaId(raptor_term* t) : bool
    </text>
    <ellipse cx="4450.5" cy="661.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="222" x="4459.5" y="665.9268">RaptorTermToRepr(raptor_term* t) :
        std::string
    </text>
    <ellipse cx="4450.5" cy="675.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="213" x="4459.5" y="679.7627">raptorUriToString(raptor_uri* u) :
        std::string
    </text>
    <ellipse cx="4450.5" cy="689.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="230" x="4459.5" y="693.5986">extractMetaId(const std::string&amp; uri)
        : std::string
    </text>
    <ellipse cx="4450.5" cy="703.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="196" x="4459.5" y="707.4346">extractMetaId(raptor_term* t) :
        std::string
    </text>
    <ellipse cx="4450.5" cy="716.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="536" x="4459.5" y="721.2705">addTermToAnnotation(AnnotationBase&amp;
        annotation, const Relation&amp; relation, const Resource&amp; resource) : void
    </text>
    <ellipse cx="4450.5" cy="730.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="611" x="4459.5" y="735.1064">
        addTermToCompositeAnnotation(CompositeAnnotation&amp; annotation, const Relation&amp; relation, const Resource&amp;
        resource) : void
    </text>
    <ellipse cx="4450.5" cy="744.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="460" x="4459.5" y="748.9424">addTermToEntity(EntityBase&amp; entity,
        const Relation&amp; relation, const Resource&amp; resource) : void
    </text>
    <ellipse cx="4450.5" cy="758.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="589" x="4459.5" y="762.7783">
        addTermToSingularAnnotation(SingularAnnotation&amp; annotation, const Relation&amp; relation, const Resource&amp;
        resource) : void
    </text>
    <ellipse cx="4450.5" cy="772.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="537" x="4459.5" y="776.6143">applyRDFAnnotationsToModel(SemsimModel&amp;
        model, const std::string&amp; rdf, const std::string&amp; rdf_format) : void
    </text>
    <ellipse cx="4450.5" cy="786.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="300" x="4459.5" y="790.4502">process_triple(void* user_data,
        raptor_statement* triple) : void
    </text><!--MD5=[e87e59fe9f5349a91609266ab17b84cb]
class omexmeta.RasqalQuery-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="214.0313" id="semsim.RasqalQuery"
          style="stroke: #A80036; stroke-width: 1.5;" width="381" x="3564.5" y="988.5"/>
    <ellipse cx="3714.75" cy="1004.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M3717.5156,1000.375 Q3717.6719,1000.1563 3717.8594,1000.0469 Q3718.0469,999.9375 3718.2656,999.9375 Q3718.6406,999.9375 3718.875,1000.1953 Q3719.1094,1000.4531 3719.1094,1001.0625 L3719.1094,1002.5156 Q3719.1094,1003.125 3718.875,1003.3906 Q3718.6406,1003.6563 3718.2656,1003.6563 Q3717.9219,1003.6563 3717.7188,1003.4531 Q3717.5156,1003.2656 3717.4063,1002.75 Q3717.3594,1002.3906 3717.1719,1002.2031 Q3716.8438,1001.8281 3716.2344,1001.6094 Q3715.625,1001.3906 3715,1001.3906 Q3714.2344,1001.3906 3713.6016,1001.7188 Q3712.9688,1002.0469 3712.4766,1002.7969 Q3711.9844,1003.5469 3711.9844,1004.5781 L3711.9844,1005.6719 Q3711.9844,1006.9063 3712.875,1007.7266 Q3713.7656,1008.5469 3715.3594,1008.5469 Q3716.2969,1008.5469 3716.9531,1008.2969 Q3717.3438,1008.1406 3717.7656,1007.7031 Q3718.0313,1007.4375 3718.1797,1007.3594 Q3718.3281,1007.2813 3718.5313,1007.2813 Q3718.8594,1007.2813 3719.1172,1007.5391 Q3719.375,1007.7969 3719.375,1008.1406 Q3719.375,1008.4844 3719.0313,1008.8906 Q3718.5313,1009.4688 3717.7344,1009.7969 Q3716.6563,1010.25 3715.3594,1010.25 Q3713.8438,1010.25 3712.6406,1009.625 Q3711.6563,1009.125 3710.9688,1008.0547 Q3710.2813,1006.9844 3710.2813,1005.7031 L3710.2813,1004.5469 Q3710.2813,1003.2188 3710.8984,1002.0703 Q3711.5156,1000.9219 3712.6094,1000.3047 Q3713.7031,999.6875 3714.9375,999.6875 Q3715.6719,999.6875 3716.3203,999.8516 Q3716.9688,1000.0156 3717.5156,1000.375 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72"
          x="3735.25" y="1009.4102">RasqalQuery
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="3565.5" x2="3944.5" y1="1020.5" y2="1020.5"/>
    <polygon fill="none" points="3575.5,1026.5,3579.5,1030.5,3575.5,1034.5,3571.5,1030.5"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151"
          x="3584.5" y="1035.9189">raptor_iostr_ : raptor_iostream*
    </text>
    <polygon fill="none" points="3575.5,1040.3359,3579.5,1044.3359,3575.5,1048.3359,3571.5,1044.3359"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108"
          x="3584.5" y="1049.7549">base_uri_ : raptor_uri*
    </text>
    <polygon fill="none" points="3575.5,1054.1719,3579.5,1058.1719,3575.5,1062.1719,3571.5,1058.1719"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78"
          x="3584.5" y="1063.5908">url_ : raptor_uri*
    </text>
    <polygon fill="none" points="3575.5,1068.0078,3579.5,1072.0078,3575.5,1076.0078,3571.5,1072.0078"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145"
          x="3584.5" y="1077.4268">raptor_world_ : raptor_world*
    </text>
    <polygon fill="none" points="3575.5,1081.8438,3579.5,1085.8438,3575.5,1089.8438,3571.5,1085.8438"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122"
          x="3584.5" y="1091.2627">dg_ : rasqal_data_graph*
    </text>
    <polygon fill="none" points="3575.5,1095.6797,3579.5,1099.6797,3575.5,1103.6797,3571.5,1099.6797"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111"
              x="3584.5" y="1105.0986">serializer_ : rasqal_query*
        </text>
    <polygon fill="none" points="3575.5,1109.5156,3579.5,1113.5156,3575.5,1117.5156,3571.5,1113.5156"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147"
          x="3584.5" y="1118.9346">rasqal_world_ : rasqal_world*
    </text>
    <polygon fill="none" points="3575.5,1123.3516,3579.5,1127.3516,3575.5,1131.3516,3571.5,1127.3516"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77"
          x="3584.5" y="1132.7705">rdf_ : std::string
    </text>
    <polygon fill="none" points="3575.5,1137.1875,3579.5,1141.1875,3575.5,1145.1875,3571.5,1141.1875"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133"
          x="3584.5" y="1146.6064">uri_string_ : unsigned char*
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="3565.5" x2="3944.5" y1="1153.0234" y2="1153.0234"/>
    <ellipse cx="3575.5" cy="1164.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="355"
          x="3584.5" y="1168.4424">RasqalQuery(const std::string&amp; rdf, const std::string&amp; format, bool is_file)
    </text>
    <ellipse cx="3575.5" cy="1177.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77"
          x="3584.5" y="1182.2783">~RasqalQuery()
    </text>
    <ellipse cx="3575.5" cy="1191.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242"
          x="3584.5" y="1196.1143">run(const std::string&amp; query) : RasqalQueryResult
    </text><!--MD5=[1099c953309d650746587a46bf61d264]
class omexmeta.RasqalQueryResult-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="144.8516" id="semsim.RasqalQueryResult"
          style="stroke: #A80036; stroke-width: 1.5;" width="368" x="3981" y="1023"/>
    <ellipse cx="4106.75" cy="1039" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M4109.5156,1034.875 Q4109.6719,1034.6563 4109.8594,1034.5469 Q4110.0469,1034.4375 4110.2656,1034.4375 Q4110.6406,1034.4375 4110.875,1034.6953 Q4111.1094,1034.9531 4111.1094,1035.5625 L4111.1094,1037.0156 Q4111.1094,1037.625 4110.875,1037.8906 Q4110.6406,1038.1563 4110.2656,1038.1563 Q4109.9219,1038.1563 4109.7188,1037.9531 Q4109.5156,1037.7656 4109.4063,1037.25 Q4109.3594,1036.8906 4109.1719,1036.7031 Q4108.8438,1036.3281 4108.2344,1036.1094 Q4107.625,1035.8906 4107,1035.8906 Q4106.2344,1035.8906 4105.6016,1036.2188 Q4104.9688,1036.5469 4104.4766,1037.2969 Q4103.9844,1038.0469 4103.9844,1039.0781 L4103.9844,1040.1719 Q4103.9844,1041.4063 4104.875,1042.2266 Q4105.7656,1043.0469 4107.3594,1043.0469 Q4108.2969,1043.0469 4108.9531,1042.7969 Q4109.3438,1042.6406 4109.7656,1042.2031 Q4110.0313,1041.9375 4110.1797,1041.8594 Q4110.3281,1041.7813 4110.5313,1041.7813 Q4110.8594,1041.7813 4111.1172,1042.0391 Q4111.375,1042.2969 4111.375,1042.6406 Q4111.375,1042.9844 4111.0313,1043.3906 Q4110.5313,1043.9688 4109.7344,1044.2969 Q4108.6563,1044.75 4107.3594,1044.75 Q4105.8438,1044.75 4104.6406,1044.125 Q4103.6563,1043.625 4102.9688,1042.5547 Q4102.2813,1041.4844 4102.2813,1040.2031 L4102.2813,1039.0469 Q4102.2813,1037.7188 4102.8984,1036.5703 Q4103.5156,1035.4219 4104.6094,1034.8047 Q4105.7031,1034.1875 4106.9375,1034.1875 Q4107.6719,1034.1875 4108.3203,1034.3516 Q4108.9688,1034.5156 4109.5156,1034.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108"
          x="4127.25" y="1043.9102">RasqalQueryResult
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="3982" x2="4348" y1="1055" y2="1055"/>
    <polygon fill="none" points="3992,1061,3996,1065,3992,1069,3988,1065" style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155"
          x="4001" y="1070.4189">results_ : rasqal_query_results*
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="3982" x2="4348" y1="1076.8359" y2="1076.8359"/>
    <ellipse cx="3992" cy="1087.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244"
          x="4001" y="1092.2549">RasqalQueryResult(rasqal_query_results* results)
    </text>
    <ellipse cx="3992" cy="1101.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107"
          x="4001" y="1106.0908">~RasqalQueryResult()
    </text>
    <ellipse cx="3992" cy="1115.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241"
          x="4001" y="1119.9268">toRDFString(const std::string&amp; format) : std::string
    </text>
    <ellipse cx="3992" cy="1129.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102"
          x="4001" y="1133.7627">toString() : std::string
    </text>
    <ellipse cx="3992" cy="1143.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225"
          x="4001" y="1147.5986">asList() : std::vector&lt;std::vector&lt;std::string&gt; &gt;
    </text>
    <polygon fill="#FFFF44" points="3992,1152.0156,3996,1156.0156,3992,1160.0156,3988,1156.0156"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342"
          x="4001" y="1161.4346">toRaptorGraph(raptor_world* world, raptor_serializer* serializer) : void
    </text><!--MD5=[561402607921e1bb271995cf12378244]
class omexmeta.Relation-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="144.8516" id="semsim.Relation"
          style="stroke: #A80036; stroke-width: 1.5;" width="258" x="334" y="1380.5"/>
    <ellipse cx="435.75" cy="1396.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M438.5156,1392.375 Q438.6719,1392.1563 438.8594,1392.0469 Q439.0469,1391.9375 439.2656,1391.9375 Q439.6406,1391.9375 439.875,1392.1953 Q440.1094,1392.4531 440.1094,1393.0625 L440.1094,1394.5156 Q440.1094,1395.125 439.875,1395.3906 Q439.6406,1395.6563 439.2656,1395.6563 Q438.9219,1395.6563 438.7188,1395.4531 Q438.5156,1395.2656 438.4063,1394.75 Q438.3594,1394.3906 438.1719,1394.2031 Q437.8438,1393.8281 437.2344,1393.6094 Q436.625,1393.3906 436,1393.3906 Q435.2344,1393.3906 434.6016,1393.7188 Q433.9688,1394.0469 433.4766,1394.7969 Q432.9844,1395.5469 432.9844,1396.5781 L432.9844,1397.6719 Q432.9844,1398.9063 433.875,1399.7266 Q434.7656,1400.5469 436.3594,1400.5469 Q437.2969,1400.5469 437.9531,1400.2969 Q438.3438,1400.1406 438.7656,1399.7031 Q439.0313,1399.4375 439.1797,1399.3594 Q439.3281,1399.2813 439.5313,1399.2813 Q439.8594,1399.2813 440.1172,1399.5391 Q440.375,1399.7969 440.375,1400.1406 Q440.375,1400.4844 440.0313,1400.8906 Q439.5313,1401.4688 438.7344,1401.7969 Q437.6563,1402.25 436.3594,1402.25 Q434.8438,1402.25 433.6406,1401.625 Q432.6563,1401.125 431.9688,1400.0547 Q431.2813,1398.9844 431.2813,1397.7031 L431.2813,1396.5469 Q431.2813,1395.2188 431.8984,1394.0703 Q432.5156,1392.9219 433.6094,1392.3047 Q434.7031,1391.6875 435.9375,1391.6875 Q436.6719,1391.6875 437.3203,1391.8516 Q437.9688,1392.0156 438.5156,1392.375 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="46"
          x="456.25" y="1401.4102">Relation
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="335" x2="591" y1="1412.5" y2="1412.5"/>
    <polygon fill="none" points="345,1418.5,349,1422.5,345,1426.5,341,1422.5"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="354"
          y="1427.9189">url_ : URI
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="335" x2="591" y1="1434.3359" y2="1434.3359"/>
    <ellipse cx="345" cy="1445.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114"
          x="354" y="1449.7549">Relation(const URI&amp; uri)
    </text>
    <ellipse cx="345" cy="1459.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="354"
          y="1463.5908">Relation(URI&amp;&amp; uri)
    </text>
    <ellipse cx="345" cy="1473.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110"
          x="354" y="1477.4268">getURI() : URI&amp; {query}
    </text>
    <ellipse cx="345" cy="1486.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232"
          x="354" y="1491.2627">operator==(const Relation&amp; other) : bool {query}
    </text>
    <ellipse cx="345" cy="1500.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150"
          x="354" y="1505.0986">humanize() : std::string {query}
    </text>
    <ellipse cx="345" cy="1514.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141"
          x="354" y="1518.9346">toString() : std::string {query}
    </text><!--MD5=[afc551e017185495a5252f449b2d79f4]
class omexmeta.Resource-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="186.3594" id="semsim.Resource"
          style="stroke: #A80036; stroke-width: 1.5;" width="267" x="1020.5" y="1360"/>
    <ellipse cx="1122.75" cy="1376" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M1125.5156,1371.875 Q1125.6719,1371.6563 1125.8594,1371.5469 Q1126.0469,1371.4375 1126.2656,1371.4375 Q1126.6406,1371.4375 1126.875,1371.6953 Q1127.1094,1371.9531 1127.1094,1372.5625 L1127.1094,1374.0156 Q1127.1094,1374.625 1126.875,1374.8906 Q1126.6406,1375.1563 1126.2656,1375.1563 Q1125.9219,1375.1563 1125.7188,1374.9531 Q1125.5156,1374.7656 1125.4063,1374.25 Q1125.3594,1373.8906 1125.1719,1373.7031 Q1124.8438,1373.3281 1124.2344,1373.1094 Q1123.625,1372.8906 1123,1372.8906 Q1122.2344,1372.8906 1121.6016,1373.2188 Q1120.9688,1373.5469 1120.4766,1374.2969 Q1119.9844,1375.0469 1119.9844,1376.0781 L1119.9844,1377.1719 Q1119.9844,1378.4063 1120.875,1379.2266 Q1121.7656,1380.0469 1123.3594,1380.0469 Q1124.2969,1380.0469 1124.9531,1379.7969 Q1125.3438,1379.6406 1125.7656,1379.2031 Q1126.0313,1378.9375 1126.1797,1378.8594 Q1126.3281,1378.7813 1126.5313,1378.7813 Q1126.8594,1378.7813 1127.1172,1379.0391 Q1127.375,1379.2969 1127.375,1379.6406 Q1127.375,1379.9844 1127.0313,1380.3906 Q1126.5313,1380.9688 1125.7344,1381.2969 Q1124.6563,1381.75 1123.3594,1381.75 Q1121.8438,1381.75 1120.6406,1381.125 Q1119.6563,1380.625 1118.9688,1379.5547 Q1118.2813,1378.4844 1118.2813,1377.2031 L1118.2813,1376.0469 Q1118.2813,1374.7188 1118.8984,1373.5703 Q1119.5156,1372.4219 1120.6094,1371.8047 Q1121.7031,1371.1875 1122.9375,1371.1875 Q1123.6719,1371.1875 1124.3203,1371.3516 Q1124.9688,1371.5156 1125.5156,1371.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54"
          x="1143.25" y="1380.9102">Resource
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="1021.5" x2="1286.5" y1="1392" y2="1392"/>
    <polygon fill="none" points="1031.5,1398,1035.5,1402,1031.5,1406,1027.5,1402"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110"
          x="1040.5" y="1407.4189">element_ : Component*
    </text>
    <polygon fill="none" points="1031.5,1411.8359,1035.5,1415.8359,1031.5,1419.8359,1027.5,1415.8359"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43"
          x="1040.5" y="1421.2549">url_ : URI
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="1021.5" x2="1286.5" y1="1427.6719" y2="1427.6719"/>
    <ellipse cx="1031.5" cy="1438.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123"
          x="1040.5" y="1443.0908">Resource(const URI&amp; uri)
    </text>
    <ellipse cx="1031.5" cy="1452.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100"
          x="1040.5" y="1456.9268">Resource(URI&amp;&amp; uri)
    </text>
    <ellipse cx="1031.5" cy="1466.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153"
          x="1040.5" y="1470.7627">Resource(Component* element)
    </text>
    <ellipse cx="1031.5" cy="1480.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183"
          x="1040.5" y="1484.5986">getURI(const URI&amp; base) : URI {query}
    </text>
    <ellipse cx="1031.5" cy="1494.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110"
          x="1040.5" y="1498.4346">isLocal() : bool {query}
    </text>
    <ellipse cx="1031.5" cy="1507.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241"
          x="1040.5" y="1512.2705">operator==(const Resource&amp; other) : bool {query}
    </text>
    <ellipse cx="1031.5" cy="1521.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150"
          x="1040.5" y="1526.1064">humanize() : std::string {query}
    </text>
    <ellipse cx="1031.5" cy="1535.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141"
          x="1040.5" y="1539.9424">toString() : std::string {query}
    </text><!--MD5=[3d1c86afe3aed374ceda70e31336addb]
class omexmeta.SBMLImporter-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="366.2266" id="semsim.SBMLImporter"
          style="stroke: #A80036; stroke-width: 1.5;" width="431" x="2471.5" y="500"/>
    <ellipse cx="2643.75" cy="516" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M2646.5156,511.875 Q2646.6719,511.6563 2646.8594,511.5469 Q2647.0469,511.4375 2647.2656,511.4375 Q2647.6406,511.4375 2647.875,511.6953 Q2648.1094,511.9531 2648.1094,512.5625 L2648.1094,514.0156 Q2648.1094,514.625 2647.875,514.8906 Q2647.6406,515.1563 2647.2656,515.1563 Q2646.9219,515.1563 2646.7188,514.9531 Q2646.5156,514.7656 2646.4063,514.25 Q2646.3594,513.8906 2646.1719,513.7031 Q2645.8438,513.3281 2645.2344,513.1094 Q2644.625,512.8906 2644,512.8906 Q2643.2344,512.8906 2642.6016,513.2188 Q2641.9688,513.5469 2641.4766,514.2969 Q2640.9844,515.0469 2640.9844,516.0781 L2640.9844,517.1719 Q2640.9844,518.4063 2641.875,519.2266 Q2642.7656,520.0469 2644.3594,520.0469 Q2645.2969,520.0469 2645.9531,519.7969 Q2646.3438,519.6406 2646.7656,519.2031 Q2647.0313,518.9375 2647.1797,518.8594 Q2647.3281,518.7813 2647.5313,518.7813 Q2647.8594,518.7813 2648.1172,519.0391 Q2648.375,519.2969 2648.375,519.6406 Q2648.375,519.9844 2648.0313,520.3906 Q2647.5313,520.9688 2646.7344,521.2969 Q2645.6563,521.75 2644.3594,521.75 Q2642.8438,521.75 2641.6406,521.125 Q2640.6563,520.625 2639.9688,519.5547 Q2639.2813,518.4844 2639.2813,517.2031 L2639.2813,516.0469 Q2639.2813,514.7188 2639.8984,513.5703 Q2640.5156,512.4219 2641.6094,511.8047 Q2642.7031,511.1875 2643.9375,511.1875 Q2644.6719,511.1875 2645.3203,511.3516 Q2645.9688,511.5156 2646.5156,511.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="78"
          x="2664.25" y="520.9102">SBMLImporter
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="2472.5" x2="2901.5" y1="532" y2="532"/>
    <ellipse cx="2482.5" cy="543" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200"
          x="2491.5" y="547.4189">importedSBMLModel : SemSimSBMLModel
    </text>
    <ellipse cx="2482.5" cy="556.8359" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129"
          x="2491.5" y="561.2549">sbmlModel : libsbml::Model*
    </text>
    <ellipse cx="2482.5" cy="570.6719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197"
          x="2491.5" y="575.0908">sbmlDocument : libsbml::SBMLDocument*
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="2472.5" x2="2901.5" y1="581.5078" y2="581.5078"/>
    <ellipse cx="2482.5" cy="592.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266"
          x="2491.5" y="596.9268">SBMLImporter(libsbml::SBMLDocument* sbmlDocument)
    </text>
    <ellipse cx="2482.5" cy="606.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185"
          x="2491.5" y="610.7627">SBMLImporter(const std::string&amp; sbml)
    </text>
    <polygon fill="#FFFF44" points="2482.5,615.1797,2486.5,619.1797,2482.5,623.1797,2478.5,619.1797"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="251"
          x="2491.5" y="624.5986">extractAnnotation(libsbml::SBase* s) : AnnotationPtr
    </text>
    <polygon fill="#FFFF44" points="2482.5,629.0156,2486.5,633.0156,2482.5,637.0156,2478.5,633.0156"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258"
          x="2491.5" y="638.4346">extractAnnotation(libsbml::Species* s) : AnnotationPtr
    </text>
    <polygon fill="#FFFF44" points="2482.5,642.8516,2486.5,646.8516,2482.5,650.8516,2478.5,646.8516"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282"
          x="2491.5" y="652.2705">extractAnnotation(libsbml::Compartment* c) : AnnotationPtr
    </text>
    <polygon fill="#FFFF44" points="2482.5,656.6875,2486.5,660.6875,2482.5,664.6875,2478.5,660.6875"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259"
          x="2491.5" y="666.1064">extractAnnotation(libsbml::Reaction* r) : AnnotationPtr
    </text>
    <polygon fill="#FFFF44" points="2482.5,670.5234,2486.5,674.5234,2482.5,678.5234,2478.5,674.5234"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="268"
          x="2491.5" y="679.9424">extractAnnotation(libsbml::Parameter* p) : AnnotationPtr
    </text>
    <polygon fill="#FFFF44" points="2482.5,684.3594,2486.5,688.3594,2482.5,692.3594,2478.5,688.3594"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243"
          x="2491.5" y="693.7783">getComponentFor(libsbml::SBase* s) : Component*
    </text>
    <polygon fill="#FFFF44" points="2482.5,698.1953,2486.5,702.1953,2482.5,706.1953,2478.5,702.1953"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345"
          x="2491.5" y="707.6143">extractCompositeAnnotation(libsbml::Species* s) : CompositeAnnotation
    </text>
    <polygon fill="#FFFF44" points="2482.5,712.0313,2486.5,716.0313,2482.5,720.0313,2478.5,716.0313"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232"
          x="2491.5" y="721.4502">extractSpeciesEntity(libsbml::Species* s) : Entity
    </text>
    <polygon fill="#FFFF44" points="2482.5,725.8672,2486.5,729.8672,2482.5,733.8672,2478.5,729.8672"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332"
          x="2491.5" y="735.2861">extractSpeciesEntityDescriptor(libsbml::Species* s) : EntityDescriptor
    </text>
    <ellipse cx="2482.5" cy="744.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="326" x="2491.5" y="749.1221">
        getRelationFromSBMLQual(libsbml::BiolQualifierType_t q) : Relation&amp;
    </text>
    <polygon fill="#FFFF44" points="2482.5,753.5391,2486.5,757.5391,2482.5,761.5391,2478.5,757.5391"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225"
          x="2491.5" y="762.958">getResourceFor(libsbml::SBase* s) : Resource
    </text>
    <ellipse cx="2482.5" cy="772.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227"
          x="2491.5" y="776.7939">getSemSimSBMLModel() : SemSimSBMLModel&amp;
    </text>
    <polygon fill="#FFFF44" points="2482.5,781.2109,2486.5,785.2109,2482.5,789.2109,2478.5,785.2109"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="316" x="2491.5" y="790.6299">extractSingularAnnotation(libsbml::SBase*
        s) : SingularAnnotation
    </text>
    <polygon fill="#FFFF44" points="2482.5,795.0469,2486.5,799.0469,2482.5,803.0469,2478.5,799.0469"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="333" x="2491.5" y="804.4658">
        extractSingularAnnotation(libsbml::Parameter* p) : SingularAnnotation
    </text>
    <polygon fill="#FFFF44" points="2482.5,808.8828,2486.5,812.8828,2482.5,816.8828,2478.5,812.8828"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="405" x="2491.5" y="818.3018">makeUniqueMetaId(const SemsimModel&amp;
        model, const std::string&amp; base) : std::string
    </text>
    <polygon fill="#FFFF44" points="2482.5,822.7188,2486.5,826.7188,2482.5,830.7188,2478.5,826.7188"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312"
          x="2491.5" y="832.1377">assignParticipants(Process&amp; process, libsbml::Reaction* r) : void
    </text>
    <polygon fill="#FFFF44" points="2482.5,836.5547,2486.5,840.5547,2482.5,844.5547,2478.5,840.5547"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="334" x="2491.5" y="845.9736">
        populateDefinitionsAndTerms(libsbml::SBase* s, EntityBase&amp; e) : void
    </text>
    <polygon fill="#FFFF44" points="2482.5,850.3906,2486.5,854.3906,2482.5,858.3906,2478.5,854.3906"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="280" x="2491.5" y="859.8096">populateSBOTerm(libsbml::SBase* s,
        EntityBase&amp; e) : void
    </text><!--MD5=[53d35fb68fb5266a189f2ae72029306e]
class omexmeta.SBMLSpecies-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="89.5078" id="semsim.SBMLSpecies"
          style="stroke: #A80036; stroke-width: 1.5;" width="438" x="4384" y="1050.5"/>
    <ellipse cx="4560.25" cy="1066.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M4563.0156,1062.375 Q4563.1719,1062.1563 4563.3594,1062.0469 Q4563.5469,1061.9375 4563.7656,1061.9375 Q4564.1406,1061.9375 4564.375,1062.1953 Q4564.6094,1062.4531 4564.6094,1063.0625 L4564.6094,1064.5156 Q4564.6094,1065.125 4564.375,1065.3906 Q4564.1406,1065.6563 4563.7656,1065.6563 Q4563.4219,1065.6563 4563.2188,1065.4531 Q4563.0156,1065.2656 4562.9063,1064.75 Q4562.8594,1064.3906 4562.6719,1064.2031 Q4562.3438,1063.8281 4561.7344,1063.6094 Q4561.125,1063.3906 4560.5,1063.3906 Q4559.7344,1063.3906 4559.1016,1063.7188 Q4558.4688,1064.0469 4557.9766,1064.7969 Q4557.4844,1065.5469 4557.4844,1066.5781 L4557.4844,1067.6719 Q4557.4844,1068.9063 4558.375,1069.7266 Q4559.2656,1070.5469 4560.8594,1070.5469 Q4561.7969,1070.5469 4562.4531,1070.2969 Q4562.8438,1070.1406 4563.2656,1069.7031 Q4563.5313,1069.4375 4563.6797,1069.3594 Q4563.8281,1069.2813 4564.0313,1069.2813 Q4564.3594,1069.2813 4564.6172,1069.5391 Q4564.875,1069.7969 4564.875,1070.1406 Q4564.875,1070.4844 4564.5313,1070.8906 Q4564.0313,1071.4688 4563.2344,1071.7969 Q4562.1563,1072.25 4560.8594,1072.25 Q4559.3438,1072.25 4558.1406,1071.625 Q4557.1563,1071.125 4556.4688,1070.0547 Q4555.7813,1068.9844 4555.7813,1067.7031 L4555.7813,1066.5469 Q4555.7813,1065.2188 4556.3984,1064.0703 Q4557.0156,1062.9219 4558.1094,1062.3047 Q4559.2031,1061.6875 4560.4375,1061.6875 Q4561.1719,1061.6875 4561.8203,1061.8516 Q4562.4688,1062.0156 4563.0156,1062.375 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77"
          x="4580.75" y="1071.4102">SBMLSpecies
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="4385" x2="4821" y1="1082.5" y2="1082.5"/>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="4385" x2="4821" y1="1090.5" y2="1090.5"/>
    <ellipse cx="4395" cy="1101.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="412" x="4404" y="1105.9189">
        GetSpeciesPhysicalProperty(libsbml::Species* s, libsbml::Model* m) : PhysicalProperty
    </text>
    <ellipse cx="4395" cy="1115.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="333" x="4404" y="1119.7549">SubstanceUnitsAreConc(libsbml::Species* s,
        libsbml::Model* m) : bool
    </text>
    <ellipse cx="4395" cy="1129.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="224" x="4404" y="1133.5908">UnitDefIsConc(libsbml::UnitDefinition* ud)
        : bool
    </text><!--MD5=[caae2fb10532ec97f763113ae8e9dc4b]
class omexmeta.SBO-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="61.8359" id="semsim.SBO"
          style="stroke: #A80036; stroke-width: 1.5;" width="178" x="1403" y="652"/>
    <ellipse cx="1475.25" cy="668" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M1478.0156,663.875 Q1478.1719,663.6563 1478.3594,663.5469 Q1478.5469,663.4375 1478.7656,663.4375 Q1479.1406,663.4375 1479.375,663.6953 Q1479.6094,663.9531 1479.6094,664.5625 L1479.6094,666.0156 Q1479.6094,666.625 1479.375,666.8906 Q1479.1406,667.1563 1478.7656,667.1563 Q1478.4219,667.1563 1478.2188,666.9531 Q1478.0156,666.7656 1477.9063,666.25 Q1477.8594,665.8906 1477.6719,665.7031 Q1477.3438,665.3281 1476.7344,665.1094 Q1476.125,664.8906 1475.5,664.8906 Q1474.7344,664.8906 1474.1016,665.2188 Q1473.4688,665.5469 1472.9766,666.2969 Q1472.4844,667.0469 1472.4844,668.0781 L1472.4844,669.1719 Q1472.4844,670.4063 1473.375,671.2266 Q1474.2656,672.0469 1475.8594,672.0469 Q1476.7969,672.0469 1477.4531,671.7969 Q1477.8438,671.6406 1478.2656,671.2031 Q1478.5313,670.9375 1478.6797,670.8594 Q1478.8281,670.7813 1479.0313,670.7813 Q1479.3594,670.7813 1479.6172,671.0391 Q1479.875,671.2969 1479.875,671.6406 Q1479.875,671.9844 1479.5313,672.3906 Q1479.0313,672.9688 1478.2344,673.2969 Q1477.1563,673.75 1475.8594,673.75 Q1474.3438,673.75 1473.1406,673.125 Q1472.1563,672.625 1471.4688,671.5547 Q1470.7813,670.4844 1470.7813,669.2031 L1470.7813,668.0469 Q1470.7813,666.7188 1471.3984,665.5703 Q1472.0156,664.4219 1473.1094,663.8047 Q1474.2031,663.1875 1475.4375,663.1875 Q1476.1719,663.1875 1476.8203,663.3516 Q1477.4688,663.5156 1478.0156,663.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="25"
          x="1495.75" y="672.9102">SBO
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="1404" x2="1580" y1="684" y2="684"/>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="1404" x2="1580" y1="692" y2="692"/>
    <ellipse cx="1414" cy="703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
          text-decoration="underline" textLength="152" x="1423" y="707.4189">get(OntologyTerm t) : Resource
    </text><!--MD5=[2f1f3b6be9d0d0ce18a66da58c96e809]
class omexmeta.SelectQuery-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="75.6719" id="semsim.SelectQuery"
          style="stroke: #A80036; stroke-width: 1.5;" width="200" x="4857" y="1057.5"/>
    <ellipse cx="4919.75" cy="1073.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M4922.5156,1069.375 Q4922.6719,1069.1563 4922.8594,1069.0469 Q4923.0469,1068.9375 4923.2656,1068.9375 Q4923.6406,1068.9375 4923.875,1069.1953 Q4924.1094,1069.4531 4924.1094,1070.0625 L4924.1094,1071.5156 Q4924.1094,1072.125 4923.875,1072.3906 Q4923.6406,1072.6563 4923.2656,1072.6563 Q4922.9219,1072.6563 4922.7188,1072.4531 Q4922.5156,1072.2656 4922.4063,1071.75 Q4922.3594,1071.3906 4922.1719,1071.2031 Q4921.8438,1070.8281 4921.2344,1070.6094 Q4920.625,1070.3906 4920,1070.3906 Q4919.2344,1070.3906 4918.6016,1070.7188 Q4917.9688,1071.0469 4917.4766,1071.7969 Q4916.9844,1072.5469 4916.9844,1073.5781 L4916.9844,1074.6719 Q4916.9844,1075.9063 4917.875,1076.7266 Q4918.7656,1077.5469 4920.3594,1077.5469 Q4921.2969,1077.5469 4921.9531,1077.2969 Q4922.3438,1077.1406 4922.7656,1076.7031 Q4923.0313,1076.4375 4923.1797,1076.3594 Q4923.3281,1076.2813 4923.5313,1076.2813 Q4923.8594,1076.2813 4924.1172,1076.5391 Q4924.375,1076.7969 4924.375,1077.1406 Q4924.375,1077.4844 4924.0313,1077.8906 Q4923.5313,1078.4688 4922.7344,1078.7969 Q4921.6563,1079.25 4920.3594,1079.25 Q4918.8438,1079.25 4917.6406,1078.625 Q4916.6563,1078.125 4915.9688,1077.0547 Q4915.2813,1075.9844 4915.2813,1074.7031 L4915.2813,1073.5469 Q4915.2813,1072.2188 4915.8984,1071.0703 Q4916.5156,1069.9219 4917.6094,1069.3047 Q4918.7031,1068.6875 4919.9375,1068.6875 Q4920.6719,1068.6875 4921.3203,1068.8516 Q4921.9688,1069.0156 4922.5156,1069.375 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66"
          x="4940.25" y="1078.4102">SelectQuery
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="4858" x2="5056" y1="1089.5" y2="1089.5"/>
    <polygon fill="none" points="4868,1095.5,4872,1099.5,4868,1103.5,4864,1099.5"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104"
          x="4877" y="1104.9189">where_ : ConditionPtr
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="4858" x2="5056" y1="1111.3359" y2="1111.3359"/>
    <ellipse cx="4868" cy="1122.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174"
          x="4877" y="1126.7549">SelectQuery(ConditionPtr&amp;&amp; where)
    </text><!--MD5=[b3fdae49cf0a43249a4bb16f9a6d3cbe]
class omexmeta.SemSimObject-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="255.5391" id="semsim.SemSimObject"
          style="stroke: #A80036; stroke-width: 1.5;" width="275" x="3738.5" y="1325"/>
    <ellipse cx="3830.25" cy="1341" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M3833.0156,1336.875 Q3833.1719,1336.6563 3833.3594,1336.5469 Q3833.5469,1336.4375 3833.7656,1336.4375 Q3834.1406,1336.4375 3834.375,1336.6953 Q3834.6094,1336.9531 3834.6094,1337.5625 L3834.6094,1339.0156 Q3834.6094,1339.625 3834.375,1339.8906 Q3834.1406,1340.1563 3833.7656,1340.1563 Q3833.4219,1340.1563 3833.2188,1339.9531 Q3833.0156,1339.7656 3832.9063,1339.25 Q3832.8594,1338.8906 3832.6719,1338.7031 Q3832.3438,1338.3281 3831.7344,1338.1094 Q3831.125,1337.8906 3830.5,1337.8906 Q3829.7344,1337.8906 3829.1016,1338.2188 Q3828.4688,1338.5469 3827.9766,1339.2969 Q3827.4844,1340.0469 3827.4844,1341.0781 L3827.4844,1342.1719 Q3827.4844,1343.4063 3828.375,1344.2266 Q3829.2656,1345.0469 3830.8594,1345.0469 Q3831.7969,1345.0469 3832.4531,1344.7969 Q3832.8438,1344.6406 3833.2656,1344.2031 Q3833.5313,1343.9375 3833.6797,1343.8594 Q3833.8281,1343.7813 3834.0313,1343.7813 Q3834.3594,1343.7813 3834.6172,1344.0391 Q3834.875,1344.2969 3834.875,1344.6406 Q3834.875,1344.9844 3834.5313,1345.3906 Q3834.0313,1345.9688 3833.2344,1346.2969 Q3832.1563,1346.75 3830.8594,1346.75 Q3829.3438,1346.75 3828.1406,1346.125 Q3827.1563,1345.625 3826.4688,1344.5547 Q3825.7813,1343.4844 3825.7813,1342.2031 L3825.7813,1341.0469 Q3825.7813,1339.7188 3826.3984,1338.5703 Q3827.0156,1337.4219 3828.1094,1336.8047 Q3829.2031,1336.1875 3830.4375,1336.1875 Q3831.1719,1336.1875 3831.8203,1336.3516 Q3832.4688,1336.5156 3833.0156,1336.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83"
          x="3850.75" y="1345.9102">SemSimObject
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="3739.5" x2="4012.5" y1="1357" y2="1357"/>
    <polygon fill="none" points="3749.5,1363,3753.5,1367,3749.5,1371,3745.5,1367"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134"
          x="3758.5" y="1372.4189">semsimtype : SemSimTypes
    </text>
    <polygon fill="none" points="3749.5,1376.8359,3753.5,1380.8359,3749.5,1384.8359,3745.5,1380.8359"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110"
          x="3758.5" y="1386.2549">description : std::string
    </text>
    <polygon fill="none" points="3749.5,1390.6719,3753.5,1394.6719,3749.5,1398.6719,3745.5,1394.6719"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110"
          x="3758.5" y="1400.0908">metadataID : std::string
    </text>
    <polygon fill="none" points="3749.5,1404.5078,3753.5,1408.5078,3749.5,1412.5078,3745.5,1408.5078"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83"
          x="3758.5" y="1413.9268">name : std::string
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="3739.5" x2="4012.5" y1="1420.3438" y2="1420.3438"/>
    <ellipse cx="3749.5" cy="1431.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169"
          x="3758.5" y="1435.7627">SemSimObject(SemSimTypes type)
    </text>
    <ellipse cx="3749.5" cy="1445.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148"
          x="3758.5" y="1449.5986">hasDescription() : bool {query}
    </text>
    <ellipse cx="3749.5" cy="1459.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147"
          x="3758.5" y="1463.4346">hasMetadataID() : bool {query}
    </text>
    <ellipse cx="3749.5" cy="1472.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121"
          x="3758.5" y="1477.2705">hasName() : bool {query}
    </text>
    <ellipse cx="3749.5" cy="1486.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180"
          x="3758.5" y="1491.1064">getDescription() : std::string&amp; {query}
    </text>
    <ellipse cx="3749.5" cy="1500.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179"
          x="3758.5" y="1504.9424">getMetadataID() : std::string&amp; {query}
    </text>
    <ellipse cx="3749.5" cy="1514.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153"
          x="3758.5" y="1518.7783">getName() : std::string&amp; {query}
    </text>
    <ellipse cx="3749.5" cy="1528.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249"
          x="3758.5" y="1532.6143">copyDescription(const SemSimObject&amp; other) : void
    </text>
    <ellipse cx="3749.5" cy="1542.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247"
          x="3758.5" y="1546.4502">setDescription(const std::string&amp; description) : void
    </text>
    <ellipse cx="3749.5" cy="1555.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246"
          x="3758.5" y="1560.2861">setMetadataID(const std::string&amp; metadataID) : void
    </text>
    <ellipse cx="3749.5" cy="1569.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193"
          x="3758.5" y="1574.1221">setName(const std::string&amp; name) : void
    </text><!--MD5=[f9ff8ac2f2793b3a64b982a0f36ad2fa]
class omexmeta.SemSimSBMLModel-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="338.5547" id="semsim.SemSimSBMLModel"
          style="stroke: #A80036; stroke-width: 1.5;" width="1026" x="1593" y="926"/>
    <ellipse cx="2045.25" cy="942" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M2048.0156,937.875 Q2048.1719,937.6563 2048.3594,937.5469 Q2048.5469,937.4375 2048.7656,937.4375 Q2049.1406,937.4375 2049.375,937.6953 Q2049.6094,937.9531 2049.6094,938.5625 L2049.6094,940.0156 Q2049.6094,940.625 2049.375,940.8906 Q2049.1406,941.1563 2048.7656,941.1563 Q2048.4219,941.1563 2048.2188,940.9531 Q2048.0156,940.7656 2047.9063,940.25 Q2047.8594,939.8906 2047.6719,939.7031 Q2047.3438,939.3281 2046.7344,939.1094 Q2046.125,938.8906 2045.5,938.8906 Q2044.7344,938.8906 2044.1016,939.2188 Q2043.4688,939.5469 2042.9766,940.2969 Q2042.4844,941.0469 2042.4844,942.0781 L2042.4844,943.1719 Q2042.4844,944.4063 2043.375,945.2266 Q2044.2656,946.0469 2045.8594,946.0469 Q2046.7969,946.0469 2047.4531,945.7969 Q2047.8438,945.6406 2048.2656,945.2031 Q2048.5313,944.9375 2048.6797,944.8594 Q2048.8281,944.7813 2049.0313,944.7813 Q2049.3594,944.7813 2049.6172,945.0391 Q2049.875,945.2969 2049.875,945.6406 Q2049.875,945.9844 2049.5313,946.3906 Q2049.0313,946.9688 2048.2344,947.2969 Q2047.1563,947.75 2045.8594,947.75 Q2044.3438,947.75 2043.1406,947.125 Q2042.1563,946.625 2041.4688,945.5547 Q2040.7813,944.4844 2040.7813,943.2031 L2040.7813,942.0469 Q2040.7813,940.7188 2041.3984,939.5703 Q2042.0156,938.4219 2043.1094,937.8047 Q2044.2031,937.1875 2045.4375,937.1875 Q2046.1719,937.1875 2046.8203,937.3516 Q2047.4688,937.5156 2048.0156,937.875 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113"
          x="2065.75" y="946.9102">SemSimSBMLModel
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="1594" x2="2618" y1="958" y2="958"/>
    <polygon fill="none" points="1604,964,1608,968,1604,972,1600,968" style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139"
          x="1613" y="973.4189">d_ : libsbml::SBMLDocument*
    </text>
    <polygon fill="none" points="1604,977.8359,1608,981.8359,1604,985.8359,1600,981.8359"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="325"
          x="1613" y="987.2549">element_map_ : std::unordered_map&lt;libsbml::SBase*, Component*&gt;
    </text>
    <polygon fill="none" points="1604,991.6719,1608,995.6719,1604,999.6719,1600,995.6719"
             style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313"
          x="1613" y="1001.0908">element_id_map_ : std::unordered_map&lt;std::string, Component*&gt;
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="1594" x2="2618" y1="1007.5078" y2="1007.5078"/>
    <ellipse cx="1604" cy="1018.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229"
          x="1613" y="1022.9268">SemSimSBMLModel(libsbml::SBMLDocument* d)
    </text>
    <ellipse cx="1604" cy="1032.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1000"
          x="1613" y="1036.7627">SemSimSBMLModel(SemSimSBMLModel&amp;&amp; other) noexcept:
        SemsimModel(std::move(other)), element_map_(std::move(otherelement_map_)),
        element_id_map_(std::move(otherelement_id_map_)), d_(otherd_)
    </text>
    <ellipse cx="1604" cy="1046.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266"
          x="1613" y="1050.5986">getComponent(libsbml::SBase* s) : Component* {query}
    </text>
    <ellipse cx="1604" cy="1060.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227"
          x="1613" y="1064.4346">getComponent(libsbml::SBase* s) : Component*
    </text>
    <ellipse cx="1604" cy="1073.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303"
          x="1613" y="1078.2705">getComponentForId(const std::string&amp; id) : Component* {query}
    </text>
    <ellipse cx="1604" cy="1087.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="264"
          x="1613" y="1092.1064">getComponentForId(const std::string&amp; id) : Component*
    </text>
    <ellipse cx="1604" cy="1101.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199"
          x="1613" y="1105.9424">getProcess(libsbml::SBase* s) : Process*
    </text>
    <ellipse cx="1604" cy="1115.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324"
          x="1613" y="1119.7783">operator=(const SemSimSBMLModel&amp; other) : SemSimSBMLModel&amp;
    </text>
    <ellipse cx="1604" cy="1129.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237"
          x="1613" y="1133.6143">hasComponent(const std::string id) : bool {query}
    </text>
    <ellipse cx="1604" cy="1143.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231"
          x="1613" y="1147.4502">hasComponent(libsbml::SBase* s) : bool {query}
    </text>
    <ellipse cx="1604" cy="1156.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217"
          x="1613" y="1161.2861">hasProcess(libsbml::SBase* s) : bool {query}
    </text>
    <ellipse cx="1604" cy="1170.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161"
          x="1613" y="1175.1221">encodeXML() : std::string {query}
    </text>
    <ellipse cx="1604" cy="1184.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152"
          x="1613" y="1188.958">getFormat() : std::string {query}
    </text>
    <ellipse cx="1604" cy="1198.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390"
          x="1613" y="1202.7939">getRDF(const URI&amp; sbml_base_uri, const std::string&amp; format) : std::string
        {query}
    </text>
    <ellipse cx="1604" cy="1212.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="422"
          x="1613" y="1216.6299">getRDF(const std::string&amp; sbml_base_uri, const std::string&amp; format) :
        std::string {query}
    </text>
    <ellipse cx="1604" cy="1226.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414"
          x="1613" y="1230.4658">setComponentAnnotation(libsbml::SBase* s, const AnnotationBase&amp; annotation) : void
    </text>
    <ellipse cx="1604" cy="1239.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="402"
          x="1613" y="1244.3018">setComponentAnnotation(libsbml::SBase* s, const AnnotationPtr&amp; annotation) : void
    </text>
    <ellipse cx="1604" cy="1253.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379"
          x="1613" y="1258.1377">setComponentAnnotation(libsbml::SBase* s, AnnotationPtr&amp;&amp; annotation) : void
    </text><!--MD5=[042e6fb7d7d8f4de04ff6a6820f5bb6f]
class omexmeta.SemsimModel-->
    <rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="324.7188" id="semsim.SemsimModel"
          style="stroke: #A80036; stroke-width: 1.5;" width="478" x="38" y="520.5"/>
    <ellipse cx="233.25" cy="536.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
    <path d="M235.4375,538.2656 L231.2969,538.2656 L230.875,539.2969 L231.2969,539.2969 Q231.9063,539.2969 232.1719,539.5313 Q232.4375,539.7656 232.4375,540.1563 Q232.4375,540.5313 232.1719,540.7656 Q231.9063,541 231.2969,541 L229,541 Q228.3906,541 228.1328,540.7656 Q227.875,540.5313 227.875,540.1406 Q227.875,539.7656 228.1484,539.5234 Q228.4219,539.2813 229.0469,539.2969 L231.7188,532.6406 L230.6094,532.6406 Q230,532.6406 229.7344,532.4063 Q229.4688,532.1719 229.4688,531.7813 Q229.4688,531.4063 229.7344,531.1719 Q230,530.9375 230.6094,530.9375 L234.2813,530.9375 L237.6719,539.2969 Q238.2656,539.2969 238.4531,539.4375 Q238.8438,539.7031 238.8438,540.1563 Q238.8438,540.5313 238.5859,540.7656 Q238.3281,541 237.7188,541 L235.4219,541 Q234.8125,541 234.5469,540.7656 Q234.2813,540.5313 234.2813,540.1406 Q234.2813,539.7656 234.5469,539.5313 Q234.8125,539.2969 235.4219,539.2969 L235.8438,539.2969 L235.4375,538.2656 Z M234.7188,536.5625 L233.3594,533.1875 L231.9844,536.5625 L234.7188,536.5625 Z "/>
    <text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs"
          textLength="79" x="253.75" y="541.4102">SemsimModel
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="515" y1="552.5" y2="552.5"/>
    <polygon fill="none" points="49,558.5,53,562.5,49,566.5,45,562.5" style="stroke: #B38D22; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="58"
          y="567.9189">components_ : omexmeta::Components
    </text>
    <line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="515" y1="574.3359" y2="574.3359"/>
    <ellipse cx="49" cy="585.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="58"
          y="589.7549">SemsimModel()
    </text>
    <ellipse cx="49" cy="599.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="58"
          y="603.5908">SemsimModel(const SemsimModel&amp; other)
    </text>
    <ellipse cx="49" cy="613.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="452" x="58"
          y="617.4268">SemsimModel(SemsimModel&amp;&amp; other) noexcept: components_(std::move(othercomponents_))
    </text>
    <ellipse cx="49" cy="626.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="58"
          y="631.2627">~SemsimModel()
    </text>
    <ellipse cx="49" cy="640.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="321" x="58"
          y="645.0986">findComponentWithMetaId(const std::string&amp; metaid) : Component&amp;
    </text>
    <ellipse cx="49" cy="654.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="360" x="58"
          y="658.9346">findComponentWithMetaId(const std::string&amp; metaid) : Component&amp; {query}
    </text>
    <ellipse cx="49" cy="668.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="294" x="58"
          y="672.7705">addComponent(const Component&amp; component) : Component*
    </text>
    <ellipse cx="49" cy="682.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="58"
          y="686.6064">addComponent(Component&amp;&amp; component) : Component*
    </text>
    <ellipse cx="49" cy="696.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="58"
          y="700.4424">getComponents() : Components&amp; {query}
    </text>
    <ellipse cx="49" cy="709.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="58"
          y="714.2783">getComponents() : Components&amp;
    </text>
    <ellipse cx="49" cy="723.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="58"
          y="728.1143">addComponent(const Process&amp; component) : Process*
    </text>
    <ellipse cx="49" cy="737.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="58"
          y="741.9502">addComponent(Process&amp;&amp; component) : Process*
    </text>
    <ellipse cx="49" cy="751.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="58"
          y="755.7861">containsMetaId(const std::string&amp; metaid) : bool {query}
    </text>
    <ellipse cx="49" cy="765.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="58"
          y="769.6221">hasComponentWithMetaId(const std::string&amp; metaid) : bool {query}
    </text>
    <ellipse cx="49" cy="779.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="58"
          y="783.458">getNumComponents() : std::size_t {query}
    </text>
    <ellipse cx="49" cy="792.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
          textLength="162" x="58" y="797.2939">encodeXML() : std::string {query}
    </text>
    <ellipse cx="49" cy="806.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
          textLength="154" x="58" y="811.1299">getFormat() : std::string {query}
    </text>
    <ellipse cx="49" cy="820.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
          textLength="401" x="58" y="824.9658">getRDF(const URI&amp; sbml_base_uri, const std::string&amp; format) :
        std::string {query}
    </text>
    <ellipse cx="49" cy="834.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
    <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="58"
          y="838.8018">humanize() : std::string {query}
    </text><!--MD5=[3e75699f67b617f0011f1062a1c61cfc]
class omexmeta.SingularAnnotation--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="227.8672" id="semsim.SingularAnnotation" style="stroke: #A80036; stroke-width: 1.5;" width="540" x="2938" y="569"/><ellipse cx="3151.75" cy="585" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3154.5156,580.875 Q3154.6719,580.6563 3154.8594,580.5469 Q3155.0469,580.4375 3155.2656,580.4375 Q3155.6406,580.4375 3155.875,580.6953 Q3156.1094,580.9531 3156.1094,581.5625 L3156.1094,583.0156 Q3156.1094,583.625 3155.875,583.8906 Q3155.6406,584.1563 3155.2656,584.1563 Q3154.9219,584.1563 3154.7188,583.9531 Q3154.5156,583.7656 3154.4063,583.25 Q3154.3594,582.8906 3154.1719,582.7031 Q3153.8438,582.3281 3153.2344,582.1094 Q3152.625,581.8906 3152,581.8906 Q3151.2344,581.8906 3150.6016,582.2188 Q3149.9688,582.5469 3149.4766,583.2969 Q3148.9844,584.0469 3148.9844,585.0781 L3148.9844,586.1719 Q3148.9844,587.4063 3149.875,588.2266 Q3150.7656,589.0469 3152.3594,589.0469 Q3153.2969,589.0469 3153.9531,588.7969 Q3154.3438,588.6406 3154.7656,588.2031 Q3155.0313,587.9375 3155.1797,587.8594 Q3155.3281,587.7813 3155.5313,587.7813 Q3155.8594,587.7813 3156.1172,588.0391 Q3156.375,588.2969 3156.375,588.6406 Q3156.375,588.9844 3156.0313,589.3906 Q3155.5313,589.9688 3154.7344,590.2969 Q3153.6563,590.75 3152.3594,590.75 Q3150.8438,590.75 3149.6406,590.125 Q3148.6563,589.625 3147.9688,588.5547 Q3147.2813,587.4844 3147.2813,586.2031 L3147.2813,585.0469 Q3147.2813,583.7188 3147.8984,582.5703 Q3148.5156,581.4219 3149.6094,580.8047 Q3150.7031,580.1875 3151.9375,580.1875 Q3152.6719,580.1875 3153.3203,580.3516 Q3153.9688,580.5156 3154.5156,580.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="3172.25" y="589.9102">SingularAnnotation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2939" x2="3477" y1="601" y2="601"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2939" x2="3477" y1="609" y2="609"/><ellipse cx="2949" cy="620" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="354" x="2958" y="624.4189">SingularAnnotation(const std::string&amp; metaid, const Resource&amp; definition)</text><ellipse cx="2949" cy="633.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="2958" y="638.2549">SingularAnnotation(const std::string&amp; metaid)</text><ellipse cx="2949" cy="647.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="2958" y="652.0908">SingularAnnotation(const std::string&amp; metaid, Resource&amp;&amp; definition)</text><ellipse cx="2949" cy="661.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="2958" y="665.9268">SingularAnnotation(const SingularAnnotation&amp; other)</text><ellipse cx="2949" cy="675.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="2958" y="679.7627">SingularAnnotation(SingularAnnotation&amp;&amp; other)</text><ellipse cx="2949" cy="689.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="2958" y="693.5986">clone() : AnnotationBase* {query}</text><ellipse cx="2949" cy="703.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="339" x="2958" y="707.4346">makeComposite(const PhysicalProperty&amp; prop) : AnnotationPtr {query}</text><ellipse cx="2949" cy="716.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="2958" y="721.2705">getURI(const URI&amp; base) : URI {query}</text><ellipse cx="2949" cy="730.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2958" y="735.1064">isComposite() : bool {query}</text><ellipse cx="2949" cy="744.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="2958" y="748.9424">getRDF(const URI&amp; sbml_base_uri, const std::string&amp; format) : std::string {query}</text><ellipse cx="2949" cy="758.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2958" y="762.7783">humanize() : std::string {query}</text><ellipse cx="2949" cy="772.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="2958" y="776.6143">getMetaId() : std::string&amp; {query}</text><ellipse cx="2949" cy="786.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="514" x="2958" y="790.4502">serializeToRDF(const URI&amp; sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}</text><!--MD5=[89e1663c114f064c22876e3e5b3f56ad]
class omexmeta.Sink--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="131.0156" id="semsim.Sink" style="stroke: #A80036; stroke-width: 1.5;" width="536" x="2596" y="1387.5"/><ellipse cx="2847.75" cy="1403.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2850.5156,1399.375 Q2850.6719,1399.1563 2850.8594,1399.0469 Q2851.0469,1398.9375 2851.2656,1398.9375 Q2851.6406,1398.9375 2851.875,1399.1953 Q2852.1094,1399.4531 2852.1094,1400.0625 L2852.1094,1401.5156 Q2852.1094,1402.125 2851.875,1402.3906 Q2851.6406,1402.6563 2851.2656,1402.6563 Q2850.9219,1402.6563 2850.7188,1402.4531 Q2850.5156,1402.2656 2850.4063,1401.75 Q2850.3594,1401.3906 2850.1719,1401.2031 Q2849.8438,1400.8281 2849.2344,1400.6094 Q2848.625,1400.3906 2848,1400.3906 Q2847.2344,1400.3906 2846.6016,1400.7188 Q2845.9688,1401.0469 2845.4766,1401.7969 Q2844.9844,1402.5469 2844.9844,1403.5781 L2844.9844,1404.6719 Q2844.9844,1405.9063 2845.875,1406.7266 Q2846.7656,1407.5469 2848.3594,1407.5469 Q2849.2969,1407.5469 2849.9531,1407.2969 Q2850.3438,1407.1406 2850.7656,1406.7031 Q2851.0313,1406.4375 2851.1797,1406.3594 Q2851.3281,1406.2813 2851.5313,1406.2813 Q2851.8594,1406.2813 2852.1172,1406.5391 Q2852.375,1406.7969 2852.375,1407.1406 Q2852.375,1407.4844 2852.0313,1407.8906 Q2851.5313,1408.4688 2850.7344,1408.7969 Q2849.6563,1409.25 2848.3594,1409.25 Q2846.8438,1409.25 2845.6406,1408.625 Q2844.6563,1408.125 2843.9688,1407.0547 Q2843.2813,1405.9844 2843.2813,1404.7031 L2843.2813,1403.5469 Q2843.2813,1402.2188 2843.8984,1401.0703 Q2844.5156,1399.9219 2845.6094,1399.3047 Q2846.7031,1398.6875 2847.9375,1398.6875 Q2848.6719,1398.6875 2849.3203,1398.8516 Q2849.9688,1399.0156 2850.5156,1399.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="2868.25" y="1408.4102">Sink</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2597" x2="3131" y1="1419.5" y2="1419.5"/><polygon fill="none" points="2607,1425.5,2611,1429.5,2607,1433.5,2603,1429.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="2616" y="1434.9189">component_ : Component*</text><polygon fill="none" points="2607,1439.3359,2611,1443.3359,2607,1447.3359,2603,1443.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="2616" y="1448.7549">multiplier_ : double</text><polygon fill="none" points="2607,1453.1719,2611,1457.1719,2607,1461.1719,2603,1457.1719" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="2616" y="1462.5908">id_ : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2597" x2="3131" y1="1469.0078" y2="1469.0078"/><ellipse cx="2607" cy="1480.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="326" x="2616" y="1484.4268">Sink(const std::string&amp; id, Component* component, double multiplier)</text><ellipse cx="2607" cy="1493.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="510" x="2616" y="1498.2627">serializeToRDF(const URI&amp; sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : URI {query}</text><ellipse cx="2607" cy="1507.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="2616" y="1512.0986">containsMetaId(const std::string&amp; metaid) : bool {query}</text><!--MD5=[ebcb86e1f5baafdf05579500e5748823]
class omexmeta.Source--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="131.0156" id="semsim.Source" style="stroke: #A80036; stroke-width: 1.5;" width="536" x="3167" y="1387.5"/><ellipse cx="3411.25" cy="1403.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3414.0156,1399.375 Q3414.1719,1399.1563 3414.3594,1399.0469 Q3414.5469,1398.9375 3414.7656,1398.9375 Q3415.1406,1398.9375 3415.375,1399.1953 Q3415.6094,1399.4531 3415.6094,1400.0625 L3415.6094,1401.5156 Q3415.6094,1402.125 3415.375,1402.3906 Q3415.1406,1402.6563 3414.7656,1402.6563 Q3414.4219,1402.6563 3414.2188,1402.4531 Q3414.0156,1402.2656 3413.9063,1401.75 Q3413.8594,1401.3906 3413.6719,1401.2031 Q3413.3438,1400.8281 3412.7344,1400.6094 Q3412.125,1400.3906 3411.5,1400.3906 Q3410.7344,1400.3906 3410.1016,1400.7188 Q3409.4688,1401.0469 3408.9766,1401.7969 Q3408.4844,1402.5469 3408.4844,1403.5781 L3408.4844,1404.6719 Q3408.4844,1405.9063 3409.375,1406.7266 Q3410.2656,1407.5469 3411.8594,1407.5469 Q3412.7969,1407.5469 3413.4531,1407.2969 Q3413.8438,1407.1406 3414.2656,1406.7031 Q3414.5313,1406.4375 3414.6797,1406.3594 Q3414.8281,1406.2813 3415.0313,1406.2813 Q3415.3594,1406.2813 3415.6172,1406.5391 Q3415.875,1406.7969 3415.875,1407.1406 Q3415.875,1407.4844 3415.5313,1407.8906 Q3415.0313,1408.4688 3414.2344,1408.7969 Q3413.1563,1409.25 3411.8594,1409.25 Q3410.3438,1409.25 3409.1406,1408.625 Q3408.1563,1408.125 3407.4688,1407.0547 Q3406.7813,1405.9844 3406.7813,1404.7031 L3406.7813,1403.5469 Q3406.7813,1402.2188 3407.3984,1401.0703 Q3408.0156,1399.9219 3409.1094,1399.3047 Q3410.2031,1398.6875 3411.4375,1398.6875 Q3412.1719,1398.6875 3412.8203,1398.8516 Q3413.4688,1399.0156 3414.0156,1399.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="39" x="3431.75" y="1408.4102">Source</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3168" x2="3702" y1="1419.5" y2="1419.5"/><polygon fill="none" points="3178,1425.5,3182,1429.5,3178,1433.5,3174,1429.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="3187" y="1434.9189">component_ : Component*</text><polygon fill="none" points="3178,1439.3359,3182,1443.3359,3178,1447.3359,3174,1443.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="3187" y="1448.7549">multiplier_ : double</text><polygon fill="none" points="3178,1453.1719,3182,1457.1719,3178,1461.1719,3174,1457.1719" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="3187" y="1462.5908">id_ : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3168" x2="3702" y1="1469.0078" y2="1469.0078"/><ellipse cx="3178" cy="1480.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="341" x="3187" y="1484.4268">Source(const std::string&amp; id, Component* component, double multiplier)</text><ellipse cx="3178" cy="1493.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="510" x="3187" y="1498.2627">serializeToRDF(const URI&amp; sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : URI {query}</text><ellipse cx="3178" cy="1507.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="3187" y="1512.0986">containsMetaId(const std::string&amp; metaid) : bool {query}</text><!--MD5=[65e52c910b2b570328d315e64b26e05b]
class omexmeta.Term--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="214.0313" id="semsim.Term" style="stroke: #A80036; stroke-width: 1.5;" width="308" x="642" y="988.5"/><ellipse cx="777.25" cy="1004.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M780.0156,1000.375 Q780.1719,1000.1563 780.3594,1000.0469 Q780.5469,999.9375 780.7656,999.9375 Q781.1406,999.9375 781.375,1000.1953 Q781.6094,1000.4531 781.6094,1001.0625 L781.6094,1002.5156 Q781.6094,1003.125 781.375,1003.3906 Q781.1406,1003.6563 780.7656,1003.6563 Q780.4219,1003.6563 780.2188,1003.4531 Q780.0156,1003.2656 779.9063,1002.75 Q779.8594,1002.3906 779.6719,1002.2031 Q779.3438,1001.8281 778.7344,1001.6094 Q778.125,1001.3906 777.5,1001.3906 Q776.7344,1001.3906 776.1016,1001.7188 Q775.4688,1002.0469 774.9766,1002.7969 Q774.4844,1003.5469 774.4844,1004.5781 L774.4844,1005.6719 Q774.4844,1006.9063 775.375,1007.7266 Q776.2656,1008.5469 777.8594,1008.5469 Q778.7969,1008.5469 779.4531,1008.2969 Q779.8438,1008.1406 780.2656,1007.7031 Q780.5313,1007.4375 780.6797,1007.3594 Q780.8281,1007.2813 781.0313,1007.2813 Q781.3594,1007.2813 781.6172,1007.5391 Q781.875,1007.7969 781.875,1008.1406 Q781.875,1008.4844 781.5313,1008.8906 Q781.0313,1009.4688 780.2344,1009.7969 Q779.1563,1010.25 777.8594,1010.25 Q776.3438,1010.25 775.1406,1009.625 Q774.1563,1009.125 773.4688,1008.0547 Q772.7813,1006.9844 772.7813,1005.7031 L772.7813,1004.5469 Q772.7813,1003.2188 773.3984,1002.0703 Q774.0156,1000.9219 775.1094,1000.3047 Q776.2031,999.6875 777.4375,999.6875 Q778.1719,999.6875 778.8203,999.8516 Q779.4688,1000.0156 780.0156,1000.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="797.75" y="1009.4102">Term</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="643" x2="949" y1="1020.5" y2="1020.5"/><polygon fill="none" points="653,1026.5,657,1030.5,653,1034.5,649,1030.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="662" y="1035.9189">relation_ : Relation</text><polygon fill="none" points="653,1040.3359,657,1044.3359,653,1048.3359,649,1044.3359" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="662" y="1049.7549">is_version_of_value_ : Resource</text><polygon fill="none" points="653,1054.1719,657,1058.1719,653,1062.1719,649,1058.1719" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="662" y="1063.5908">is_value_ : bool</text><polygon fill="none" points="653,1068.0078,657,1072.0078,653,1076.0078,649,1072.0078" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="662" y="1077.4268">value_ : double</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="643" x2="949" y1="1083.8438" y2="1083.8438"/><ellipse cx="653" cy="1094.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="662" y="1099.2627">Term(const Relation&amp; relation, const Resource&amp; resource)</text><ellipse cx="653" cy="1108.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="662" y="1113.0986">Term(Relation&amp;&amp; relation, Resource&amp;&amp; resource)</text><ellipse cx="653" cy="1122.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="662" y="1126.9346">Term(const Relation&amp; relation, const double value)</text><ellipse cx="653" cy="1136.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="662" y="1140.7705">getRelation() : Relation&amp; {query}</text><ellipse cx="653" cy="1150.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="662" y="1154.6064">getResourceNode() : Resource&amp; {query}</text><ellipse cx="653" cy="1164.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="662" y="1168.4424">isValue() : bool {query}</text><ellipse cx="653" cy="1177.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="662" y="1182.2783">getValue() : double {query}</text><ellipse cx="653" cy="1191.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="662" y="1196.1143">toString() : std::string {query}</text><!--MD5=[3c05f7d82d57a07159c08987cc5d853e]
class omexmeta.URI--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="186.3594" id="semsim.URI" style="stroke: #A80036; stroke-width: 1.5;" width="284" x="667" y="1779.5"/><ellipse cx="794.25" cy="1795.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M797.0156,1791.375 Q797.1719,1791.1563 797.3594,1791.0469 Q797.5469,1790.9375 797.7656,1790.9375 Q798.1406,1790.9375 798.375,1791.1953 Q798.6094,1791.4531 798.6094,1792.0625 L798.6094,1793.5156 Q798.6094,1794.125 798.375,1794.3906 Q798.1406,1794.6563 797.7656,1794.6563 Q797.4219,1794.6563 797.2188,1794.4531 Q797.0156,1794.2656 796.9063,1793.75 Q796.8594,1793.3906 796.6719,1793.2031 Q796.3438,1792.8281 795.7344,1792.6094 Q795.125,1792.3906 794.5,1792.3906 Q793.7344,1792.3906 793.1016,1792.7188 Q792.4688,1793.0469 791.9766,1793.7969 Q791.4844,1794.5469 791.4844,1795.5781 L791.4844,1796.6719 Q791.4844,1797.9063 792.375,1798.7266 Q793.2656,1799.5469 794.8594,1799.5469 Q795.7969,1799.5469 796.4531,1799.2969 Q796.8438,1799.1406 797.2656,1798.7031 Q797.5313,1798.4375 797.6797,1798.3594 Q797.8281,1798.2813 798.0313,1798.2813 Q798.3594,1798.2813 798.6172,1798.5391 Q798.875,1798.7969 798.875,1799.1406 Q798.875,1799.4844 798.5313,1799.8906 Q798.0313,1800.4688 797.2344,1800.7969 Q796.1563,1801.25 794.8594,1801.25 Q793.3438,1801.25 792.1406,1800.625 Q791.1563,1800.125 790.4688,1799.0547 Q789.7813,1797.9844 789.7813,1796.7031 L789.7813,1795.5469 Q789.7813,1794.2188 790.3984,1793.0703 Q791.0156,1791.9219 792.1094,1791.3047 Q793.2031,1790.6875 794.4375,1790.6875 Q795.1719,1790.6875 795.8203,1790.8516 Q796.4688,1791.0156 797.0156,1791.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="814.75" y="1800.4102">URI</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="668" x2="950" y1="1811.5" y2="1811.5"/><polygon fill="none" points="678,1817.5,682,1821.5,678,1825.5,674,1821.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="687" y="1826.9189">encoded_uri_ : std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="668" x2="950" y1="1833.3359" y2="1833.3359"/><ellipse cx="678" cy="1844.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="24" x="687" y="1848.7549">URI()</text><ellipse cx="678" cy="1858.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="687" y="1862.5908">URI(const std::string&amp; uri)</text><ellipse cx="678" cy="1872.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="687" y="1876.4268">URI(const char* uri)</text><ellipse cx="678" cy="1885.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="687" y="1890.2627">URI(std::string&amp;&amp; uri)</text><ellipse cx="678" cy="1899.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="687" y="1904.0986">appendToFrag(const std::string&amp; suffix) : URI {query}</text><ellipse cx="678" cy="1913.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="687" y="1917.9346">withFrag(const std::string&amp; suffix) : URI {query}</text><ellipse cx="678" cy="1927.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="687" y="1931.7705">operator==(const URI&amp; other) : bool {query}</text><ellipse cx="678" cy="1941.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="687" y="1945.6064">encode() : std::string {query}</text><ellipse cx="678" cy="1955.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="687" y="1959.4424">toString() : std::string {query}</text><!--MD5=[9696aceb14994c21d4154f127eeab027]
class omexmeta.bqb--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="255.5391" id="semsim.bqb" style="stroke: #A80036; stroke-width: 1.5;" width="261" x="38.5" y="967.5"/><ellipse cx="154.25" cy="983.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M157.0156,979.375 Q157.1719,979.1563 157.3594,979.0469 Q157.5469,978.9375 157.7656,978.9375 Q158.1406,978.9375 158.375,979.1953 Q158.6094,979.4531 158.6094,980.0625 L158.6094,981.5156 Q158.6094,982.125 158.375,982.3906 Q158.1406,982.6563 157.7656,982.6563 Q157.4219,982.6563 157.2188,982.4531 Q157.0156,982.2656 156.9063,981.75 Q156.8594,981.3906 156.6719,981.2031 Q156.3438,980.8281 155.7344,980.6094 Q155.125,980.3906 154.5,980.3906 Q153.7344,980.3906 153.1016,980.7188 Q152.4688,981.0469 151.9766,981.7969 Q151.4844,982.5469 151.4844,983.5781 L151.4844,984.6719 Q151.4844,985.9063 152.375,986.7266 Q153.2656,987.5469 154.8594,987.5469 Q155.7969,987.5469 156.4531,987.2969 Q156.8438,987.1406 157.2656,986.7031 Q157.5313,986.4375 157.6797,986.3594 Q157.8281,986.2813 158.0313,986.2813 Q158.3594,986.2813 158.6172,986.5391 Q158.875,986.7969 158.875,987.1406 Q158.875,987.4844 158.5313,987.8906 Q158.0313,988.4688 157.2344,988.7969 Q156.1563,989.25 154.8594,989.25 Q153.3438,989.25 152.1406,988.625 Q151.1563,988.125 150.4688,987.0547 Q149.7813,985.9844 149.7813,984.7031 L149.7813,983.5469 Q149.7813,982.2188 150.3984,981.0703 Q151.0156,979.9219 152.1094,979.3047 Q153.2031,978.6875 154.4375,978.6875 Q155.1719,978.6875 155.8203,978.8516 Q156.4688,979.0156 157.0156,979.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="174.75" y="988.4102">bqb</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="298.5" y1="999.5" y2="999.5"/><ellipse cx="49.5" cy="1010.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="148" x="58.5" y="1014.9189">encodes : const static Relation</text><ellipse cx="49.5" cy="1024.3359" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="58.5" y="1028.7549">hasPart : const static Relation</text><ellipse cx="49.5" cy="1038.1719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="165" x="58.5" y="1042.5908">isVersionOf : const static Relation</text><ellipse cx="49.5" cy="1052.0078" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="154" x="58.5" y="1056.4268">hasTaxon : const static Relation</text><ellipse cx="49.5" cy="1065.8438" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="162" x="58.5" y="1070.2627">hasVersion : const static Relation</text><ellipse cx="49.5" cy="1079.6797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="114" x="58.5" y="1084.0986">is : const static Relation</text><ellipse cx="49.5" cy="1093.5156" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="176" x="58.5" y="1097.9346">isDescribedBy : const static Relation</text><ellipse cx="49.5" cy="1107.3516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="169" x="58.5" y="1111.7705">isEncodedBy : const static Relation</text><ellipse cx="49.5" cy="1121.1875" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="58.5" y="1125.6064">isHomologTo : const static Relation</text><ellipse cx="49.5" cy="1135.0234" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="58.5" y="1139.4424">isPartOf : const static Relation</text><ellipse cx="49.5" cy="1148.8594" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="58.5" y="1153.2783">isPropertyOf : const static Relation</text><ellipse cx="49.5" cy="1162.6953" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="58.5" y="1167.1143">isVersionOf : const static Relation</text><ellipse cx="49.5" cy="1176.5313" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="148" x="58.5" y="1180.9502">occursIn : const static Relation</text><ellipse cx="49.5" cy="1190.3672" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="135" x="58.5" y="1194.7861">root : const static std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="298.5" y1="1201.2031" y2="1201.2031"/><ellipse cx="49.5" cy="1212.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="235" x="58.5" y="1216.6221">humanizeQualifier(const Relation&amp; q) : std::string</text><!--MD5=[d521990f0f5f5e9bceff28f17ed1b86f]
class omexmeta.omexmeta--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="158.6875" id="semsim.semsim" style="stroke: #A80036; stroke-width: 1.5;" width="267" x="334.5" y="1016"/><ellipse cx="440.75" cy="1032" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M443.5156,1027.875 Q443.6719,1027.6563 443.8594,1027.5469 Q444.0469,1027.4375 444.2656,1027.4375 Q444.6406,1027.4375 444.875,1027.6953 Q445.1094,1027.9531 445.1094,1028.5625 L445.1094,1030.0156 Q445.1094,1030.625 444.875,1030.8906 Q444.6406,1031.1563 444.2656,1031.1563 Q443.9219,1031.1563 443.7188,1030.9531 Q443.5156,1030.7656 443.4063,1030.25 Q443.3594,1029.8906 443.1719,1029.7031 Q442.8438,1029.3281 442.2344,1029.1094 Q441.625,1028.8906 441,1028.8906 Q440.2344,1028.8906 439.6016,1029.2188 Q438.9688,1029.5469 438.4766,1030.2969 Q437.9844,1031.0469 437.9844,1032.0781 L437.9844,1033.1719 Q437.9844,1034.4063 438.875,1035.2266 Q439.7656,1036.0469 441.3594,1036.0469 Q442.2969,1036.0469 442.9531,1035.7969 Q443.3438,1035.6406 443.7656,1035.2031 Q444.0313,1034.9375 444.1797,1034.8594 Q444.3281,1034.7813 444.5313,1034.7813 Q444.8594,1034.7813 445.1172,1035.0391 Q445.375,1035.2969 445.375,1035.6406 Q445.375,1035.9844 445.0313,1036.3906 Q444.5313,1036.9688 443.7344,1037.2969 Q442.6563,1037.75 441.3594,1037.75 Q439.8438,1037.75 438.6406,1037.125 Q437.6563,1036.625 436.9688,1035.5547 Q436.2813,1034.4844 436.2813,1033.2031 L436.2813,1032.0469 Q436.2813,1030.7188 436.8984,1029.5703 Q437.5156,1028.4219 438.6094,1027.8047 Q439.7031,1027.1875 440.9375,1027.1875 Q441.6719,1027.1875 442.3203,1027.3516 Q442.9688,1027.5156 443.5156,1027.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="46" x="461.25" y="1036.9102">semsim</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="335.5" x2="600.5" y1="1048" y2="1048"/><ellipse cx="345.5" cy="1059" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="215" x="354.5" y="1063.4189">hasMediatorParticipant : const static Relation</text><ellipse cx="345.5" cy="1072.8359" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="165" x="354.5" y="1077.2549">hasMultiplier : const static Relation</text><ellipse cx="345.5" cy="1086.6719" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="241" x="354.5" y="1091.0908">hasPhysicalEntityReference : const static Relation</text><ellipse cx="345.5" cy="1100.5078" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="170" x="354.5" y="1104.9268">hasSBOTerm : const static Relation</text><ellipse cx="345.5" cy="1114.3438" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="194" x="354.5" y="1118.7627">hasSinkParticipant : const static Relation</text><ellipse cx="345.5" cy="1128.1797" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="209" x="354.5" y="1132.5986">hasSourceParticipant : const static Relation</text><ellipse cx="345.5" cy="1142.0156" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="152" x="354.5" y="1146.4346">hasValue : const static Relation</text><ellipse cx="345.5" cy="1155.8516" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="135" x="354.5" y="1160.2705">root : const static std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="335.5" x2="600.5" y1="1166.6875" y2="1166.6875"/><!--MD5=[71fa3de94e04873e11e60aaa2e645c68]
class ModelStrings--><rect fill="#FEFECE" filter="url(#f1q1o7wfqgso2l)" height="75.6719" id="ModelStrings" style="stroke: #A80036; stroke-width: 1.5;" width="152" x="5112" y="212"/><ellipse cx="5148.6" cy="228" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5151.3656,223.875 Q5151.5219,223.6563 5151.7094,223.5469 Q5151.8969,223.4375 5152.1156,223.4375 Q5152.4906,223.4375 5152.725,223.6953 Q5152.9594,223.9531 5152.9594,224.5625 L5152.9594,226.0156 Q5152.9594,226.625 5152.725,226.8906 Q5152.4906,227.1563 5152.1156,227.1563 Q5151.7719,227.1563 5151.5688,226.9531 Q5151.3656,226.7656 5151.2563,226.25 Q5151.2094,225.8906 5151.0219,225.7031 Q5150.6938,225.3281 5150.0844,225.1094 Q5149.475,224.8906 5148.85,224.8906 Q5148.0844,224.8906 5147.4516,225.2188 Q5146.8188,225.5469 5146.3266,226.2969 Q5145.8344,227.0469 5145.8344,228.0781 L5145.8344,229.1719 Q5145.8344,230.4063 5146.725,231.2266 Q5147.6156,232.0469 5149.2094,232.0469 Q5150.1469,232.0469 5150.8031,231.7969 Q5151.1938,231.6406 5151.6156,231.2031 Q5151.8813,230.9375 5152.0297,230.8594 Q5152.1781,230.7813 5152.3813,230.7813 Q5152.7094,230.7813 5152.9672,231.0391 Q5153.225,231.2969 5153.225,231.6406 Q5153.225,231.9844 5152.8813,232.3906 Q5152.3813,232.9688 5151.5844,233.2969 Q5150.5063,233.75 5149.2094,233.75 Q5147.6938,233.75 5146.4906,233.125 Q5145.5063,232.625 5144.8188,231.5547 Q5144.1313,230.4844 5144.1313,229.2031 L5144.1313,228.0469 Q5144.1313,226.7188 5144.7484,225.5703 Q5145.3656,224.4219 5146.4594,223.8047 Q5147.5531,223.1875 5148.7875,223.1875 Q5149.5219,223.1875 5150.1703,223.3516 Q5150.8188,223.5156 5151.3656,223.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="5167.4" y="232.9102">ModelStrings</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5113" x2="5263" y1="244" y2="244"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5113" x2="5263" y1="252" y2="252"/><ellipse cx="5123" cy="263" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="5132" y="267.4189">ModelStrings()</text><ellipse cx="5123" cy="276.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="126" x="5132" y="281.2549">Teusink2000() : std::string</text><!--MD5=[33c7963c6b3df0a6dbda76abb29e299b]
reverse link omexmeta.AnnotationBase to omexmeta.CompositeAnnotation--><path d="M2085.12,349.59 C2091.09,398.08 2098.44,457.9 2105.26,513.36 " fill="none" id="semsim.AnnotationBase&lt;-semsim.CompositeAnnotation" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2078.15,350.26,2082.66,329.55,2092.05,348.55,2078.15,350.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7ca22df515d4632c0440a15075e92ea4]
reverse link omexmeta.AnnotationBase to omexmeta.SingularAnnotation--><path d="M2186.87,341.51 C2239.12,378.25 2303.69,417.32 2368,440 C2600.73,522.07 2687.02,418.65 2920,500 C2967.33,516.52 3014.88,542.05 3057.33,568.82 " fill="none" id="semsim.AnnotationBase&lt;-semsim.SingularAnnotation" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2182.53,347.01,2170.35,329.68,2190.68,335.63,2182.53,347.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e8b65a39de4a48d3e5b29857a3e94b16]
reverse link omexmeta.Component to omexmeta.Process--><path d="M2293,2124.526 C2293,2137.881 2293,2151.049 2293,2163.817 " fill="none" id="semsim.Component&lt;-semsim.Process" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2286,2124.141,2293,2104.141,2300,2124.141,2286,2124.141" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8b674757e2149934ac3a67bd578419dd]
reverse link omexmeta.EntityBase to omexmeta.Entity--><path d="M3163.49,440.01 C3312.25,478.23 3402.21,389.05 3495,500 C3521.09,531.19 3520.61,834.41 3495,866 C3413.75,966.21 3331.3,879.4 3211,926 C3199.95,930.28 3188.84,934.95 3177.73,939.93 " fill="none" id="semsim.EntityBase&lt;-semsim.Entity" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3161.34,446.68,3144.08,434.39,3165.24,433.23,3161.34,446.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e4193689b010cb69348c4821165beee7]
reverse link omexmeta.EntityBase to omexmeta.SingularAnnotation--><path d="M2973.88,454.23 C3014.35,493.6 3055.39,533.52 3091.56,568.71 " fill="none" id="semsim.EntityBase&lt;-semsim.SingularAnnotation" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2968.76,459.01,2959.31,440.04,2978.52,448.97,2968.76,459.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[193abdf99051e44da3fa8136229841fa]
reverse link omexmeta.Exception to omexmeta.NullPointerException--><path d="M1663.34,328.86 C1665.65,425.46 1677.85,585.52 1688.98,651.81 " fill="none" id="semsim.Exception&lt;-semsim.NullPointerException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1656.34,328.8,1663,308.68,1670.34,328.56,1656.34,328.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[dbc954699b62d01be052d448022df535]
reverse link omexmeta.NullPointerException to omexmeta.Exception--><path d="M1703.51,638.71 C1704.35,560.63 1693.25,396.21 1681.56,308.68 " fill="none" id="semsim.NullPointerException&lt;-semsim.Exception" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1703.22,651.81,1707.3509,645.8993,1703.4837,639.8129,1699.3528,645.7236,1703.22,651.81" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d96de9c317f04d3822817c9f2cc99364]
reverse link omexmeta.Ontology to omexmeta.CHEBI--><path d="M999.082,292.03 C929.758,336.89 821.232,413.96 746,500 C704.482,547.48 670.787,613.61 653.224,651.7 " fill="none" id="semsim.Ontology&lt;-semsim.CHEBI" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="995.624,285.94,1016.25,281.06,1003.162,297.73,995.624,285.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e5de74a78f02d0bb7a20b9c5d0107e8c]
reverse link omexmeta.Ontology to omexmeta.CL--><path d="M1042.12,299.32 C997.884,388.83 904.379,578.04 867.961,651.73 " fill="none" id="semsim.Ontology&lt;-semsim.CL" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1035.89,296.14,1051.02,281.31,1048.44,302.34,1035.89,296.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[42338e4aee6600bd8b3eab8a87a5ea78]
reverse link omexmeta.Ontology to omexmeta.GO--><path d="M1066,301.59 C1066,392 1066,578.65 1066,651.73 " fill="none" id="semsim.Ontology&lt;-semsim.GO" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1059,301.31,1066,281.31,1073,301.31,1059,301.31" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c65b0a7db3f19bc34098557d16188c45]
reverse link omexmeta.Ontology to omexmeta.OPB--><path d="M1089.88,299.32 C1134.12,388.83 1227.62,578.04 1264.04,651.73 " fill="none" id="semsim.Ontology&lt;-semsim.OPB" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1083.56,302.34,1080.98,281.31,1096.11,296.14,1083.56,302.34" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[19124c8f466c992ffe6cb125cff0cc0c]
reverse link omexmeta.Ontology to omexmeta.SBO--><path d="M1132.63,292.14 C1201.67,337.09 1309.8,414.22 1385,500 C1426.68,547.54 1460.77,613.65 1478.58,651.72 " fill="none" id="semsim.Ontology&lt;-semsim.SBO" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1128.57,297.85,1115.54,281.15,1136.14,286.08,1128.57,297.85" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e10835779334254077f7d945237a64f8]
reverse link omexmeta.Participant to omexmeta.Mediator--><path d="M3269.31,1146.76 C3262.86,1185.5 3247.5,1237.03 3211,1265 C3098.84,1350.93 2714.66,1289.11 2578,1325 C2522.33,1339.62 2463.78,1363.98 2414.33,1387.48 " fill="none" id="semsim.Participant&lt;-semsim.Mediator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3262.4,1145.64,3272.06,1126.78,3276.27,1147.55,3262.4,1145.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8bec90365bb9696fce16727237ee5265]
reverse link omexmeta.Participant to omexmeta.Sink--><path d="M3265.16,1146.38 C3256.56,1182.75 3240.34,1231.35 3211,1265 C3165.24,1317.48 3101.03,1357.78 3040.28,1387.3 " fill="none" id="semsim.Participant&lt;-semsim.Sink" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3258.36,1144.68,3269.38,1126.58,3272.06,1147.6,3258.36,1144.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3faf1c281881fc527dfa9fed4d2d55ad]
reverse link omexmeta.Participant to omexmeta.Source--><path d="M3295.85,1144.76 C3324.3,1207.56 3374.1,1317.52 3405.77,1387.45 " fill="none" id="semsim.Participant&lt;-semsim.Source" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="3289.46,1147.61,3287.59,1126.5,3302.22,1141.83,3289.46,1147.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[872c85ca8b52174c4c016258993134fd]
reverse link omexmeta.SemsimModel to omexmeta.SemSimSBMLModel--><path d="M504.01,854.39 C513.602,858.69 523.281,862.59 533,866 C751.833,942.86 1346.91,883.93 1575,926 C1580.94,927.1 1586.92,928.24 1592.91,929.43 " fill="none" id="semsim.SemsimModel&lt;-semsim.SemSimSBMLModel" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="500.731,860.58,485.685,845.66,506.752,847.94,500.731,860.58" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8ff900aee4bd8aca6c240b8e6441ba1a]
reverse link omexmeta.Term to omexmeta.DescriptorTerm--><path d="M799.555,1222.88 C801.465,1290.77 803.682,1369.59 804.955,1414.85 " fill="none" id="semsim.Term&lt;-semsim.DescriptorTerm" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="792.552,1222.87,798.987,1202.68,806.546,1222.48,792.552,1222.87" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0323d9ecb3bdd6905f61e8f258a77832]
reverse link omexmeta.CompositeAnnotation to omexmeta.Entity--><path d="M2436.38,858.12 C2442.28,860.81 2448.16,863.44 2454,866 C2532.03,900.15 2558.37,890.97 2636,926 C2645.77,930.41 2655.63,935.06 2665.52,939.89 " fill="none" id="semsim.CompositeAnnotation&lt;-semsim.Entity" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2424.24,852.52,2428.0068,858.6691,2435.1317,857.5571,2431.3648,851.408,2424.24,852.52" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[13bcc8798f5b022c7069d089fea434c0]
reverse link omexmeta.CompositeAnnotation to omexmeta.PhysicalProperty--><path d="M1822.46,857.29 C1813.96,860.4 1805.47,863.31 1797,866 C1563.89,939.97 1465.6,810.55 1250,926 C1211.5,946.62 1179.23,982.5 1155.32,1015.87 " fill="none" id="semsim.CompositeAnnotation&lt;-semsim.PhysicalProperty" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1834.9,852.59,1827.8733,850.9695,1823.6749,856.8323,1830.7016,858.4529,1834.9,852.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[007297baacd2f214d5111154f67e6ea9]
reverse link omexmeta.IdentityCondition to omexmeta.Resource--><path d="M1368.34,1157.8 C1327.85,1213.38 1267.59,1296.09 1221.27,1359.67 " fill="none" id="semsim.IdentityCondition&lt;-semsim.Resource" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1376.17,1147.06,1369.4044,1149.5554,1369.1057,1156.7603,1375.8713,1154.2649,1376.17,1147.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c93dd3bc7c4632528ad49f1d3cc7e1fb]
reverse link omexmeta.Mediator to omexmeta.Component--><path d="M2293,1531.842 C2293,1563.319 2293,1601.454 2293,1640.64 " fill="none" id="semsim.Mediator&lt;-semsim.Component" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2293,1518.776,2289,1524.776,2293,1530.776,2297,1524.776,2293,1518.776" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[fed37e493c48c0257d8a79b8dbaf0eae]
reverse link omexmeta.PhysicalProperty to omexmeta.Resource--><path d="M1120.64,1188.49 C1127.31,1241.18 1135.66,1307.08 1142.33,1359.8 " fill="none" id="semsim.PhysicalProperty&lt;-semsim.Resource" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1118.99,1175.4,1115.7809,1181.8577,1120.5076,1187.3036,1123.7167,1180.8459,1118.99,1175.4" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[803b4021dc5c3b2acee03b6919e110d4]
reverse link omexmeta.Relation to omexmeta.URI--><path d="M530.84,1535.859 C588.792,1605.787 672.112,1706.325 732.44,1779.119 " fill="none" id="semsim.Relation&lt;-semsim.URI" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="522.48,1525.771,523.2287,1532.9431,530.1372,1535.0105,529.3884,1527.8384,522.48,1525.771" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[53e14357b269f1a627c444bdf0c1f81b]
reverse link omexmeta.Resource to omexmeta.Component--><path d="M1300.06,1507.537 C1482,1574.229 1796.46,1689.495 2022.81,1772.461 " fill="none" id="semsim.Resource&lt;-semsim.Component" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1287.73,1503.017,1291.9879,1508.8368,1298.9977,1507.1448,1294.7398,1501.325,1287.73,1503.017" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c56bcfe3b24bbbf5761485a6259755fa]
reverse link omexmeta.Resource to omexmeta.URI--><path d="M1069.33,1556.462 C1013.04,1624.587 939.719,1713.311 885.242,1779.236 " fill="none" id="semsim.Resource&lt;-semsim.URI" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1077.86,1546.139,1070.9552,1548.2185,1070.2191,1555.3919,1077.1239,1553.3124,1077.86,1546.139" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3fe14f7b80ac62faac3520812f86af92]
reverse link omexmeta.SBMLImporter to omexmeta.SemSimSBMLModel--><path d="M2460.75,861.14 C2458.49,862.77 2456.24,864.39 2454,866 C2426.39,885.79 2397.19,906.02 2367.92,925.86 " fill="none" id="semsim.SBMLImporter&lt;-semsim.SemSimSBMLModel" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2471.35,853.43,2464.1448,853.7223,2461.6435,860.4857,2468.8486,860.1934,2471.35,853.43" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[911f972e9a2772662b0b190032f15be0]
reverse link omexmeta.SemSimSBMLModel to omexmeta.Component--><path d="M2019.93,1277.43 C1987.72,1370.58 1967.48,1484.535 2007,1581 C2015.45,1601.63 2026.15,1621.581 2038.42,1640.709 " fill="none" id="semsim.SemSimSBMLModel&lt;-semsim.Component" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2024.33,1265.01,2018.5498,1269.3215,2020.3065,1276.3154,2026.0867,1272.0039,2024.33,1265.01" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="7" x="2013.7369" y="1286.0106">2</text><!--MD5=[e7f6c65babeceb4eaaf4f93e479699bc]
reverse link omexmeta.SemsimModel to omexmeta.omexmeta--><path d="M357.831,857.72 C383.468,912.82 410.55,971.03 431.447,1015.94 " fill="none" id="semsim.SemsimModel&lt;-semsim.semsim" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="352.214,845.65,351.1192,852.7775,357.2773,856.5295,358.3721,849.402,352.214,845.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ae71cba6b784cb18669400ed39fae66a]
reverse link omexmeta.Sink to omexmeta.Component--><path d="M2765.06,1526.341 C2708.8,1567.475 2635.35,1621.179 2563.21,1673.929 " fill="none" id="semsim.Sink&lt;-semsim.Component" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2775.72,1518.548,2768.5156,1518.8597,2766.0324,1525.6297,2773.2368,1525.3181,2775.72,1518.548" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3214d252966cb45a3bfa31aaeada4ab0]
reverse link omexmeta.Source to omexmeta.Component--><path d="M3284.31,1523.979 C3240.97,1543.27 3193.4,1563.648 3149,1581 C2955.32,1656.686 2732.82,1731.846 2563.22,1786.75 " fill="none" id="semsim.Source&lt;-semsim.Component" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="3296.42,1518.57,3289.3092,1517.3713,3285.4678,1523.474,3292.5786,1524.6727,3296.42,1518.57" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[729ef96ec81b0cc96af0e27682a36d16]
reverse link omexmeta.Term to omexmeta.Relation--><path d="M687.625,1212.2 C635.73,1267.6 575.221,1332.2 530.088,1380.38 " fill="none" id="semsim.Term&lt;-semsim.Relation" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="696.54,1202.68,689.5191,1204.3253,688.3375,1211.439,695.3584,1209.7936,696.54,1202.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[75ab67eee2c7d0025f4362dd5a2de73c]
reverse link omexmeta.Term to omexmeta.Resource--><path d="M912.173,1211.86 C960.469,1259.82 1015.75,1314.72 1061.26,1359.91 " fill="none" id="semsim.Term&lt;-semsim.Resource" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="902.927,1202.68,904.367,1209.7459,911.4432,1211.1342,910.0032,1204.0684,902.927,1202.68" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d56743776c262b925748a56ab110b326]
reverse link omexmeta.bqb to omexmeta.Relation--><path d="M282.596,1233.86 C323.965,1283.88 369.061,1338.41 403.818,1380.44 " fill="none" id="semsim.bqb&lt;-semsim.Relation" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="274.103,1223.59,274.845,1230.7628,281.7514,1232.8367,281.0095,1225.6639,274.103,1223.59" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="14" x="265.468" y="1244.5498">13</text><!--MD5=[8725b6dc283f2c44aa791b2a11c1938f]
reverse link omexmeta.omexmeta to omexmeta.Relation--><path d="M466.704,1188.64 C465.864,1248.38 464.785,1325.07 464.009,1380.27 " fill="none" id="semsim.semsim&lt;-semsim.Relation" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="466.89,1175.4,462.8047,1181.3422,466.7186,1187.3988,470.8039,1181.4565,466.89,1175.4" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="7" x="459.5082" y="1196.2018">7</text><!--MD5=[c828f971a2b51e0ca317da64395bb2b1]
link omexmeta.Accessor to omexmeta.Annotation--><!--MD5=[9836efe1cbd77d5a9471714e3240453c]
link omexmeta.Annotation to omexmeta.Condition--><!--MD5=[c31f2fb082d876ec92837f171939a62a]
link omexmeta.Condition to omexmeta.EntityDescriptor--><!--MD5=[1c58d081a6f3e441ff6d84a0e2bc4037]
link omexmeta.Accessor to omexmeta.MetaID--><!--MD5=[e47b10737251214cf0dfc202dde64c4f]
link omexmeta.MetaID to omexmeta.Query--><!--MD5=[ea93843c90dc5a1bf3db948e6f6e8858]
link omexmeta.Query to omexmeta.QueryResults--><!--MD5=[73f332972a15e340bf8b653afcf4f41a]
link omexmeta.QueryResults to omexmeta.RDFReader--><!--MD5=[366de23c07247bbe404ea844511eb28a]
link omexmeta.MetaID to omexmeta.RasqalQuery--><!--MD5=[d05c01aeb0866e2f82129968f46ab416]
link omexmeta.RasqalQuery to omexmeta.RasqalQueryResult--><!--MD5=[24b269914a11d5c1c18663d747d04d18]
link omexmeta.RasqalQueryResult to omexmeta.SBMLSpecies--><!--MD5=[9a53bae50068ada9ba751db8f08f3285]
link omexmeta.SBMLSpecies to omexmeta.SelectQuery--><!--MD5=[a7488bcb51a29e357c9d36d40110fcfe]
link omexmeta.RasqalQuery to omexmeta.SemSimObject--><!--MD5=[e3123c9ec94db0ba94df83cecb4195ad]
@startuml






namespace omexmeta {
	class Accessor {
		+{static} hasCompartmentWithMetaId(const std::string& metaid, libsbml::Model* m) : bool
		+{static} findCompartment(const std::string& sid, libsbml::Model* m) : libsbml::Compartment*
		+{static} findUnitDefinition(const std::string& sid, libsbml::Model* m) : libsbml::UnitDefinition*
	}
}


namespace omexmeta {
	class Annotation {
		+{static} stripAnnotations(libsbml::SBMLDocument* d) : void
		+{static} stripAnnotationsFromElement(libsbml::SBase* x) : void
	}
}


namespace omexmeta {
	abstract class AnnotationBase {
		+~AnnotationBase()
		+{abstract} clone() : AnnotationBase* {query}
		+{abstract} isComposite() : bool {query}
		+{abstract} getRDF(const URI& sbml_base_uri, const std::string& format) : std::string {query}
		+{abstract} humanize() : std::string {query}
		+{abstract} getMetaId() : std::string& {query}
		+{abstract} makeComposite(const PhysicalProperty& prop) : std::unique_ptr<AnnotationBase> {query}
		+{abstract} serializeToRDF(const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}
	}
}


namespace omexmeta {
	class CHEBI {
		+{static} get(OntologyTerm t) : Resource
	}
}


namespace omexmeta {
	class CL {
		+{static} get(OntologyTerm t) : Resource
	}
}


namespace omexmeta {
	class Component {
		+Component()
		+Component(const SingularAnnotation& annotation)
		+Component(SingularAnnotation&& annotation)
		+Component(const CompositeAnnotation& annotation)
		+Component(CompositeAnnotation&& annotation)
		+Component(const Component& other)
		+Component(Component&& other) noexcept: annotation_(std::move(otherannotation_))
		+~Component()
		+getAnnotation() : AnnotationBase& {query}
		+getAnnotation() : AnnotationBase&
		#annotation_ : AnnotationPtr
		+clone() : Component* {query}
		+getCompositeAnnotation() : CompositeAnnotation& {query}
		+getCompositeAnnotation() : CompositeAnnotation&
		+getURI(const URI& base) : URI {query}
		+containsMetaId(const std::string& metaid) : bool {query}
		+hasAnnotation() : bool {query}
		+hasCompositeAnnotation() : bool {query}
		+hasMetaId() : bool {query}
		+hasSingularAnnotation() : bool {query}
		+isProcess() : bool {query}
		+getRDF(const URI& sbml_base_uri, const std::string& format) : std::string {query}
		+humanize() : std::string {query}
		#about_value_ : std::string
		+getMetaId() : std::string& {query}
		+serializeToRDF(const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}
		+setAnnotation(AnnotationBase* annotation) : void
		+setAnnotation(const AnnotationBase& annotation) : void
		+setAnnotation(AnnotationPtr&& annotation) : void
		+setMetaId(const std::string& metaid) : void
	}
}


namespace omexmeta {
	class CompositeAnnotation {
		+CompositeAnnotation(const std::string& metaid, const PhysicalProperty& property, const Entity& entity)
		+CompositeAnnotation(const std::string& metaid, PhysicalProperty&& property, Entity&& entity)
		+CompositeAnnotation(const CompositeAnnotation& other)
		+CompositeAnnotation(CompositeAnnotation&& other)
		+CompositeAnnotation(const SingularAnnotation& other, const PhysicalProperty& property)
		+clone() : AnnotationBase* {query}
		+makeComposite(const PhysicalProperty& prop) : AnnotationPtr {query}
		#entity_ : Entity
		+getEntity() : Entity& {query}
		+getEntity() : Entity&
		#property_ : PhysicalProperty
		+isComposite() : bool {query}
		+isEntityEmpty() : bool {query}
		+getRDF(const URI& sbml_base_uri, const std::string& format) : std::string {query}
		+humanize() : std::string {query}
		#about_value_ : std::string
		+getMetaId() : std::string& {query}
		+addTerm(const Relation& relation, const Resource& resource) : void
		#serializePhysicalPropertyToRDF(const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}
		+serializeToRDF(const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}
		+setMetaId(const std::string& metaid) : void
	}
}


namespace omexmeta {
	abstract class Condition {
		+~Condition()
		+{abstract} matches(const Component& component) : bool
	}
}


namespace omexmeta {
	class DescriptorTerm {
		+DescriptorTerm(const Relation& relation, const Resource& resource)
		+DescriptorTerm(Relation&& relation, Resource&& resource)
	}
}


namespace omexmeta {
	class Entity {
		+Entity(const std::string& metaid)
		+Entity(const std::string& metaid, const Resource& definition)
		+Entity(const std::string& metaid, const Resource& definition, const EntityDescriptor& d)
		+Entity(const std::string& metaid, Resource&& definition, EntityDescriptor&& d)
		+Entity(const SingularAnnotation& annotation)
		+Entity(const Entity& other)
		+Entity(Entity&& other)
		+descriptors_() : ) ,
		#descriptors_ : Descriptors
		+getDescriptors() : Descriptors& {query}
		+getDescriptors() : Descriptors&
		+getDescriptor(std::size_t k) : EntityDescriptor& {query}
		+getDescriptor(std::size_t k) : EntityDescriptor&
		+getNumDescriptors() : std::size_t {query}
		+humanize() : std::string {query}
		#humanizeDescriptors() : std::string {query}
		+addDescriptor(const EntityDescriptor& d) : void
		+addDescriptor(EntityDescriptor&& d) : void
		+serializeToRDF(const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}
	}
}


namespace omexmeta {
	class EntityBase {
		+EntityBase(std::string metaid, const Resource& definition)
		+EntityBase(EntityBase&& other) noexcept: about_value_(std::move(othermetaid_)), definitions_(std::move(otherdefinitions_)), terms_(std::move(otherterms_))
		+EntityBase(std::string metaid, Resource&& definition)
		#definitions_ : Definitions
		+getDefinitions() : Definitions& {query}
		+getDefinitions() : Definitions&
		+getDefinition(std::size_t k) : Resource& {query}
		#terms_ : Terms
		+getURI(const URI& base) : URI {query}
		+isEmpty() : bool {query}
		+matchesDefinition(const Resource& definition) : bool
		+about_value_ : return
		+getNumDefinitions() : std::size_t {query}
		+humanize() : std::string {query}
		#humanizeDefintions() : std::string {query}
		#about_value_ : std::string
		+toString(std::size_t indent) : std::string {query}
		+addDefinition(const Resource& definition) : void
		+addExtraneousTerm(const Term& term) : void
		+addExtraneousTerm(Term&& term) : void
		#serializeDefinition(const Resource& def, const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}
		#serializeTerm(const Term& term, const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}
		+serializeToRDF(const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}
		+setMetaId(const std::string& metaid) : void
	}
}


namespace omexmeta {
	class EntityDescriptor {
		+EntityDescriptor()
		+EntityDescriptor(const EntityDescriptor& other)
		+EntityDescriptor(EntityDescriptor&& other)
		+EntityDescriptor(std::initializer_list<T> l)
		#terms_ : DescriptorTerms
		+isEmpty() : bool {query}
		+humanize() : std::string {query}
		#humanizeTerms() : std::string {query}
		+addTerm(const DescriptorTerm& t) : void
		+addTerm(DescriptorTerm&& t) : void
		+addTerm(const Relation& relation, const Resource& resource) : void
		#serializeDescriptorTermToRDF(const DescriptorTerm& term, const URI& linked_uri, const URI& term_uri, raptor_world* world, raptor_serializer* serializer) : void {query}
		+serializeToRDF(const URI& sbml_base_uri, const std::string& metaid, raptor_world* world, raptor_serializer* serializer) : void {query}
	}
}


namespace omexmeta {
	class Exception {
		+Exception(const char* message)
		+Exception(std::string message)
		+~Exception()
		+what() : char* {query}
		#msg_ : std::string
	}
}


namespace omexmeta {
	class GO {
		+{static} get(OntologyTerm t) : Resource
	}
}


namespace omexmeta {
	class IdentityCondition {
		+IdentityCondition(Resource resource)
		#is_version_of_value_ : Resource
		+matchEntity(const EntityBase& entity) : bool {query}
		+matches(const Component& component) : bool {query}
	}
}


namespace omexmeta {
	class Mediator {
		+Mediator(const std::string& id, Component* component, double multiplier)
		#component_ : Component*
		+serializeToRDF(const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : URI {query}
		+containsMetaId(const std::string& metaid) : bool {query}
		#multiplier_ : double
		#id_ : std::string
	}
}


namespace omexmeta {
	class MetaID {
		+{static} contains(libsbml::Model* m, const std::string& metaid) : bool
		+{static} assignMetaIds(libsbml::Model* m) : void
	}
}


class ModelStrings {
	+ModelStrings()
	+{static} Teusink2000() : std::string
}


namespace omexmeta {
	class NullPointerException {
		-Exception : using Exception::
	}
}


namespace omexmeta {
	class OPB {
		+{static} get(OntologyTerm t) : Resource
	}
}


namespace omexmeta {
	class Ontology {
		+{static} resolve(const std::string& root, unsigned int t, int n_digits) : Resource
	}
}


namespace omexmeta {
	class Participant {
		+~Participant()
	}
}


namespace omexmeta {
	class PhysicalProperty {
		+PhysicalProperty(const Resource& resource)
		+PhysicalProperty(Resource&& resource)
		+PhysicalProperty(const std::string& resource)
		+PhysicalProperty(std::string&& resource)
		#is_version_of_value_ : Resource
		+getResource() : Resource& {query}
		+getResource() : Resource&
		+humanize() : std::string {query}
	}
}


namespace omexmeta {
	class Process {
		+Process()
		+Process(const SingularAnnotation& annotation)
		+Process(SingularAnnotation&& annotation)
		+Process(const CompositeAnnotation& annotation)
		+Process(CompositeAnnotation&& annotation)
		+Process(const Process& other)
		+Process(Process&& other)
		+clone() : Component* {query}
		#mediators_ : Mediators
		#sinks_ : Sinks
		#sources_ : Sources
		+containsMetaId(const std::string& metaid) : bool {query}
		+isProcess() : bool {query}
		+addMediator(const Mediator& mediator) : void
		+addSink(const Sink& sink) : void
		+addSource(const Source& source) : void
		+serializeToRDF(const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}
	}
}


namespace omexmeta {
	abstract class Query {
		+~Query()
		+{abstract} run(SemsimModel& model) : QueryResults {query}
	}
}


namespace omexmeta {
	class QueryResults {
		#refs_ : ComponentRefs
		+begin() : iterator
		+end() : iterator
	}
}


namespace omexmeta {
	class RDFReader {
		+{static} RaptorTermToURI(raptor_term* t) : URI
		+{static} isMetaId(const std::string& uri) : bool
		+{static} isMetaId(raptor_term* t) : bool
		+{static} RaptorTermToRepr(raptor_term* t) : std::string
		+{static} raptorUriToString(raptor_uri* u) : std::string
		+{static} extractMetaId(const std::string& uri) : std::string
		+{static} extractMetaId(raptor_term* t) : std::string
		+{static} addTermToAnnotation(AnnotationBase& annotation, const Relation& relation, const Resource& resource) : void
		+{static} addTermToCompositeAnnotation(CompositeAnnotation& annotation, const Relation& relation, const Resource& resource) : void
		+{static} addTermToEntity(EntityBase& entity, const Relation& relation, const Resource& resource) : void
		+{static} addTermToSingularAnnotation(SingularAnnotation& annotation, const Relation& relation, const Resource& resource) : void
		+{static} applyRDFAnnotationsToModel(SemsimModel& model, const std::string& rdf, const std::string& rdf_format) : void
		+{static} process_triple(void* user_data, raptor_statement* triple) : void
	}
}


namespace omexmeta {
	class RasqalQuery {
		+RasqalQuery(const std::string& rdf, const std::string& format, bool is_file)
		+~RasqalQuery()
		+run(const std::string& query) : RasqalQueryResult
		#raptor_iostr_ : raptor_iostream*
		#base_uri_ : raptor_uri*
		#url_ : raptor_uri*
		#raptor_world_ : raptor_world*
		#dg_ : rasqal_data_graph*
		#serializer_ : rasqal_query*
		#rasqal_world_ : rasqal_world*
		#rdf_ : std::string
		#uri_string_ : unsigned char*
	}
}


namespace omexmeta {
	class RasqalQueryResult {
		+RasqalQueryResult(rasqal_query_results* results)
		+~RasqalQueryResult()
		#results_ : rasqal_query_results*
		+toRDFString(const std::string& format) : std::string
		+toString() : std::string
		+asList() : std::vector<std::vector<std::string> >
		#toRaptorGraph(raptor_world* world, raptor_serializer* serializer) : void
	}
}


namespace omexmeta {
	class Relation {
		+Relation(const URI& uri)
		+Relation(URI&& uri)
		#url_ : URI
		+getURI() : URI& {query}
		+operator==(const Relation& other) : bool {query}
		+humanize() : std::string {query}
		+toString() : std::string {query}
	}
}


namespace omexmeta {
	class Resource {
		+Resource(const URI& uri)
		+Resource(URI&& uri)
		+Resource(Component* element)
		#element_ : Component*
		+getURI(const URI& base) : URI {query}
		#url_ : URI
		+isLocal() : bool {query}
		+operator==(const Resource& other) : bool {query}
		+humanize() : std::string {query}
		+toString() : std::string {query}
	}
}


namespace omexmeta {
	class SBMLImporter {
		+SBMLImporter(libsbml::SBMLDocument* sbmlDocument)
		+SBMLImporter(const std::string& sbml)
		#extractAnnotation(libsbml::SBase* s) : AnnotationPtr
		#extractAnnotation(libsbml::Species* s) : AnnotationPtr
		#extractAnnotation(libsbml::Compartment* c) : AnnotationPtr
		#extractAnnotation(libsbml::Reaction* r) : AnnotationPtr
		#extractAnnotation(libsbml::Parameter* p) : AnnotationPtr
		#getComponentFor(libsbml::SBase* s) : Component*
		#extractCompositeAnnotation(libsbml::Species* s) : CompositeAnnotation
		#extractSpeciesEntity(libsbml::Species* s) : Entity
		#extractSpeciesEntityDescriptor(libsbml::Species* s) : EntityDescriptor
		+{static} getRelationFromSBMLQual(libsbml::BiolQualifierType_t q) : Relation&
		#getResourceFor(libsbml::SBase* s) : Resource
		+importedSBMLModel : SemSimSBMLModel
		+getSemSimSBMLModel() : SemSimSBMLModel&
		#{static} extractSingularAnnotation(libsbml::SBase* s) : SingularAnnotation
		#{static} extractSingularAnnotation(libsbml::Parameter* p) : SingularAnnotation
		+sbmlModel : libsbml::Model*
		+sbmlDocument : libsbml::SBMLDocument*
		#{static} makeUniqueMetaId(const SemsimModel& model, const std::string& base) : std::string
		#assignParticipants(Process& process, libsbml::Reaction* r) : void
		#{static} populateDefinitionsAndTerms(libsbml::SBase* s, EntityBase& e) : void
		#{static} populateSBOTerm(libsbml::SBase* s, EntityBase& e) : void
	}
}


namespace omexmeta {
	class SBMLSpecies {
		+{static} GetSpeciesPhysicalProperty(libsbml::Species* s, libsbml::Model* m) : PhysicalProperty
		+{static} SubstanceUnitsAreConc(libsbml::Species* s, libsbml::Model* m) : bool
		+{static} UnitDefIsConc(libsbml::UnitDefinition* ud) : bool
	}
}


namespace omexmeta {
	class SBO {
		+{static} get(OntologyTerm t) : Resource
	}
}


namespace omexmeta {
	class SelectQuery {
		+SelectQuery(ConditionPtr&& where)
		#where_ : ConditionPtr
	}
}


namespace omexmeta {
	class SemSimObject {
		+SemSimObject(SemSimTypes type)
		#semsimtype : SemSimTypes
		+hasDescription() : bool {query}
		+hasMetadataID() : bool {query}
		+hasName() : bool {query}
		#description : std::string
		#metadataID : std::string
		#name : std::string
		+getDescription() : std::string& {query}
		+getMetadataID() : std::string& {query}
		+getName() : std::string& {query}
		+copyDescription(const SemSimObject& other) : void
		+setDescription(const std::string& description) : void
		+setMetadataID(const std::string& metadataID) : void
		+setName(const std::string& name) : void
	}
}


namespace omexmeta {
	class SemSimSBMLModel {
		+SemSimSBMLModel(libsbml::SBMLDocument* d)
		+SemSimSBMLModel(SemSimSBMLModel&& other) noexcept: SemsimModel(std::move(other)), element_map_(std::move(otherelement_map_)), element_id_map_(std::move(otherelement_id_map_)), d_(otherd_)
		+getComponent(libsbml::SBase* s) : Component* {query}
		+getComponent(libsbml::SBase* s) : Component*
		+getComponentForId(const std::string& id) : Component* {query}
		+getComponentForId(const std::string& id) : Component*
		+getProcess(libsbml::SBase* s) : Process*
		+operator=(const SemSimSBMLModel& other) : SemSimSBMLModel&
		+hasComponent(const std::string id) : bool {query}
		+hasComponent(libsbml::SBase* s) : bool {query}
		+hasProcess(libsbml::SBase* s) : bool {query}
		#d_ : libsbml::SBMLDocument*
		+encodeXML() : std::string {query}
		+getFormat() : std::string {query}
		+getRDF(const URI& sbml_base_uri, const std::string& format) : std::string {query}
		+getRDF(const std::string& sbml_base_uri, const std::string& format) : std::string {query}
		#element_map_ : std::unordered_map<libsbml::SBase*, Component*>
		#element_id_map_ : std::unordered_map<std::string, Component*>
		+setComponentAnnotation(libsbml::SBase* s, const AnnotationBase& annotation) : void
		+setComponentAnnotation(libsbml::SBase* s, const AnnotationPtr& annotation) : void
		+setComponentAnnotation(libsbml::SBase* s, AnnotationPtr&& annotation) : void
	}
}


namespace omexmeta {
	abstract class SemsimModel {
		+SemsimModel()
		+SemsimModel(const SemsimModel& other)
		+SemsimModel(SemsimModel&& other) noexcept: components_(std::move(othercomponents_))
		+~SemsimModel()
		+findComponentWithMetaId(const std::string& metaid) : Component&
		+findComponentWithMetaId(const std::string& metaid) : Component& {query}
		+addComponent(const Component& component) : Component*
		+addComponent(Component&& component) : Component*
		+getComponents() : Components& {query}
		+getComponents() : Components&
		+addComponent(const Process& component) : Process*
		+addComponent(Process&& component) : Process*
		+containsMetaId(const std::string& metaid) : bool {query}
		+hasComponentWithMetaId(const std::string& metaid) : bool {query}
		#components_ : omexmeta::Components
		+getNumComponents() : std::size_t {query}
		+{abstract} encodeXML() : std::string {query}
		+{abstract} getFormat() : std::string {query}
		+{abstract} getRDF(const URI& sbml_base_uri, const std::string& format) : std::string {query}
		+humanize() : std::string {query}
	}
}


namespace omexmeta {
	class SingularAnnotation {
		+SingularAnnotation(const std::string& metaid, const Resource& definition)
		+SingularAnnotation(const std::string& metaid)
		+SingularAnnotation(const std::string& metaid, Resource&& definition)
		+SingularAnnotation(const SingularAnnotation& other)
		+SingularAnnotation(SingularAnnotation&& other)
		+clone() : AnnotationBase* {query}
		+makeComposite(const PhysicalProperty& prop) : AnnotationPtr {query}
		+getURI(const URI& base) : URI {query}
		+isComposite() : bool {query}
		+getRDF(const URI& sbml_base_uri, const std::string& format) : std::string {query}
		+humanize() : std::string {query}
		+getMetaId() : std::string& {query}
		+serializeToRDF(const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : void {query}
	}
}


namespace omexmeta {
	class Sink {
		+Sink(const std::string& id, Component* component, double multiplier)
		#component_ : Component*
		+serializeToRDF(const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : URI {query}
		+containsMetaId(const std::string& metaid) : bool {query}
		#multiplier_ : double
		#id_ : std::string
	}
}


namespace omexmeta {
	class Source {
		+Source(const std::string& id, Component* component, double multiplier)
		#component_ : Component*
		+serializeToRDF(const URI& sbml_base_uri, raptor_world* world, raptor_serializer* serializer) : URI {query}
		+containsMetaId(const std::string& metaid) : bool {query}
		#multiplier_ : double
		#id_ : std::string
	}
}


namespace omexmeta {
	class Term {
		+Term(const Relation& relation, const Resource& resource)
		+Term(Relation&& relation, Resource&& resource)
		+Term(const Relation& relation, const double value)
		#relation_ : Relation
		+getRelation() : Relation& {query}
		#is_version_of_value_ : Resource
		+getResource() : Resource& {query}
		+isValue() : bool {query}
		#is_value_ : bool
		+getValue() : double {query}
		#value_ : double
		+toString() : std::string {query}
	}
}


namespace omexmeta {
	class URI {
		+URI()
		+URI(const std::string& uri)
		+URI(const char* uri)
		+URI(std::string&& uri)
		+appendToFrag(const std::string& suffix) : URI {query}
		+withFrag(const std::string& suffix) : URI {query}
		+operator==(const URI& other) : bool {query}
		+encode() : std::string {query}
		#encoded_uri_ : std::string
		+toString() : std::string {query}
	}
}


namespace omexmeta {
	class bqb {
		+{static} encodes : const static Relation
		+{static} hasPart : const static Relation
		+{static} isVersionOf : const static Relation
		+{static} hasTaxon : const static Relation
		+{static} hasVersion : const static Relation
		+{static} is : const static Relation
		+{static} isDescribedBy : const static Relation
		+{static} isEncodedBy : const static Relation
		+{static} isHomologTo : const static Relation
		+{static} isPartOf : const static Relation
		+{static} isPropertyOf : const static Relation
		+{static} isVersionOf : const static Relation
		+{static} occursIn : const static Relation
		+{static} root : const static std::string
		+{static} humanizeQualifier(const Relation& q) : std::string
	}
}


namespace omexmeta {
	class omexmeta {
		+{static} hasMediatorParticipant : const static Relation
		+{static} hasMultiplier : const static Relation
		+{static} hasPhysicalEntityReference : const static Relation
		+{static} hasSBOTerm : const static Relation
		+{static} hasSinkParticipant : const static Relation
		+{static} hasSourceParticipant : const static Relation
		+{static} hasValue : const static Relation
		+{static} root : const static std::string
	}
}






namespace omexmeta {
	AnnotationBase <|- - CompositeAnnotation
}


namespace omexmeta {
	AnnotationBase <|- - SingularAnnotation
}


namespace omexmeta {
	Component <|- - Process
}


namespace omexmeta {
	EntityBase <|- - Entity
}


namespace omexmeta {
	EntityBase <|- - SingularAnnotation
}


namespace omexmeta {
	Exception <|- - NullPointerException
}


namespace omexmeta {
	Ontology <|- - CHEBI
}


namespace omexmeta {
	Ontology <|- - CL
}


namespace omexmeta {
	Ontology <|- - GO
}


namespace omexmeta {
	Ontology <|- - OPB
}


namespace omexmeta {
	Ontology <|- - SBO
}


namespace omexmeta {
	Participant <|- - Mediator
}


namespace omexmeta {
	Participant <|- - Sink
}


namespace omexmeta {
	Participant <|- - Source
}


namespace omexmeta {
	SemsimModel <|- - SemSimSBMLModel
}


namespace omexmeta {
	Term <|- - DescriptorTerm
}






namespace omexmeta {
	CompositeAnnotation *- - Entity
}


namespace omexmeta {
	CompositeAnnotation *- - PhysicalProperty
}


namespace omexmeta {
	IdentityCondition *- - Resource
}


namespace omexmeta {
	Mediator o- - Component
}


namespace omexmeta {
	NullPointerException *- - Exception
}


namespace omexmeta {
	PhysicalProperty *- - Resource
}


namespace omexmeta {
	Relation *- - URI
}


namespace omexmeta {
	Resource o- - Component
}


namespace omexmeta {
	Resource *- - URI
}


namespace omexmeta {
	SBMLImporter *- - SemSimSBMLModel
}


namespace omexmeta {
	SemSimSBMLModel "2" o- - Component
}


namespace omexmeta {
	SemsimModel *- - omexmeta
}


namespace omexmeta {
	Sink o- - Component
}


namespace omexmeta {
	Source o- - Component
}


namespace omexmeta {
	Term *- - Relation
}


namespace omexmeta {
	Term *- - Resource
}


namespace omexmeta {
	bqb "13" *- - Relation
}


namespace omexmeta {
	omexmeta "7" *- - Relation
}





@enduml

PlantUML version 1.2020.05(Thu Mar 19 21:17:32 GMT 2020)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) Client VM
Java Version: 1.8.0_241-b07
Operating System: Windows 10
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>