<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns="http://www.w3.org/2000/svg" contentScriptType="application/ecmascript" contentStyleType="text/css"
     height="2028px" preserveAspectRatio="none" style="width:5822px;height:2028px;" version="1.1"
     viewBox="0 0 5822 2028" width="5822px" zoomAndPan="magnify">
    <defs>
        <filter height="300%" id="f1pade0lt0jcgx" width="300%" x="-1" y="-1">
            <feGaussianBlur result="blurOut" stdDeviation="2.0"/>
            <feColorMatrix in="blurOut" result="blurOut2" type="matrix"
                           values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/>
            <feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/>
            <feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/>
        </filter>
    </defs>
    <g><!--MD5=[2f380d99272917c9afe1e0d649b0631c]
class BiomodelsBiologyQualifier-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="75.6719" id="BiomodelsBiologyQualifier"
              style="stroke: #A80036; stroke-width: 1.5;" width="249" x="3900.5" y="984.5"/>
        <ellipse cx="3967.75" cy="1000.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M3970.5156,996.375 Q3970.6719,996.1563 3970.8594,996.0469 Q3971.0469,995.9375 3971.2656,995.9375 Q3971.6406,995.9375 3971.875,996.1953 Q3972.1094,996.4531 3972.1094,997.0625 L3972.1094,998.5156 Q3972.1094,999.125 3971.875,999.3906 Q3971.6406,999.6563 3971.2656,999.6563 Q3970.9219,999.6563 3970.7188,999.4531 Q3970.5156,999.2656 3970.4063,998.75 Q3970.3594,998.3906 3970.1719,998.2031 Q3969.8438,997.8281 3969.2344,997.6094 Q3968.625,997.3906 3968,997.3906 Q3967.2344,997.3906 3966.6016,997.7188 Q3965.9688,998.0469 3965.4766,998.7969 Q3964.9844,999.5469 3964.9844,1000.5781 L3964.9844,1001.6719 Q3964.9844,1002.9063 3965.875,1003.7266 Q3966.7656,1004.5469 3968.3594,1004.5469 Q3969.2969,1004.5469 3969.9531,1004.2969 Q3970.3438,1004.1406 3970.7656,1003.7031 Q3971.0313,1003.4375 3971.1797,1003.3594 Q3971.3281,1003.2813 3971.5313,1003.2813 Q3971.8594,1003.2813 3972.1172,1003.5391 Q3972.375,1003.7969 3972.375,1004.1406 Q3972.375,1004.4844 3972.0313,1004.8906 Q3971.5313,1005.4688 3970.7344,1005.7969 Q3969.6563,1006.25 3968.3594,1006.25 Q3966.8438,1006.25 3965.6406,1005.625 Q3964.6563,1005.125 3963.9688,1004.0547 Q3963.2813,1002.9844 3963.2813,1001.7031 L3963.2813,1000.5469 Q3963.2813,999.2188 3963.8984,998.0703 Q3964.5156,996.9219 3965.6094,996.3047 Q3966.7031,995.6875 3967.9375,995.6875 Q3968.6719,995.6875 3969.3203,995.8516 Q3969.9688,996.0156 3970.5156,996.375 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106"
              x="3988.25" y="1005.4102">BiomodelsBiologyQualifier
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3901.5" x2="4148.5" y1="1016.5" y2="1016.5"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3901.5" x2="4148.5" y1="1024.5" y2="1024.5"/>
        <ellipse cx="3911.5" cy="1035.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223"
              x="3920.5" y="1039.9189">BiomodelsBiologyQualifier(const std::string&amp; qualifier)
        </text>
        <polygon fill="#FFFF44" points="3911.5,1044.3359,3915.5,1048.3359,3911.5,1052.3359,3907.5,1048.3359"
                 style="stroke: #B38D22; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106"
              x="3920.5" y="1053.7549">setValidTerms() : void
        </text><!--MD5=[0d35f644389b7e36709ef73f4e5b1de7]
class ControlledVocabulary-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="310.8828" id="ControlledVocabulary"
              style="stroke: #A80036; stroke-width: 1.5;" width="458" x="3796" y="236"/>
        <ellipse cx="3962.25" cy="252" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M3965.0156,247.875 Q3965.1719,247.6563 3965.3594,247.5469 Q3965.5469,247.4375 3965.7656,247.4375 Q3966.1406,247.4375 3966.375,247.6953 Q3966.6094,247.9531 3966.6094,248.5625 L3966.6094,250.0156 Q3966.6094,250.625 3966.375,250.8906 Q3966.1406,251.1563 3965.7656,251.1563 Q3965.4219,251.1563 3965.2188,250.9531 Q3965.0156,250.7656 3964.9063,250.25 Q3964.8594,249.8906 3964.6719,249.7031 Q3964.3438,249.3281 3963.7344,249.1094 Q3963.125,248.8906 3962.5,248.8906 Q3961.7344,248.8906 3961.1016,249.2188 Q3960.4688,249.5469 3959.9766,250.2969 Q3959.4844,251.0469 3959.4844,252.0781 L3959.4844,253.1719 Q3959.4844,254.4063 3960.375,255.2266 Q3961.2656,256.0469 3962.8594,256.0469 Q3963.7969,256.0469 3964.4531,255.7969 Q3964.8438,255.6406 3965.2656,255.2031 Q3965.5313,254.9375 3965.6797,254.8594 Q3965.8281,254.7813 3966.0313,254.7813 Q3966.3594,254.7813 3966.6172,255.0391 Q3966.875,255.2969 3966.875,255.6406 Q3966.875,255.9844 3966.5313,256.3906 Q3966.0313,256.9688 3965.2344,257.2969 Q3964.1563,257.75 3962.8594,257.75 Q3961.3438,257.75 3960.1406,257.125 Q3959.1563,256.625 3958.4688,255.5547 Q3957.7813,254.4844 3957.7813,253.2031 L3957.7813,252.0469 Q3957.7813,250.7188 3958.3984,249.5703 Q3959.0156,248.4219 3960.1094,247.8047 Q3961.2031,247.1875 3962.4375,247.1875 Q3963.1719,247.1875 3963.8203,247.3516 Q3964.4688,247.5156 3965.0156,247.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="117"
              x="3982.75" y="256.9102">ControlledVocabulary
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3797" x2="4253" y1="268" y2="268"/>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3804" y="276"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131"
              x="3816" y="283.4189">prefix_ : std::string
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3804" y="289.8359"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95"
              x="3816" y="297.2549">qualifier : std::string
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="3804" y="303.6719"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76"
              x="3816" y="311.0908">root : std::string
        </text>
        <polygon fill="none" points="3807,315.5078,3811,319.5078,3807,323.5078,3803,319.5078"
                 style="stroke: #B38D22; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176"
              x="3816" y="324.9268">valid_terms : std::vector&lt;std::string&gt;
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3797" x2="4253" y1="331.3438" y2="331.3438"/>
        <ellipse cx="3807" cy="342.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112"
              x="3816" y="346.7627">ControlledVocabulary()
        </text>
        <ellipse cx="3807" cy="356.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201"
              x="3816" y="360.5986">ControlledVocabulary(std::string qualifier)
        </text>
        <ellipse cx="3807" cy="370.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58"
              x="3816" y="374.4346">getUri() : Uri
        </text>
        <ellipse cx="3807" cy="383.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246"
              x="3816" y="388.2705">operator!=(const ControlledVocabulary&amp; rhs) : bool
        </text>
        <ellipse cx="3807" cy="397.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250"
              x="3816" y="402.1064">operator==(const ControlledVocabulary&amp; rhs) : bool
        </text>
        <ellipse cx="3807" cy="411.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="432"
              x="3816" y="415.9424">operator&lt;&lt;(std::ostream&amp; os, const ControlledVocabulary&amp; vocabulary) :
            std : : ostream&amp;
        </text>
        <ellipse cx="3807" cy="425.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272"
              x="3816" y="429.7783">make_shared() : std::shared_ptr&lt;ControlledVocabulary&gt;
        </text>
        <ellipse cx="3807" cy="439.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157"
              x="3816" y="443.6143">getPrefix() : std::string&amp;
        </text>
        <ellipse cx="3807" cy="453.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127"
              x="3816" y="457.4502">getTerm() : std::string&amp;
        </text>
        <ellipse cx="3807" cy="466.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109"
              x="3816" y="471.2861">getRoot() : std::string&amp;
        </text>
        <ellipse cx="3807" cy="480.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205"
              x="3816" y="485.1221">getValidTerms() : std::vector&lt;std::string&gt;&amp;
        </text>
        <ellipse cx="3807" cy="494.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279"
              x="3816" y="498.958">setPrefix(const std::string&amp; cvNamespace) : void
        </text>
        <ellipse cx="3807" cy="508.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181"
              x="3816" y="512.7939">setRoot(const std::string&amp; root) : void
        </text>
        <polygon fill="#FFFF44" points="3807,517.2109,3811,521.2109,3807,525.2109,3803,521.2109"
                 style="stroke: #B38D22; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106"
              x="3816" y="526.6299">setValidTerms() : void
        </text>
        <polygon fill="#FFFF44" points="3807,531.0469,3811,535.0469,3807,539.0469,3803,535.0469"
                 style="stroke: #B38D22; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65"
              x="3816" y="540.4658">verify() : void
        </text><!--MD5=[81532d3002bcda6e28e5344fba2b10c6]
class IRDF-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="61.8359" id="IRDF"
              style="stroke: #A80036; stroke-width: 1.5;" width="218" x="4289" y="360.5"/>
        <ellipse cx="4379.25" cy="376.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4381.4375,378.2656 L4377.2969,378.2656 L4376.875,379.2969 L4377.2969,379.2969 Q4377.9063,379.2969 4378.1719,379.5313 Q4378.4375,379.7656 4378.4375,380.1563 Q4378.4375,380.5313 4378.1719,380.7656 Q4377.9063,381 4377.2969,381 L4375,381 Q4374.3906,381 4374.1328,380.7656 Q4373.875,380.5313 4373.875,380.1406 Q4373.875,379.7656 4374.1484,379.5234 Q4374.4219,379.2813 4375.0469,379.2969 L4377.7188,372.6406 L4376.6094,372.6406 Q4376,372.6406 4375.7344,372.4063 Q4375.4688,372.1719 4375.4688,371.7813 Q4375.4688,371.4063 4375.7344,371.1719 Q4376,370.9375 4376.6094,370.9375 L4380.2813,370.9375 L4383.6719,379.2969 Q4384.2656,379.2969 4384.4531,379.4375 Q4384.8438,379.7031 4384.8438,380.1563 Q4384.8438,380.5313 4384.5859,380.7656 Q4384.3281,381 4383.7188,381 L4381.4219,381 Q4380.8125,381 4380.5469,380.7656 Q4380.2813,380.5313 4380.2813,380.1406 Q4380.2813,379.7656 4380.5469,379.5313 Q4380.8125,379.2969 4381.4219,379.2969 L4381.8438,379.2969 L4381.4375,378.2656 Z M4380.7188,376.5625 L4379.3594,373.1875 L4377.9844,376.5625 L4380.7188,376.5625 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs"
              textLength="29" x="4399.75" y="381.4102">IRDF
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4290" x2="4506" y1="392.5" y2="392.5"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4290" x2="4506" y1="400.5" y2="400.5"/>
        <ellipse cx="4300" cy="411.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs"
              textLength="192" x="4309" y="415.9189">serialize(std::string format) : std::string
        </text><!--MD5=[e6dc55dd324d6a8c189f3ada02b144fc]
class Predicate-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="158.6875" id="Predicate"
              style="stroke: #A80036; stroke-width: 1.5;" width="390" x="4995" y="943"/>
        <ellipse cx="5159.75" cy="959" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M5162.5156,954.875 Q5162.6719,954.6563 5162.8594,954.5469 Q5163.0469,954.4375 5163.2656,954.4375 Q5163.6406,954.4375 5163.875,954.6953 Q5164.1094,954.9531 5164.1094,955.5625 L5164.1094,957.0156 Q5164.1094,957.625 5163.875,957.8906 Q5163.6406,958.1563 5163.2656,958.1563 Q5162.9219,958.1563 5162.7188,957.9531 Q5162.5156,957.7656 5162.4063,957.25 Q5162.3594,956.8906 5162.1719,956.7031 Q5161.8438,956.3281 5161.2344,956.1094 Q5160.625,955.8906 5160,955.8906 Q5159.2344,955.8906 5158.6016,956.2188 Q5157.9688,956.5469 5157.4766,957.2969 Q5156.9844,958.0469 5156.9844,959.0781 L5156.9844,960.1719 Q5156.9844,961.4063 5157.875,962.2266 Q5158.7656,963.0469 5160.3594,963.0469 Q5161.2969,963.0469 5161.9531,962.7969 Q5162.3438,962.6406 5162.7656,962.2031 Q5163.0313,961.9375 5163.1797,961.8594 Q5163.3281,961.7813 5163.5313,961.7813 Q5163.8594,961.7813 5164.1172,962.0391 Q5164.375,962.2969 5164.375,962.6406 Q5164.375,962.9844 5164.0313,963.3906 Q5163.5313,963.9688 5162.7344,964.2969 Q5161.6563,964.75 5160.3594,964.75 Q5158.8438,964.75 5157.6406,964.125 Q5156.6563,963.625 5155.9688,962.5547 Q5155.2813,961.4844 5155.2813,960.2031 L5155.2813,959.0469 Q5155.2813,957.7188 5155.8984,956.5703 Q5156.5156,955.4219 5157.6094,954.8047 Q5158.7031,954.1875 5159.9375,954.1875 Q5160.6719,954.1875 5161.3203,954.3516 Q5161.9688,954.5156 5162.5156,954.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52"
              x="5180.25" y="963.9102">Predicate
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4996" x2="5384" y1="975" y2="975"/>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5003" y="983"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220"
              x="5015" y="990.4189">term : std::shared_ptr&lt;ControlledVocabulary&gt;
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4996" x2="5384" y1="996.8359" y2="996.8359"/>
        <ellipse cx="5006" cy="1007.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53"
              x="5015" y="1012.2549">Predicate()
        </text>
        <ellipse cx="5006" cy="1021.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304"
              x="5015" y="1026.0908">Predicate(const std::shared_ptr&lt;ControlledVocabulary&gt;&amp; term)
        </text>
        <ellipse cx="5006" cy="1035.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58"
              x="5015" y="1039.9268">getUri() : Uri
        </text>
        <ellipse cx="5006" cy="1049.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187"
              x="5015" y="1053.7627">operator!=(const Predicate&amp; rhs) : bool
        </text>
        <ellipse cx="5006" cy="1063.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191"
              x="5015" y="1067.5986">operator==(const Predicate&amp; rhs) : bool
        </text>
        <ellipse cx="5006" cy="1077.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364"
              x="5015" y="1081.4346">operator&lt;&lt;(std::ostream&amp; os, const Predicate&amp; predicate) : std : :
            ostream&amp;
        </text>
        <ellipse cx="5006" cy="1090.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253"
              x="5015" y="1095.2705">getTerm() : std::shared_ptr&lt;ControlledVocabulary&gt;&amp;
        </text><!--MD5=[3eac5e75d7147c0f11c1d2e5b8b92f3c]
class PredicateNamespaces-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="75.6719" id="PredicateNamespaces"
              style="stroke: #A80036; stroke-width: 1.5;" width="335" x="2991.5" y="353.5"/>
        <ellipse cx="3091.25" cy="369.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M3094.0156,365.375 Q3094.1719,365.1563 3094.3594,365.0469 Q3094.5469,364.9375 3094.7656,364.9375 Q3095.1406,364.9375 3095.375,365.1953 Q3095.6094,365.4531 3095.6094,366.0625 L3095.6094,367.5156 Q3095.6094,368.125 3095.375,368.3906 Q3095.1406,368.6563 3094.7656,368.6563 Q3094.4219,368.6563 3094.2188,368.4531 Q3094.0156,368.2656 3093.9063,367.75 Q3093.8594,367.3906 3093.6719,367.2031 Q3093.3438,366.8281 3092.7344,366.6094 Q3092.125,366.3906 3091.5,366.3906 Q3090.7344,366.3906 3090.1016,366.7188 Q3089.4688,367.0469 3088.9766,367.7969 Q3088.4844,368.5469 3088.4844,369.5781 L3088.4844,370.6719 Q3088.4844,371.9063 3089.375,372.7266 Q3090.2656,373.5469 3091.8594,373.5469 Q3092.7969,373.5469 3093.4531,373.2969 Q3093.8438,373.1406 3094.2656,372.7031 Q3094.5313,372.4375 3094.6797,372.3594 Q3094.8281,372.2813 3095.0313,372.2813 Q3095.3594,372.2813 3095.6172,372.5391 Q3095.875,372.7969 3095.875,373.1406 Q3095.875,373.4844 3095.5313,373.8906 Q3095.0313,374.4688 3094.2344,374.7969 Q3093.1563,375.25 3091.8594,375.25 Q3090.3438,375.25 3089.1406,374.625 Q3088.1563,374.125 3087.4688,373.0547 Q3086.7813,371.9844 3086.7813,370.7031 L3086.7813,369.5469 Q3086.7813,368.2188 3087.3984,367.0703 Q3088.0156,365.9219 3089.1094,365.3047 Q3090.2031,364.6875 3091.4375,364.6875 Q3092.1719,364.6875 3092.8203,364.8516 Q3093.4688,365.0156 3094.0156,365.375 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="127"
              x="3111.75" y="374.4102">PredicateNamespaces
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="2992.5" x2="3325.5" y1="385.5" y2="385.5"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="2992.5" x2="3325.5" y1="393.5" y2="393.5"/>
        <ellipse cx="3002.5" cy="404.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116"
              x="3011.5" y="408.9189">PredicateNamespaces()
        </text>
        <ellipse cx="3002.5" cy="418.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="309" x="3011.5" y="422.7549">getNamespaces() : std::unordered_map&lt;std::string
            , std::string&gt;
        </text><!--MD5=[bad701a172025ef3a489f88bc91326aa]
class RaptorUtils-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="103.3438" id="RaptorUtils"
              style="stroke: #A80036; stroke-width: 1.5;" width="399" x="3361.5" y="340"/>
        <ellipse cx="3525.75" cy="356" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M3528.5156,351.875 Q3528.6719,351.6563 3528.8594,351.5469 Q3529.0469,351.4375 3529.2656,351.4375 Q3529.6406,351.4375 3529.875,351.6953 Q3530.1094,351.9531 3530.1094,352.5625 L3530.1094,354.0156 Q3530.1094,354.625 3529.875,354.8906 Q3529.6406,355.1563 3529.2656,355.1563 Q3528.9219,355.1563 3528.7188,354.9531 Q3528.5156,354.7656 3528.4063,354.25 Q3528.3594,353.8906 3528.1719,353.7031 Q3527.8438,353.3281 3527.2344,353.1094 Q3526.625,352.8906 3526,352.8906 Q3525.2344,352.8906 3524.6016,353.2188 Q3523.9688,353.5469 3523.4766,354.2969 Q3522.9844,355.0469 3522.9844,356.0781 L3522.9844,357.1719 Q3522.9844,358.4063 3523.875,359.2266 Q3524.7656,360.0469 3526.3594,360.0469 Q3527.2969,360.0469 3527.9531,359.7969 Q3528.3438,359.6406 3528.7656,359.2031 Q3529.0313,358.9375 3529.1797,358.8594 Q3529.3281,358.7813 3529.5313,358.7813 Q3529.8594,358.7813 3530.1172,359.0391 Q3530.375,359.2969 3530.375,359.6406 Q3530.375,359.9844 3530.0313,360.3906 Q3529.5313,360.9688 3528.7344,361.2969 Q3527.6563,361.75 3526.3594,361.75 Q3524.8438,361.75 3523.6406,361.125 Q3522.6563,360.625 3521.9688,359.5547 Q3521.2813,358.4844 3521.2813,357.2031 L3521.2813,356.0469 Q3521.2813,354.7188 3521.8984,353.5703 Q3522.5156,352.4219 3523.6094,351.8047 Q3524.7031,351.1875 3525.9375,351.1875 Q3526.6719,351.1875 3527.3203,351.3516 Q3527.9688,351.5156 3528.5156,351.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="62"
              x="3546.25" y="360.9102">RaptorUtils
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3362.5" x2="3759.5" y1="372" y2="372"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3362.5" x2="3759.5" y1="380" y2="380"/>
        <ellipse cx="3372.5" cy="391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="325" x="3381.5" y="395.4189">raptorUriToTerm(raptor_world* world,
            raptor_uri* uri) : raptor_term*
        </text>
        <ellipse cx="3372.5" cy="404.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="373" x="3381.5" y="409.2549">raptorStringToUri(raptor_world*
            world, const unsigned char* str) : raptor_uri*
        </text>
        <ellipse cx="3372.5" cy="418.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="207" x="3381.5" y="423.0908">raptorUriToString(raptor_uri* u) :
            std::string
        </text>
        <ellipse cx="3372.5" cy="432.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="267" x="3381.5" y="436.9268">raptorTermToString(raptor_term* term)
            : unsigned char*
        </text><!--MD5=[6b13f1b330d33795af281e5c1dfe1e98]
class Resource-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="241.7031" id="Resource"
              style="stroke: #A80036; stroke-width: 1.5;" width="391" x="5420.5" y="901.5"/>
        <ellipse cx="5584.75" cy="917.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M5587.5156,913.375 Q5587.6719,913.1563 5587.8594,913.0469 Q5588.0469,912.9375 5588.2656,912.9375 Q5588.6406,912.9375 5588.875,913.1953 Q5589.1094,913.4531 5589.1094,914.0625 L5589.1094,915.5156 Q5589.1094,916.125 5588.875,916.3906 Q5588.6406,916.6563 5588.2656,916.6563 Q5587.9219,916.6563 5587.7188,916.4531 Q5587.5156,916.2656 5587.4063,915.75 Q5587.3594,915.3906 5587.1719,915.2031 Q5586.8438,914.8281 5586.2344,914.6094 Q5585.625,914.3906 5585,914.3906 Q5584.2344,914.3906 5583.6016,914.7188 Q5582.9688,915.0469 5582.4766,915.7969 Q5581.9844,916.5469 5581.9844,917.5781 L5581.9844,918.6719 Q5581.9844,919.9063 5582.875,920.7266 Q5583.7656,921.5469 5585.3594,921.5469 Q5586.2969,921.5469 5586.9531,921.2969 Q5587.3438,921.1406 5587.7656,920.7031 Q5588.0313,920.4375 5588.1797,920.3594 Q5588.3281,920.2813 5588.5313,920.2813 Q5588.8594,920.2813 5589.1172,920.5391 Q5589.375,920.7969 5589.375,921.1406 Q5589.375,921.4844 5589.0313,921.8906 Q5588.5313,922.4688 5587.7344,922.7969 Q5586.6563,923.25 5585.3594,923.25 Q5583.8438,923.25 5582.6406,922.625 Q5581.6563,922.125 5580.9688,921.0547 Q5580.2813,919.9844 5580.2813,918.7031 L5580.2813,917.5469 Q5580.2813,916.2188 5580.8984,915.0703 Q5581.5156,913.9219 5582.6094,913.3047 Q5583.7031,912.6875 5584.9375,912.6875 Q5585.6719,912.6875 5586.3203,912.8516 Q5586.9688,913.0156 5587.5156,913.375 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54"
              x="5605.25" y="922.4102">Resource
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="5421.5" x2="5810.5" y1="933.5" y2="933.5"/>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5428.5" y="941.5"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98"
              x="5440.5" y="948.9189">identifier : std::string
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5428.5" y="955.3359"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134"
              x="5440.5" y="962.7549">identifiers_base : std::string
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="5428.5" y="969.1719"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163"
              x="5440.5" y="976.5908">resource_namespace : std::string
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="5421.5" x2="5810.5" y1="983.0078" y2="983.0078"/>
        <ellipse cx="5431.5" cy="994.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55"
              x="5440.5" y="998.4268">Resource()
        </text>
        <ellipse cx="5431.5" cy="1007.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305"
              x="5440.5" y="1012.2627">Resource(std::string resourceNamespace, std::string identifier)
        </text>
        <ellipse cx="5431.5" cy="1021.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150"
              x="5440.5" y="1026.0986">Resource(std::string resource)
        </text>
        <ellipse cx="5431.5" cy="1035.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189"
              x="5440.5" y="1039.9346">operator!=(const Resource&amp; rhs) : bool
        </text>
        <ellipse cx="5431.5" cy="1049.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193"
              x="5440.5" y="1053.7705">operator==(const Resource&amp; rhs) : bool
        </text>
        <ellipse cx="5431.5" cy="1063.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="365"
              x="5440.5" y="1067.6064">operator&lt;&lt;(std::ostream&amp; os, const Resource&amp; resource) : std : :
            ostream&amp;
        </text>
        <ellipse cx="5431.5" cy="1077.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87"
              x="5440.5" y="1081.4424">build() : std::string
        </text>
        <ellipse cx="5431.5" cy="1090.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128"
              x="5440.5" y="1095.2783">getIdentifier() : std::string&amp;
        </text>
        <ellipse cx="5431.5" cy="1104.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159"
              x="5440.5" y="1109.1143">getIdentifiersBase() : std::string&amp;
        </text>
        <ellipse cx="5431.5" cy="1118.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191"
              x="5440.5" y="1122.9502">getResourceNamespace() : std::string&amp;
        </text>
        <ellipse cx="5431.5" cy="1132.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="323" x="5440.5" y="1136.7861">splitStringBy(std::string str, char
            delimiter) : std::vector&lt;std::string&gt;
        </text><!--MD5=[d0da0a299942266ebd64acf2b2e95fa4]
class Subject-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="144.8516" id="Subject"
              style="stroke: #A80036; stroke-width: 1.5;" width="371" x="4588.5" y="950"/>
        <ellipse cx="4749.25" cy="966" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4752.0156,961.875 Q4752.1719,961.6563 4752.3594,961.5469 Q4752.5469,961.4375 4752.7656,961.4375 Q4753.1406,961.4375 4753.375,961.6953 Q4753.6094,961.9531 4753.6094,962.5625 L4753.6094,964.0156 Q4753.6094,964.625 4753.375,964.8906 Q4753.1406,965.1563 4752.7656,965.1563 Q4752.4219,965.1563 4752.2188,964.9531 Q4752.0156,964.7656 4751.9063,964.25 Q4751.8594,963.8906 4751.6719,963.7031 Q4751.3438,963.3281 4750.7344,963.1094 Q4750.125,962.8906 4749.5,962.8906 Q4748.7344,962.8906 4748.1016,963.2188 Q4747.4688,963.5469 4746.9766,964.2969 Q4746.4844,965.0469 4746.4844,966.0781 L4746.4844,967.1719 Q4746.4844,968.4063 4747.375,969.2266 Q4748.2656,970.0469 4749.8594,970.0469 Q4750.7969,970.0469 4751.4531,969.7969 Q4751.8438,969.6406 4752.2656,969.2031 Q4752.5313,968.9375 4752.6797,968.8594 Q4752.8281,968.7813 4753.0313,968.7813 Q4753.3594,968.7813 4753.6172,969.0391 Q4753.875,969.2969 4753.875,969.6406 Q4753.875,969.9844 4753.5313,970.3906 Q4753.0313,970.9688 4752.2344,971.2969 Q4751.1563,971.75 4749.8594,971.75 Q4748.3438,971.75 4747.1406,971.125 Q4746.1563,970.625 4745.4688,969.5547 Q4744.7813,968.4844 4744.7813,967.2031 L4744.7813,966.0469 Q4744.7813,964.7188 4745.3984,963.5703 Q4746.0156,962.4219 4747.1094,961.8047 Q4748.2031,961.1875 4749.4375,961.1875 Q4750.1719,961.1875 4750.8203,961.3516 Q4751.4688,961.5156 4752.0156,961.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41"
              x="4769.75" y="970.9102">Subject
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4589.5" x2="4958.5" y1="982" y2="982"/>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4596.5" y="990"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88"
              x="4608.5" y="997.4189">metaId : std::string
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4589.5" x2="4958.5" y1="1003.8359" y2="1003.8359"/>
        <ellipse cx="4599.5" cy="1014.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44"
              x="4608.5" y="1019.2549">Subject()
        </text>
        <ellipse cx="4599.5" cy="1028.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126"
              x="4608.5" y="1033.0908">Subject(std::string metaId)
        </text>
        <ellipse cx="4599.5" cy="1042.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178"
              x="4608.5" y="1046.9268">operator!=(const Subject&amp; rhs) : bool
        </text>
        <ellipse cx="4599.5" cy="1056.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182"
              x="4608.5" y="1060.7627">operator==(const Subject&amp; rhs) : bool
        </text>
        <ellipse cx="4599.5" cy="1070.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345"
              x="4608.5" y="1074.5986">operator&lt;&lt;(std::ostream&amp; os, const Subject&amp; subject) : std : :
            ostream&amp;
        </text>
        <ellipse cx="4599.5" cy="1084.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118"
              x="4608.5" y="1088.4346">getMetaId() : std::string&amp;
        </text><!--MD5=[83cb7b9a61729069b453c40304caf896]
class Triple-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="310.8828" id="Triple"
              style="stroke: #A80036; stroke-width: 1.5;" width="349" x="4589.5" y="1270"/>
        <ellipse cx="4744.25" cy="1286" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4747.0156,1281.875 Q4747.1719,1281.6563 4747.3594,1281.5469 Q4747.5469,1281.4375 4747.7656,1281.4375 Q4748.1406,1281.4375 4748.375,1281.6953 Q4748.6094,1281.9531 4748.6094,1282.5625 L4748.6094,1284.0156 Q4748.6094,1284.625 4748.375,1284.8906 Q4748.1406,1285.1563 4747.7656,1285.1563 Q4747.4219,1285.1563 4747.2188,1284.9531 Q4747.0156,1284.7656 4746.9063,1284.25 Q4746.8594,1283.8906 4746.6719,1283.7031 Q4746.3438,1283.3281 4745.7344,1283.1094 Q4745.125,1282.8906 4744.5,1282.8906 Q4743.7344,1282.8906 4743.1016,1283.2188 Q4742.4688,1283.5469 4741.9766,1284.2969 Q4741.4844,1285.0469 4741.4844,1286.0781 L4741.4844,1287.1719 Q4741.4844,1288.4063 4742.375,1289.2266 Q4743.2656,1290.0469 4744.8594,1290.0469 Q4745.7969,1290.0469 4746.4531,1289.7969 Q4746.8438,1289.6406 4747.2656,1289.2031 Q4747.5313,1288.9375 4747.6797,1288.8594 Q4747.8281,1288.7813 4748.0313,1288.7813 Q4748.3594,1288.7813 4748.6172,1289.0391 Q4748.875,1289.2969 4748.875,1289.6406 Q4748.875,1289.9844 4748.5313,1290.3906 Q4748.0313,1290.9688 4747.2344,1291.2969 Q4746.1563,1291.75 4744.8594,1291.75 Q4743.3438,1291.75 4742.1406,1291.125 Q4741.1563,1290.625 4740.4688,1289.5547 Q4739.7813,1288.4844 4739.7813,1287.2031 L4739.7813,1286.0469 Q4739.7813,1284.7188 4740.3984,1283.5703 Q4741.0156,1282.4219 4742.1094,1281.8047 Q4743.2031,1281.1875 4744.4375,1281.1875 Q4745.1719,1281.1875 4745.8203,1281.3516 Q4746.4688,1281.5156 4747.0156,1281.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="31"
              x="4764.75" y="1290.9102">Triple
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4590.5" x2="4937.5" y1="1302" y2="1302"/>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4597.5" y="1310"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99"
              x="4609.5" y="1317.4189">predicate : Predicate
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4597.5" y="1323.8359"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100"
              x="4609.5" y="1331.2549">resource : Resource
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4597.5" y="1337.6719"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80"
              x="4609.5" y="1345.0908">subject : Subject
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4590.5" x2="4937.5" y1="1351.5078" y2="1351.5078"/>
        <ellipse cx="4600.5" cy="1362.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="307"
              x="4609.5" y="1366.9268">Triple(Subject subject, Predicate predicate, Resource resource)
        </text>
        <ellipse cx="4600.5" cy="1376.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34"
              x="4609.5" y="1380.7627">Triple()
        </text>
        <ellipse cx="4600.5" cy="1390.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123"
              x="4609.5" y="1394.5986">Triple(const Triple&amp; triple)
        </text>
        <ellipse cx="4600.5" cy="1404.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100"
              x="4609.5" y="1408.4346">Triple(Triple&amp;&amp; triple)
        </text>
        <ellipse cx="4600.5" cy="1417.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40"
              x="4609.5" y="1422.2705">~Triple()
        </text>
        <ellipse cx="4600.5" cy="1431.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129"
              x="4609.5" y="1436.1064">getPredicateNode() : Predicate&amp;
        </text>
        <ellipse cx="4600.5" cy="1445.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133"
              x="4609.5" y="1449.9424">getResourceNode() : Resource&amp;
        </text>
        <ellipse cx="4600.5" cy="1459.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111"
              x="4609.5" y="1463.7783">getSubjectNode() : Subject&amp;
        </text>
        <ellipse cx="4600.5" cy="1473.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186"
              x="4609.5" y="1477.6143">operator=(const Triple&amp; triple) : Triple&amp;
        </text>
        <ellipse cx="4600.5" cy="1487.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163"
              x="4609.5" y="1491.4502">operator=(Triple&amp;&amp; triple) : Triple&amp;
        </text>
        <ellipse cx="4600.5" cy="1500.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168"
              x="4609.5" y="1505.2861">operator!=(const Triple&amp; rhs) : bool
        </text>
        <ellipse cx="4600.5" cy="1514.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172"
              x="4609.5" y="1519.1221">operator==(const Triple&amp; rhs) : bool
        </text>
        <ellipse cx="4600.5" cy="1528.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323"
              x="4609.5" y="1532.958">operator&lt;&lt;(std::ostream&amp; os, const Triple&amp; triple) : std : : ostream&amp;
        </text>
        <ellipse cx="4600.5" cy="1542.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187"
              x="4609.5" y="1546.7939">serialize(std::string format) : std::string
        </text>
        <ellipse cx="4600.5" cy="1556.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="148" x="4609.5" y="1560.6299">from_xml(std::string xml) : void
        </text>
        <rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4597.5" y="1567.0469"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="320" x="4609.5" y="1574.4658">parseTriple(void* user_data,
            raptor_statement* raptor_triple) : void
        </text><!--MD5=[54966a871ed9594cfed77a625bb7d0e7]
class Uri-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="767.4688" id="Uri"
              style="stroke: #A80036; stroke-width: 1.5;" width="325" x="4611.5" y="8"/>
        <ellipse cx="4761.75" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4764.5156,19.875 Q4764.6719,19.6563 4764.8594,19.5469 Q4765.0469,19.4375 4765.2656,19.4375 Q4765.6406,19.4375 4765.875,19.6953 Q4766.1094,19.9531 4766.1094,20.5625 L4766.1094,22.0156 Q4766.1094,22.625 4765.875,22.8906 Q4765.6406,23.1563 4765.2656,23.1563 Q4764.9219,23.1563 4764.7188,22.9531 Q4764.5156,22.7656 4764.4063,22.25 Q4764.3594,21.8906 4764.1719,21.7031 Q4763.8438,21.3281 4763.2344,21.1094 Q4762.625,20.8906 4762,20.8906 Q4761.2344,20.8906 4760.6016,21.2188 Q4759.9688,21.5469 4759.4766,22.2969 Q4758.9844,23.0469 4758.9844,24.0781 L4758.9844,25.1719 Q4758.9844,26.4063 4759.875,27.2266 Q4760.7656,28.0469 4762.3594,28.0469 Q4763.2969,28.0469 4763.9531,27.7969 Q4764.3438,27.6406 4764.7656,27.2031 Q4765.0313,26.9375 4765.1797,26.8594 Q4765.3281,26.7813 4765.5313,26.7813 Q4765.8594,26.7813 4766.1172,27.0391 Q4766.375,27.2969 4766.375,27.6406 Q4766.375,27.9844 4766.0313,28.3906 Q4765.5313,28.9688 4764.7344,29.2969 Q4763.6563,29.75 4762.3594,29.75 Q4760.8438,29.75 4759.6406,29.125 Q4758.6563,28.625 4757.9688,27.5547 Q4757.2813,26.4844 4757.2813,25.2031 L4757.2813,24.0469 Q4757.2813,22.7188 4757.8984,21.5703 Q4758.5156,20.4219 4759.6094,19.8047 Q4760.7031,19.1875 4761.9375,19.1875 Q4762.6719,19.1875 4763.3203,19.3516 Q4763.9688,19.5156 4764.5156,19.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="16"
              x="4782.25" y="28.9102">Uri
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4612.5" x2="4935.5" y1="40" y2="40"/>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="48"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121"
              x="4631.5" y="55.4189">m_query : mutable Query
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="61.8359"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130"
              x="4631.5" y="69.2549">m_ip_v : mutable std::int8_t
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="75.6719"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154"
              x="4631.5" y="83.0908">m_fragment : mutable std::string
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="89.5078"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132"
              x="4631.5" y="96.9268">m_host : mutable std::string
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="103.3438"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132"
              x="4631.5" y="110.7627">m_path : mutable std::string
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="117.1797"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130"
              x="4631.5" y="124.5986">m_port : mutable std::string
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="131.0156"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149"
              x="4631.5" y="138.4346">m_scheme : mutable std::string
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="144.8516"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123"
              x="4631.5" y="152.2705">m_url : mutable std::string
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="158.6875"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133"
              x="4631.5" y="166.1064">m_user : mutable std::string
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4612.5" x2="4935.5" y1="172.5234" y2="172.5234"/>
        <ellipse cx="4622.5" cy="183.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="21"
              x="4631.5" y="187.9424">Uri()
        </text>
        <ellipse cx="4622.5" cy="197.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86"
              x="4631.5" y="201.7783">Uri(const Uri&amp; url)
        </text>
        <ellipse cx="4622.5" cy="211.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169"
              x="4631.5" y="215.6143">Uri(Uri&amp;&amp; url) noexcept: m_ip_v(-1)
        </text>
        <ellipse cx="4622.5" cy="225.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103"
              x="4631.5" y="229.4502">Uri(std::string url_str)
        </text>
        <ellipse cx="4622.5" cy="238.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121"
              x="4631.5" y="243.2861">query(size_t i) : KeyVal&amp;
        </text>
        <ellipse cx="4622.5" cy="252.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142"
              x="4631.5" y="257.1221">set_query(size_t i) : KeyVal&amp;
        </text>
        <ellipse cx="4622.5" cy="266.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82"
              x="4631.5" y="270.958">query() : Query&amp;
        </text>
        <ellipse cx="4622.5" cy="280.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103"
              x="4631.5" y="284.7939">set_query() : Query&amp;
        </text>
        <ellipse cx="4622.5" cy="294.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145"
              x="4631.5" y="298.6299">add_query(KeyVal&amp; kv) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="308.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242"
              x="4631.5" y="312.4658">add_query(std::string&amp; key, std::string&amp; val) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="321.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164"
              x="4631.5" y="326.3018">add_query(std::string&amp; key) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="335.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61"
              x="4631.5" y="340.1377">clear() : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="349.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172"
              x="4631.5" y="353.9736">fragment(const std::string&amp; f) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="363.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="213"
              x="4631.5" y="367.8096">host(const std::string&amp; h, uint8_t ip_v) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="377.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173"
              x="4631.5" y="381.6455">operator=(std::string&amp; url_str) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="391.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149"
              x="4631.5" y="395.4814">operator=(const Uri&amp; url) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="404.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126"
              x="4631.5" y="409.3174">operator=(Uri&amp;&amp; url) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="418.7344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159"
              x="4631.5" y="423.1533">path(const std::string&amp; str) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="432.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157"
              x="4631.5" y="436.9893">port(const std::string&amp; str) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="446.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138"
              x="4631.5" y="450.8252">port(std::uint16_t num) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="460.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169"
              x="4631.5" y="464.6611">scheme(const std::string&amp; s) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="474.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132"
              x="4631.5" y="478.4971">set_query(Query&amp; q) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="487.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139"
              x="4631.5" y="492.333">str(std::string&amp; url_str) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="501.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177"
              x="4631.5" y="506.1689">user_info(const std::string&amp; s) : Uri&amp;
        </text>
        <ellipse cx="4622.5" cy="515.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155"
              x="4631.5" y="520.0049">operator!=(const Uri&amp; rhs) : bool
        </text>
        <ellipse cx="4622.5" cy="529.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159"
              x="4631.5" y="533.8408">operator==(const Uri&amp; rhs) : bool
        </text>
        <ellipse cx="4622.5" cy="543.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="299"
              x="4631.5" y="547.6768">operator&lt;&lt;(std::ostream&amp; os, const Uri&amp; uri) : std : : ostream&amp;
        </text>
        <ellipse cx="4622.5" cy="557.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114"
              x="4631.5" y="561.5127">ip_version() : std::int8_t
        </text>
        <ellipse cx="4622.5" cy="570.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190"
              x="4631.5" y="575.3486">output(std::ostream&amp; o) : std::ostream&amp;
        </text>
        <ellipse cx="4622.5" cy="584.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83"
              x="4631.5" y="589.1846">end() : std::string
        </text>
        <ellipse cx="4622.5" cy="598.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111"
              x="4631.5" y="603.0205">pruneEnd() : std::string
        </text>
        <ellipse cx="4622.5" cy="612.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78"
              x="4631.5" y="616.8564">str() : std::string
        </text>
        <ellipse cx="4622.5" cy="626.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115"
              x="4631.5" y="630.6924">fragment() : std::string&amp;
        </text>
        <ellipse cx="4622.5" cy="640.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93"
              x="4631.5" y="644.5283">host() : std::string&amp;
        </text>
        <ellipse cx="4622.5" cy="653.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93"
              x="4631.5" y="658.3643">path() : std::string&amp;
        </text>
        <ellipse cx="4622.5" cy="667.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91"
              x="4631.5" y="672.2002">port() : std::string&amp;
        </text>
        <ellipse cx="4622.5" cy="681.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110"
              x="4631.5" y="686.0361">scheme() : std::string&amp;
        </text>
        <ellipse cx="4622.5" cy="695.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118"
              x="4631.5" y="699.8721">user_info() : std::string&amp;
        </text>
        <rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="706.2891"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134"
              x="4631.5" y="713.708">assign(const Uri&amp; url) : void
        </text>
        <rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="720.125"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111"
              x="4631.5" y="727.5439">assign(Uri&amp;&amp; url) : void
        </text>
        <rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="733.9609"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="77"
              x="4631.5" y="741.3799">build_url() : void
        </text>
        <rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="747.7969"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91"
              x="4631.5" y="755.2158">lazy_parse() : void
        </text>
        <rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4619.5" y="761.6328"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83"
              x="4631.5" y="769.0518">parse_url() : void
        </text><!--MD5=[52f480bcb4aeb4acc6a3d430ca551622]
class ListOfTriples--><rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="ListOfTriples" style="stroke: #A80036; stroke-width: 1.5;" width="102" x="4451" y="998.5"/><ellipse cx="4466" cy="1014.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4468.7656,1010.375 Q4468.9219,1010.1563 4469.1094,1010.0469 Q4469.2969,1009.9375 4469.5156,1009.9375 Q4469.8906,1009.9375 4470.125,1010.1953 Q4470.3594,1010.4531 4470.3594,1011.0625 L4470.3594,1012.5156 Q4470.3594,1013.125 4470.125,1013.3906 Q4469.8906,1013.6563 4469.5156,1013.6563 Q4469.1719,1013.6563 4468.9688,1013.4531 Q4468.7656,1013.2656 4468.6563,1012.75 Q4468.6094,1012.3906 4468.4219,1012.2031 Q4468.0938,1011.8281 4467.4844,1011.6094 Q4466.875,1011.3906 4466.25,1011.3906 Q4465.4844,1011.3906 4464.8516,1011.7188 Q4464.2188,1012.0469 4463.7266,1012.7969 Q4463.2344,1013.5469 4463.2344,1014.5781 L4463.2344,1015.6719 Q4463.2344,1016.9063 4464.125,1017.7266 Q4465.0156,1018.5469 4466.6094,1018.5469 Q4467.5469,1018.5469 4468.2031,1018.2969 Q4468.5938,1018.1406 4469.0156,1017.7031 Q4469.2813,1017.4375 4469.4297,1017.3594 Q4469.5781,1017.2813 4469.7813,1017.2813 Q4470.1094,1017.2813 4470.3672,1017.5391 Q4470.625,1017.7969 4470.625,1018.1406 Q4470.625,1018.4844 4470.2813,1018.8906 Q4469.7813,1019.4688 4468.9844,1019.7969 Q4467.9063,1020.25 4466.6094,1020.25 Q4465.0938,1020.25 4463.8906,1019.625 Q4462.9063,1019.125 4462.2188,1018.0547 Q4461.5313,1016.9844 4461.5313,1015.7031 L4461.5313,1014.5469 Q4461.5313,1013.2188 4462.1484,1012.0703 Q4462.7656,1010.9219 4463.8594,1010.3047 Q4464.9531,1009.6875 4466.1875,1009.6875 Q4466.9219,1009.6875 4467.5703,1009.8516 Q4468.2188,1010.0156 4468.7656,1010.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="4480" y="1019.4102">ListOfTriples</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4452" x2="4552" y1="1030.5" y2="1030.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4452" x2="4552" y1="1038.5" y2="1038.5"/><!--MD5=[3c11629c5314607dcae72425f0c11ee0]
class SingularAnnotation--><rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="SingularAnnotation" style="stroke: #A80036; stroke-width: 1.5;" width="136" x="4260" y="1642"/><ellipse cx="4275" cy="1658" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4277.7656,1653.875 Q4277.9219,1653.6563 4278.1094,1653.5469 Q4278.2969,1653.4375 4278.5156,1653.4375 Q4278.8906,1653.4375 4279.125,1653.6953 Q4279.3594,1653.9531 4279.3594,1654.5625 L4279.3594,1656.0156 Q4279.3594,1656.625 4279.125,1656.8906 Q4278.8906,1657.1563 4278.5156,1657.1563 Q4278.1719,1657.1563 4277.9688,1656.9531 Q4277.7656,1656.7656 4277.6563,1656.25 Q4277.6094,1655.8906 4277.4219,1655.7031 Q4277.0938,1655.3281 4276.4844,1655.1094 Q4275.875,1654.8906 4275.25,1654.8906 Q4274.4844,1654.8906 4273.8516,1655.2188 Q4273.2188,1655.5469 4272.7266,1656.2969 Q4272.2344,1657.0469 4272.2344,1658.0781 L4272.2344,1659.1719 Q4272.2344,1660.4063 4273.125,1661.2266 Q4274.0156,1662.0469 4275.6094,1662.0469 Q4276.5469,1662.0469 4277.2031,1661.7969 Q4277.5938,1661.6406 4278.0156,1661.2031 Q4278.2813,1660.9375 4278.4297,1660.8594 Q4278.5781,1660.7813 4278.7813,1660.7813 Q4279.1094,1660.7813 4279.3672,1661.0391 Q4279.625,1661.2969 4279.625,1661.6406 Q4279.625,1661.9844 4279.2813,1662.3906 Q4278.7813,1662.9688 4277.9844,1663.2969 Q4276.9063,1663.75 4275.6094,1663.75 Q4274.0938,1663.75 4272.8906,1663.125 Q4271.9063,1662.625 4271.2188,1661.5547 Q4270.5313,1660.4844 4270.5313,1659.2031 L4270.5313,1658.0469 Q4270.5313,1656.7188 4271.1484,1655.5703 Q4271.7656,1654.4219 4272.8594,1653.8047 Q4273.9531,1653.1875 4275.1875,1653.1875 Q4275.9219,1653.1875 4276.5703,1653.3516 Q4277.2188,1653.5156 4277.7656,1653.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="4289" y="1662.9102">SingularAnnotation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4261" x2="4395" y1="1674" y2="1674"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4261" x2="4395" y1="1682" y2="1682"/><!--MD5=[d08268a25748bbb06aac7cc2e0517ce6]
class ResourceUrl--><rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="ResourceUrl" style="stroke: #A80036; stroke-width: 1.5;" width="102" x="5492" y="1401.5"/><ellipse cx="5507" cy="1417.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5509.7656,1413.375 Q5509.9219,1413.1563 5510.1094,1413.0469 Q5510.2969,1412.9375 5510.5156,1412.9375 Q5510.8906,1412.9375 5511.125,1413.1953 Q5511.3594,1413.4531 5511.3594,1414.0625 L5511.3594,1415.5156 Q5511.3594,1416.125 5511.125,1416.3906 Q5510.8906,1416.6563 5510.5156,1416.6563 Q5510.1719,1416.6563 5509.9688,1416.4531 Q5509.7656,1416.2656 5509.6563,1415.75 Q5509.6094,1415.3906 5509.4219,1415.2031 Q5509.0938,1414.8281 5508.4844,1414.6094 Q5507.875,1414.3906 5507.25,1414.3906 Q5506.4844,1414.3906 5505.8516,1414.7188 Q5505.2188,1415.0469 5504.7266,1415.7969 Q5504.2344,1416.5469 5504.2344,1417.5781 L5504.2344,1418.6719 Q5504.2344,1419.9063 5505.125,1420.7266 Q5506.0156,1421.5469 5507.6094,1421.5469 Q5508.5469,1421.5469 5509.2031,1421.2969 Q5509.5938,1421.1406 5510.0156,1420.7031 Q5510.2813,1420.4375 5510.4297,1420.3594 Q5510.5781,1420.2813 5510.7813,1420.2813 Q5511.1094,1420.2813 5511.3672,1420.5391 Q5511.625,1420.7969 5511.625,1421.1406 Q5511.625,1421.4844 5511.2813,1421.8906 Q5510.7813,1422.4688 5509.9844,1422.7969 Q5508.9063,1423.25 5507.6094,1423.25 Q5506.0938,1423.25 5504.8906,1422.625 Q5503.9063,1422.125 5503.2188,1421.0547 Q5502.5313,1419.9844 5502.5313,1418.7031 L5502.5313,1417.5469 Q5502.5313,1416.2188 5503.1484,1415.0703 Q5503.7656,1413.9219 5504.8594,1413.3047 Q5505.9531,1412.6875 5507.1875,1412.6875 Q5507.9219,1412.6875 5508.5703,1412.8516 Q5509.2188,1413.0156 5509.7656,1413.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="70" x="5521" y="1422.4102">ResourceUrl</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5493" x2="5593" y1="1433.5" y2="1433.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5493" x2="5593" y1="1441.5" y2="1441.5"/><!--MD5=[625411352648d5aa1ffede7006df4e31]
class ResourceLiteral--><rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="ResourceLiteral" style="stroke: #A80036; stroke-width: 1.5;" width="120" x="5629" y="1401.5"/><ellipse cx="5644" cy="1417.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M5646.7656,1413.375 Q5646.9219,1413.1563 5647.1094,1413.0469 Q5647.2969,1412.9375 5647.5156,1412.9375 Q5647.8906,1412.9375 5648.125,1413.1953 Q5648.3594,1413.4531 5648.3594,1414.0625 L5648.3594,1415.5156 Q5648.3594,1416.125 5648.125,1416.3906 Q5647.8906,1416.6563 5647.5156,1416.6563 Q5647.1719,1416.6563 5646.9688,1416.4531 Q5646.7656,1416.2656 5646.6563,1415.75 Q5646.6094,1415.3906 5646.4219,1415.2031 Q5646.0938,1414.8281 5645.4844,1414.6094 Q5644.875,1414.3906 5644.25,1414.3906 Q5643.4844,1414.3906 5642.8516,1414.7188 Q5642.2188,1415.0469 5641.7266,1415.7969 Q5641.2344,1416.5469 5641.2344,1417.5781 L5641.2344,1418.6719 Q5641.2344,1419.9063 5642.125,1420.7266 Q5643.0156,1421.5469 5644.6094,1421.5469 Q5645.5469,1421.5469 5646.2031,1421.2969 Q5646.5938,1421.1406 5647.0156,1420.7031 Q5647.2813,1420.4375 5647.4297,1420.3594 Q5647.5781,1420.2813 5647.7813,1420.2813 Q5648.1094,1420.2813 5648.3672,1420.5391 Q5648.625,1420.7969 5648.625,1421.1406 Q5648.625,1421.4844 5648.2813,1421.8906 Q5647.7813,1422.4688 5646.9844,1422.7969 Q5645.9063,1423.25 5644.6094,1423.25 Q5643.0938,1423.25 5641.8906,1422.625 Q5640.9063,1422.125 5640.2188,1421.0547 Q5639.5313,1419.9844 5639.5313,1418.7031 L5639.5313,1417.5469 Q5639.5313,1416.2188 5640.1484,1415.0703 Q5640.7656,1413.9219 5641.8594,1413.3047 Q5642.9531,1412.6875 5644.1875,1412.6875 Q5644.9219,1412.6875 5645.5703,1412.8516 Q5646.2188,1413.0156 5646.7656,1413.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="5658" y="1422.4102">ResourceLiteral</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="5630" x2="5748" y1="1433.5" y2="1433.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="5630" x2="5748" y1="1441.5" y2="1441.5"/><!--MD5=[fa40dda412b6b247aa26dc2693ea2d81]
class PhysicalProperty-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="PhysicalProperty"
              style="stroke: #A80036; stroke-width: 1.5;" width="123" x="4927.5" y="1642"/>
        <ellipse cx="4942.5" cy="1658" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4945.2656,1653.875 Q4945.4219,1653.6563 4945.6094,1653.5469 Q4945.7969,1653.4375 4946.0156,1653.4375 Q4946.3906,1653.4375 4946.625,1653.6953 Q4946.8594,1653.9531 4946.8594,1654.5625 L4946.8594,1656.0156 Q4946.8594,1656.625 4946.625,1656.8906 Q4946.3906,1657.1563 4946.0156,1657.1563 Q4945.6719,1657.1563 4945.4688,1656.9531 Q4945.2656,1656.7656 4945.1563,1656.25 Q4945.1094,1655.8906 4944.9219,1655.7031 Q4944.5938,1655.3281 4943.9844,1655.1094 Q4943.375,1654.8906 4942.75,1654.8906 Q4941.9844,1654.8906 4941.3516,1655.2188 Q4940.7188,1655.5469 4940.2266,1656.2969 Q4939.7344,1657.0469 4939.7344,1658.0781 L4939.7344,1659.1719 Q4939.7344,1660.4063 4940.625,1661.2266 Q4941.5156,1662.0469 4943.1094,1662.0469 Q4944.0469,1662.0469 4944.7031,1661.7969 Q4945.0938,1661.6406 4945.5156,1661.2031 Q4945.7813,1660.9375 4945.9297,1660.8594 Q4946.0781,1660.7813 4946.2813,1660.7813 Q4946.6094,1660.7813 4946.8672,1661.0391 Q4947.125,1661.2969 4947.125,1661.6406 Q4947.125,1661.9844 4946.7813,1662.3906 Q4946.2813,1662.9688 4945.4844,1663.2969 Q4944.4063,1663.75 4943.1094,1663.75 Q4941.5938,1663.75 4940.3906,1663.125 Q4939.4063,1662.625 4938.7188,1661.5547 Q4938.0313,1660.4844 4938.0313,1659.2031 L4938.0313,1658.0469 Q4938.0313,1656.7188 4938.6484,1655.5703 Q4939.2656,1654.4219 4940.3594,1653.8047 Q4941.4531,1653.1875 4942.6875,1653.1875 Q4943.4219,1653.1875 4944.0703,1653.3516 Q4944.7188,1653.5156 4945.2656,1653.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91"
              x="4956.5" y="1662.9102">PhysicalProperty
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4928.5" x2="5049.5" y1="1674" y2="1674"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4928.5" x2="5049.5" y1="1682" y2="1682"/><!--MD5=[2a1263ec53ab8251b6569cc7ff183119]
class PropertyBearer-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="PropertyBearer"
              style="stroke: #A80036; stroke-width: 1.5;" width="114" x="4704" y="1642"/>
        <ellipse cx="4719" cy="1658" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4721.7656,1653.875 Q4721.9219,1653.6563 4722.1094,1653.5469 Q4722.2969,1653.4375 4722.5156,1653.4375 Q4722.8906,1653.4375 4723.125,1653.6953 Q4723.3594,1653.9531 4723.3594,1654.5625 L4723.3594,1656.0156 Q4723.3594,1656.625 4723.125,1656.8906 Q4722.8906,1657.1563 4722.5156,1657.1563 Q4722.1719,1657.1563 4721.9688,1656.9531 Q4721.7656,1656.7656 4721.6563,1656.25 Q4721.6094,1655.8906 4721.4219,1655.7031 Q4721.0938,1655.3281 4720.4844,1655.1094 Q4719.875,1654.8906 4719.25,1654.8906 Q4718.4844,1654.8906 4717.8516,1655.2188 Q4717.2188,1655.5469 4716.7266,1656.2969 Q4716.2344,1657.0469 4716.2344,1658.0781 L4716.2344,1659.1719 Q4716.2344,1660.4063 4717.125,1661.2266 Q4718.0156,1662.0469 4719.6094,1662.0469 Q4720.5469,1662.0469 4721.2031,1661.7969 Q4721.5938,1661.6406 4722.0156,1661.2031 Q4722.2813,1660.9375 4722.4297,1660.8594 Q4722.5781,1660.7813 4722.7813,1660.7813 Q4723.1094,1660.7813 4723.3672,1661.0391 Q4723.625,1661.2969 4723.625,1661.6406 Q4723.625,1661.9844 4723.2813,1662.3906 Q4722.7813,1662.9688 4721.9844,1663.2969 Q4720.9063,1663.75 4719.6094,1663.75 Q4718.0938,1663.75 4716.8906,1663.125 Q4715.9063,1662.625 4715.2188,1661.5547 Q4714.5313,1660.4844 4714.5313,1659.2031 L4714.5313,1658.0469 Q4714.5313,1656.7188 4715.1484,1655.5703 Q4715.7656,1654.4219 4716.8594,1653.8047 Q4717.9531,1653.1875 4719.1875,1653.1875 Q4719.9219,1653.1875 4720.5703,1653.3516 Q4721.2188,1653.5156 4721.7656,1653.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82"
              x="4733" y="1662.9102">PropertyBearer
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4705" x2="4817" y1="1674" y2="1674"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4705" x2="4817" y1="1682" y2="1682"/><!--MD5=[df581eb0b2d7aded84449964112700d9]
class PhysicalEntity-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="PhysicalEntity"
              style="stroke: #A80036; stroke-width: 1.5;" width="107" x="4707.5" y="1751"/>
        <ellipse cx="4722.5" cy="1767" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4725.2656,1762.875 Q4725.4219,1762.6563 4725.6094,1762.5469 Q4725.7969,1762.4375 4726.0156,1762.4375 Q4726.3906,1762.4375 4726.625,1762.6953 Q4726.8594,1762.9531 4726.8594,1763.5625 L4726.8594,1765.0156 Q4726.8594,1765.625 4726.625,1765.8906 Q4726.3906,1766.1563 4726.0156,1766.1563 Q4725.6719,1766.1563 4725.4688,1765.9531 Q4725.2656,1765.7656 4725.1563,1765.25 Q4725.1094,1764.8906 4724.9219,1764.7031 Q4724.5938,1764.3281 4723.9844,1764.1094 Q4723.375,1763.8906 4722.75,1763.8906 Q4721.9844,1763.8906 4721.3516,1764.2188 Q4720.7188,1764.5469 4720.2266,1765.2969 Q4719.7344,1766.0469 4719.7344,1767.0781 L4719.7344,1768.1719 Q4719.7344,1769.4063 4720.625,1770.2266 Q4721.5156,1771.0469 4723.1094,1771.0469 Q4724.0469,1771.0469 4724.7031,1770.7969 Q4725.0938,1770.6406 4725.5156,1770.2031 Q4725.7813,1769.9375 4725.9297,1769.8594 Q4726.0781,1769.7813 4726.2813,1769.7813 Q4726.6094,1769.7813 4726.8672,1770.0391 Q4727.125,1770.2969 4727.125,1770.6406 Q4727.125,1770.9844 4726.7813,1771.3906 Q4726.2813,1771.9688 4725.4844,1772.2969 Q4724.4063,1772.75 4723.1094,1772.75 Q4721.5938,1772.75 4720.3906,1772.125 Q4719.4063,1771.625 4718.7188,1770.5547 Q4718.0313,1769.4844 4718.0313,1768.2031 L4718.0313,1767.0469 Q4718.0313,1765.7188 4718.6484,1764.5703 Q4719.2656,1763.4219 4720.3594,1762.8047 Q4721.4531,1762.1875 4722.6875,1762.1875 Q4723.4219,1762.1875 4724.0703,1762.3516 Q4724.7188,1762.5156 4725.2656,1762.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75"
              x="4736.5" y="1771.9102">PhysicalEntity
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4708.5" x2="4813.5" y1="1783" y2="1783"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4708.5" x2="4813.5" y1="1791" y2="1791"/><!--MD5=[48d70057fbcb13305256da8ebb6052ce]
class PhysicalProcess-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="PhysicalProcess"
              style="stroke: #A80036; stroke-width: 1.5;" width="124" x="4850" y="1751"/>
        <ellipse cx="4865" cy="1767" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4867.7656,1762.875 Q4867.9219,1762.6563 4868.1094,1762.5469 Q4868.2969,1762.4375 4868.5156,1762.4375 Q4868.8906,1762.4375 4869.125,1762.6953 Q4869.3594,1762.9531 4869.3594,1763.5625 L4869.3594,1765.0156 Q4869.3594,1765.625 4869.125,1765.8906 Q4868.8906,1766.1563 4868.5156,1766.1563 Q4868.1719,1766.1563 4867.9688,1765.9531 Q4867.7656,1765.7656 4867.6563,1765.25 Q4867.6094,1764.8906 4867.4219,1764.7031 Q4867.0938,1764.3281 4866.4844,1764.1094 Q4865.875,1763.8906 4865.25,1763.8906 Q4864.4844,1763.8906 4863.8516,1764.2188 Q4863.2188,1764.5469 4862.7266,1765.2969 Q4862.2344,1766.0469 4862.2344,1767.0781 L4862.2344,1768.1719 Q4862.2344,1769.4063 4863.125,1770.2266 Q4864.0156,1771.0469 4865.6094,1771.0469 Q4866.5469,1771.0469 4867.2031,1770.7969 Q4867.5938,1770.6406 4868.0156,1770.2031 Q4868.2813,1769.9375 4868.4297,1769.8594 Q4868.5781,1769.7813 4868.7813,1769.7813 Q4869.1094,1769.7813 4869.3672,1770.0391 Q4869.625,1770.2969 4869.625,1770.6406 Q4869.625,1770.9844 4869.2813,1771.3906 Q4868.7813,1771.9688 4867.9844,1772.2969 Q4866.9063,1772.75 4865.6094,1772.75 Q4864.0938,1772.75 4862.8906,1772.125 Q4861.9063,1771.625 4861.2188,1770.5547 Q4860.5313,1769.4844 4860.5313,1768.2031 L4860.5313,1767.0469 Q4860.5313,1765.7188 4861.1484,1764.5703 Q4861.7656,1763.4219 4862.8594,1762.8047 Q4863.9531,1762.1875 4865.1875,1762.1875 Q4865.9219,1762.1875 4866.5703,1762.3516 Q4867.2188,1762.5156 4867.7656,1762.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="92"
              x="4879" y="1771.9102">PhysicalProcess
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4851" x2="4973" y1="1783" y2="1783"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4851" x2="4973" y1="1791" y2="1791"/><!--MD5=[7891b59bb27f0174c8b8c465458d50ca]
class EnergyDiff-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="EnergyDiff"
              style="stroke: #A80036; stroke-width: 1.5;" width="109" x="4381.5" y="1751"/>
        <ellipse cx="4396.5" cy="1767" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4399.2656,1762.875 Q4399.4219,1762.6563 4399.6094,1762.5469 Q4399.7969,1762.4375 4400.0156,1762.4375 Q4400.3906,1762.4375 4400.625,1762.6953 Q4400.8594,1762.9531 4400.8594,1763.5625 L4400.8594,1765.0156 Q4400.8594,1765.625 4400.625,1765.8906 Q4400.3906,1766.1563 4400.0156,1766.1563 Q4399.6719,1766.1563 4399.4688,1765.9531 Q4399.2656,1765.7656 4399.1563,1765.25 Q4399.1094,1764.8906 4398.9219,1764.7031 Q4398.5938,1764.3281 4397.9844,1764.1094 Q4397.375,1763.8906 4396.75,1763.8906 Q4395.9844,1763.8906 4395.3516,1764.2188 Q4394.7188,1764.5469 4394.2266,1765.2969 Q4393.7344,1766.0469 4393.7344,1767.0781 L4393.7344,1768.1719 Q4393.7344,1769.4063 4394.625,1770.2266 Q4395.5156,1771.0469 4397.1094,1771.0469 Q4398.0469,1771.0469 4398.7031,1770.7969 Q4399.0938,1770.6406 4399.5156,1770.2031 Q4399.7813,1769.9375 4399.9297,1769.8594 Q4400.0781,1769.7813 4400.2813,1769.7813 Q4400.6094,1769.7813 4400.8672,1770.0391 Q4401.125,1770.2969 4401.125,1770.6406 Q4401.125,1770.9844 4400.7813,1771.3906 Q4400.2813,1771.9688 4399.4844,1772.2969 Q4398.4063,1772.75 4397.1094,1772.75 Q4395.5938,1772.75 4394.3906,1772.125 Q4393.4063,1771.625 4392.7188,1770.5547 Q4392.0313,1769.4844 4392.0313,1768.2031 L4392.0313,1767.0469 Q4392.0313,1765.7188 4392.6484,1764.5703 Q4393.2656,1763.4219 4394.3594,1762.8047 Q4395.4531,1762.1875 4396.6875,1762.1875 Q4397.4219,1762.1875 4398.0703,1762.3516 Q4398.7188,1762.5156 4399.2656,1762.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77"
              x="4410.5" y="1771.9102">EnergyDiff
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4382.5" x2="4489.5" y1="1783" y2="1783"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4382.5" x2="4489.5" y1="1791" y2="1791"/><!--MD5=[e514f18440047e307342ce332512f54c]
class PhysicalDependency-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="PhysicalDependency"
              style="stroke: #A80036; stroke-width: 1.5;" width="147" x="4525.5" y="1751"/>
        <ellipse cx="4540.5" cy="1767" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4543.2656,1762.875 Q4543.4219,1762.6563 4543.6094,1762.5469 Q4543.7969,1762.4375 4544.0156,1762.4375 Q4544.3906,1762.4375 4544.625,1762.6953 Q4544.8594,1762.9531 4544.8594,1763.5625 L4544.8594,1765.0156 Q4544.8594,1765.625 4544.625,1765.8906 Q4544.3906,1766.1563 4544.0156,1766.1563 Q4543.6719,1766.1563 4543.4688,1765.9531 Q4543.2656,1765.7656 4543.1563,1765.25 Q4543.1094,1764.8906 4542.9219,1764.7031 Q4542.5938,1764.3281 4541.9844,1764.1094 Q4541.375,1763.8906 4540.75,1763.8906 Q4539.9844,1763.8906 4539.3516,1764.2188 Q4538.7188,1764.5469 4538.2266,1765.2969 Q4537.7344,1766.0469 4537.7344,1767.0781 L4537.7344,1768.1719 Q4537.7344,1769.4063 4538.625,1770.2266 Q4539.5156,1771.0469 4541.1094,1771.0469 Q4542.0469,1771.0469 4542.7031,1770.7969 Q4543.0938,1770.6406 4543.5156,1770.2031 Q4543.7813,1769.9375 4543.9297,1769.8594 Q4544.0781,1769.7813 4544.2813,1769.7813 Q4544.6094,1769.7813 4544.8672,1770.0391 Q4545.125,1770.2969 4545.125,1770.6406 Q4545.125,1770.9844 4544.7813,1771.3906 Q4544.2813,1771.9688 4543.4844,1772.2969 Q4542.4063,1772.75 4541.1094,1772.75 Q4539.5938,1772.75 4538.3906,1772.125 Q4537.4063,1771.625 4536.7188,1770.5547 Q4536.0313,1769.4844 4536.0313,1768.2031 L4536.0313,1767.0469 Q4536.0313,1765.7188 4536.6484,1764.5703 Q4537.2656,1763.4219 4538.3594,1762.8047 Q4539.4531,1762.1875 4540.6875,1762.1875 Q4541.4219,1762.1875 4542.0703,1762.3516 Q4542.7188,1762.5156 4543.2656,1762.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="115"
              x="4554.5" y="1771.9102">PhysicalDependency
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4526.5" x2="4671.5" y1="1783" y2="1783"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4526.5" x2="4671.5" y1="1791" y2="1791"/><!--MD5=[faebc81c07309c527f2fda51bf6b78ab]
class Annotation-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="Annotation"
              style="stroke: #A80036; stroke-width: 1.5;" width="90" x="4482" y="1860"/>
        <ellipse cx="4497" cy="1876" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4499.7656,1871.875 Q4499.9219,1871.6563 4500.1094,1871.5469 Q4500.2969,1871.4375 4500.5156,1871.4375 Q4500.8906,1871.4375 4501.125,1871.6953 Q4501.3594,1871.9531 4501.3594,1872.5625 L4501.3594,1874.0156 Q4501.3594,1874.625 4501.125,1874.8906 Q4500.8906,1875.1563 4500.5156,1875.1563 Q4500.1719,1875.1563 4499.9688,1874.9531 Q4499.7656,1874.7656 4499.6563,1874.25 Q4499.6094,1873.8906 4499.4219,1873.7031 Q4499.0938,1873.3281 4498.4844,1873.1094 Q4497.875,1872.8906 4497.25,1872.8906 Q4496.4844,1872.8906 4495.8516,1873.2188 Q4495.2188,1873.5469 4494.7266,1874.2969 Q4494.2344,1875.0469 4494.2344,1876.0781 L4494.2344,1877.1719 Q4494.2344,1878.4063 4495.125,1879.2266 Q4496.0156,1880.0469 4497.6094,1880.0469 Q4498.5469,1880.0469 4499.2031,1879.7969 Q4499.5938,1879.6406 4500.0156,1879.2031 Q4500.2813,1878.9375 4500.4297,1878.8594 Q4500.5781,1878.7813 4500.7813,1878.7813 Q4501.1094,1878.7813 4501.3672,1879.0391 Q4501.625,1879.2969 4501.625,1879.6406 Q4501.625,1879.9844 4501.2813,1880.3906 Q4500.7813,1880.9688 4499.9844,1881.2969 Q4498.9063,1881.75 4497.6094,1881.75 Q4496.0938,1881.75 4494.8906,1881.125 Q4493.9063,1880.625 4493.2188,1879.5547 Q4492.5313,1878.4844 4492.5313,1877.2031 L4492.5313,1876.0469 Q4492.5313,1874.7188 4493.1484,1873.5703 Q4493.7656,1872.4219 4494.8594,1871.8047 Q4495.9531,1871.1875 4497.1875,1871.1875 Q4497.9219,1871.1875 4498.5703,1871.3516 Q4499.2188,1871.5156 4499.7656,1871.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58"
              x="4511" y="1880.9102">Annotation
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4483" x2="4571" y1="1892" y2="1892"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4483" x2="4571" y1="1900" y2="1900"/><!--MD5=[bd5a7c6ba0e5b7af461c7d0f99591f68]
class CompositeAnnotation-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="CompositeAnnotation"
              style="stroke: #A80036; stroke-width: 1.5;" width="151" x="5009.5" y="1751"/>
        <ellipse cx="5024.5" cy="1767" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M5027.2656,1762.875 Q5027.4219,1762.6563 5027.6094,1762.5469 Q5027.7969,1762.4375 5028.0156,1762.4375 Q5028.3906,1762.4375 5028.625,1762.6953 Q5028.8594,1762.9531 5028.8594,1763.5625 L5028.8594,1765.0156 Q5028.8594,1765.625 5028.625,1765.8906 Q5028.3906,1766.1563 5028.0156,1766.1563 Q5027.6719,1766.1563 5027.4688,1765.9531 Q5027.2656,1765.7656 5027.1563,1765.25 Q5027.1094,1764.8906 5026.9219,1764.7031 Q5026.5938,1764.3281 5025.9844,1764.1094 Q5025.375,1763.8906 5024.75,1763.8906 Q5023.9844,1763.8906 5023.3516,1764.2188 Q5022.7188,1764.5469 5022.2266,1765.2969 Q5021.7344,1766.0469 5021.7344,1767.0781 L5021.7344,1768.1719 Q5021.7344,1769.4063 5022.625,1770.2266 Q5023.5156,1771.0469 5025.1094,1771.0469 Q5026.0469,1771.0469 5026.7031,1770.7969 Q5027.0938,1770.6406 5027.5156,1770.2031 Q5027.7813,1769.9375 5027.9297,1769.8594 Q5028.0781,1769.7813 5028.2813,1769.7813 Q5028.6094,1769.7813 5028.8672,1770.0391 Q5029.125,1770.2969 5029.125,1770.6406 Q5029.125,1770.9844 5028.7813,1771.3906 Q5028.2813,1771.9688 5027.4844,1772.2969 Q5026.4063,1772.75 5025.1094,1772.75 Q5023.5938,1772.75 5022.3906,1772.125 Q5021.4063,1771.625 5020.7188,1770.5547 Q5020.0313,1769.4844 5020.0313,1768.2031 L5020.0313,1767.0469 Q5020.0313,1765.7188 5020.6484,1764.5703 Q5021.2656,1763.4219 5022.3594,1762.8047 Q5023.4531,1762.1875 5024.6875,1762.1875 Q5025.4219,1762.1875 5026.0703,1762.3516 Q5026.7188,1762.5156 5027.2656,1762.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119"
              x="5038.5" y="1771.9102">CompositeAnnotation
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="5010.5" x2="5159.5" y1="1783" y2="1783"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="5010.5" x2="5159.5" y1="1791" y2="1791"/><!--MD5=[cc0b0b3c73a04f7a77a5782e13bc5baa]
class ListOfAnnotations-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="ListOfAnnotations"
              style="stroke: #A80036; stroke-width: 1.5;" width="129" x="4462.5" y="1969"/>
        <ellipse cx="4477.5" cy="1985" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M4480.2656,1980.875 Q4480.4219,1980.6563 4480.6094,1980.5469 Q4480.7969,1980.4375 4481.0156,1980.4375 Q4481.3906,1980.4375 4481.625,1980.6953 Q4481.8594,1980.9531 4481.8594,1981.5625 L4481.8594,1983.0156 Q4481.8594,1983.625 4481.625,1983.8906 Q4481.3906,1984.1563 4481.0156,1984.1563 Q4480.6719,1984.1563 4480.4688,1983.9531 Q4480.2656,1983.7656 4480.1563,1983.25 Q4480.1094,1982.8906 4479.9219,1982.7031 Q4479.5938,1982.3281 4478.9844,1982.1094 Q4478.375,1981.8906 4477.75,1981.8906 Q4476.9844,1981.8906 4476.3516,1982.2188 Q4475.7188,1982.5469 4475.2266,1983.2969 Q4474.7344,1984.0469 4474.7344,1985.0781 L4474.7344,1986.1719 Q4474.7344,1987.4063 4475.625,1988.2266 Q4476.5156,1989.0469 4478.1094,1989.0469 Q4479.0469,1989.0469 4479.7031,1988.7969 Q4480.0938,1988.6406 4480.5156,1988.2031 Q4480.7813,1987.9375 4480.9297,1987.8594 Q4481.0781,1987.7813 4481.2813,1987.7813 Q4481.6094,1987.7813 4481.8672,1988.0391 Q4482.125,1988.2969 4482.125,1988.6406 Q4482.125,1988.9844 4481.7813,1989.3906 Q4481.2813,1989.9688 4480.4844,1990.2969 Q4479.4063,1990.75 4478.1094,1990.75 Q4476.5938,1990.75 4475.3906,1990.125 Q4474.4063,1989.625 4473.7188,1988.5547 Q4473.0313,1987.4844 4473.0313,1986.2031 L4473.0313,1985.0469 Q4473.0313,1983.7188 4473.6484,1982.5703 Q4474.2656,1981.4219 4475.3594,1980.8047 Q4476.4531,1980.1875 4477.6875,1980.1875 Q4478.4219,1980.1875 4479.0703,1980.3516 Q4479.7188,1980.5156 4480.2656,1980.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97"
              x="4491.5" y="1989.9102">ListOfAnnotations
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4463.5" x2="4590.5" y1="2001" y2="2001"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="4463.5" x2="4590.5" y1="2009" y2="2009"/><!--MD5=[ebbc6e533b9424b05380821bc8a49a41]
class CurlGet-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="89.5078" id="CurlGet"
              style="stroke: #A80036; stroke-width: 1.5;" width="394" x="519" y="1380.5"/>
        <ellipse cx="690.75" cy="1396.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M693.5156,1392.375 Q693.6719,1392.1563 693.8594,1392.0469 Q694.0469,1391.9375 694.2656,1391.9375 Q694.6406,1391.9375 694.875,1392.1953 Q695.1094,1392.4531 695.1094,1393.0625 L695.1094,1394.5156 Q695.1094,1395.125 694.875,1395.3906 Q694.6406,1395.6563 694.2656,1395.6563 Q693.9219,1395.6563 693.7188,1395.4531 Q693.5156,1395.2656 693.4063,1394.75 Q693.3594,1394.3906 693.1719,1394.2031 Q692.8438,1393.8281 692.2344,1393.6094 Q691.625,1393.3906 691,1393.3906 Q690.2344,1393.3906 689.6016,1393.7188 Q688.9688,1394.0469 688.4766,1394.7969 Q687.9844,1395.5469 687.9844,1396.5781 L687.9844,1397.6719 Q687.9844,1398.9063 688.875,1399.7266 Q689.7656,1400.5469 691.3594,1400.5469 Q692.2969,1400.5469 692.9531,1400.2969 Q693.3438,1400.1406 693.7656,1399.7031 Q694.0313,1399.4375 694.1797,1399.3594 Q694.3281,1399.2813 694.5313,1399.2813 Q694.8594,1399.2813 695.1172,1399.5391 Q695.375,1399.7969 695.375,1400.1406 Q695.375,1400.4844 695.0313,1400.8906 Q694.5313,1401.4688 693.7344,1401.7969 Q692.6563,1402.25 691.3594,1402.25 Q689.8438,1402.25 688.6406,1401.625 Q687.6563,1401.125 686.9688,1400.0547 Q686.2813,1398.9844 686.2813,1397.7031 L686.2813,1396.5469 Q686.2813,1395.2188 686.8984,1394.0703 Q687.5156,1392.9219 688.6094,1392.3047 Q689.7031,1391.6875 690.9375,1391.6875 Q691.6719,1391.6875 692.3203,1391.8516 Q692.9688,1392.0156 693.5156,1392.375 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="42"
              x="711.25" y="1401.4102">CurlGet
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="520" x2="912" y1="1412.5" y2="1412.5"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="520" x2="912" y1="1420.5" y2="1420.5"/>
        <ellipse cx="530" cy="1431.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44"
              x="539" y="1435.9189">CurlGet()
        </text>
        <ellipse cx="530" cy="1445.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="346" x="539" y="1449.7549">download(const std::string&amp; url,
            const std::string&amp; output_filename) : int
        </text>
        <rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="527" y="1456.1719"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="368" x="539" y="1463.5908">curlWriteCallback(void* data, size_t
            size, size_t nmemb, void* userp) : size_t
        </text><!--MD5=[1f493c33f2a2176aeae243909a5c54c1]
class RDF-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="573.7656" id="RDF"
              style="stroke: #A80036; stroke-width: 1.5;" width="508" x="912" y="104.5"/>
        <ellipse cx="1149.25" cy="120.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M1152.0156,116.375 Q1152.1719,116.1563 1152.3594,116.0469 Q1152.5469,115.9375 1152.7656,115.9375 Q1153.1406,115.9375 1153.375,116.1953 Q1153.6094,116.4531 1153.6094,117.0625 L1153.6094,118.5156 Q1153.6094,119.125 1153.375,119.3906 Q1153.1406,119.6563 1152.7656,119.6563 Q1152.4219,119.6563 1152.2188,119.4531 Q1152.0156,119.2656 1151.9063,118.75 Q1151.8594,118.3906 1151.6719,118.2031 Q1151.3438,117.8281 1150.7344,117.6094 Q1150.125,117.3906 1149.5,117.3906 Q1148.7344,117.3906 1148.1016,117.7188 Q1147.4688,118.0469 1146.9766,118.7969 Q1146.4844,119.5469 1146.4844,120.5781 L1146.4844,121.6719 Q1146.4844,122.9063 1147.375,123.7266 Q1148.2656,124.5469 1149.8594,124.5469 Q1150.7969,124.5469 1151.4531,124.2969 Q1151.8438,124.1406 1152.2656,123.7031 Q1152.5313,123.4375 1152.6797,123.3594 Q1152.8281,123.2813 1153.0313,123.2813 Q1153.3594,123.2813 1153.6172,123.5391 Q1153.875,123.7969 1153.875,124.1406 Q1153.875,124.4844 1153.5313,124.8906 Q1153.0313,125.4688 1152.2344,125.7969 Q1151.1563,126.25 1149.8594,126.25 Q1148.3438,126.25 1147.1406,125.625 Q1146.1563,125.125 1145.4688,124.0547 Q1144.7813,122.9844 1144.7813,121.7031 L1144.7813,120.5469 Q1144.7813,119.2188 1145.3984,118.0703 Q1146.0156,116.9219 1147.1094,116.3047 Q1148.2031,115.6875 1149.4375,115.6875 Q1150.1719,115.6875 1150.8203,115.8516 Q1151.4688,116.0156 1152.0156,116.375 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="25"
              x="1169.75" y="125.4102">RDF
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="913" x2="1419" y1="136.5" y2="136.5"/>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="920" y="144.5"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105"
              x="932" y="151.9189">model_uri_ : librdf_model*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="920" y="158.3359"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123"
              x="932" y="165.7549">storage_ : librdf_storage*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="920" y="172.1719"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105"
              x="932" y="179.5908">world_ : librdf_world*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="920" y="186.0078"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145"
              x="932" y="193.4268">raptor_world_ : raptor_world*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="920" y="199.8438"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="304"
              x="932" y="207.2627">namespaces_ : std::unordered_map&lt;const char*, const char*&gt;
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="913" x2="1419" y1="213.6797" y2="213.6797"/>
        <ellipse cx="923" cy="224.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="28"
              x="932" y="229.0986">RDF()
        </text>
        <ellipse cx="923" cy="238.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="482"
              x="932" y="242.9346">RDF(librdf_world* world, raptor_world* raptor_world_, librdf_storage* storage,
            librdf_model* model)
        </text>
        <ellipse cx="923" cy="252.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143"
              x="932" y="256.7705">RDF(const RDF&amp; libRdfModel)
        </text>
        <ellipse cx="923" cy="266.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120"
              x="932" y="270.6064">RDF(RDF&amp;&amp; libRdfModel)
        </text>
        <ellipse cx="923" cy="280.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="34"
              x="932" y="284.4424">~RDF()
        </text>
        <ellipse cx="923" cy="293.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206"
              x="932" y="298.2783">operator=(const RDF&amp; libRdfModel) : RDF&amp;
        </text>
        <ellipse cx="923" cy="307.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183"
              x="932" y="312.1143">operator=(RDF&amp;&amp; libRdfModel) : RDF&amp;
        </text>
        <ellipse cx="923" cy="321.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162"
              x="932" y="325.9502">operator!=(const RDF&amp; rhs) : bool
        </text>
        <ellipse cx="923" cy="335.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166"
              x="932" y="339.7861">operator==(const RDF&amp; rhs) : bool
        </text>
        <rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="920" y="346.2031"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="397"
              x="932" y="353.6221">makeWriter(const std::string&amp; format, const std::string&amp; base_uri_) :
            omexmeta::Writer
        </text>
        <ellipse cx="923" cy="363.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="121" x="932" y="367.458">init() : LibRDFObjectsTuple
        </text>
        <ellipse cx="923" cy="376.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="212" x="932" y="381.2939">fromOmex(std::string filename_or_url) :
            RDF
        </text>
        <ellipse cx="923" cy="390.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="170" x="932" y="395.1299">fromFile(std::string filename) : RDF
        </text>
        <ellipse cx="923" cy="404.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="135" x="932" y="408.9658">fromUrl(std::string url) : RDF
        </text>
        <ellipse cx="923" cy="418.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="154" x="932" y="422.8018">listOptions() : std::ostringstream
        </text>
        <ellipse cx="923" cy="432.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392"
              x="932" y="436.6377">addStatement(std::string subject, std::string predicate, std::string resource) : void
        </text>
        <ellipse cx="923" cy="446.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136"
              x="932" y="450.4736">propagateNamespacesFromParser() : void
        </text>
        <ellipse cx="923" cy="459.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="338" x="932" y="464.3096">fromXML(const std::string&amp; filename,
            std::string format) : omexmeta::RDF
        </text>
        <ellipse cx="923" cy="473.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="276" x="932" y="478.1455">fromString(const std::string&amp; str,
            std::string format) : void
        </text>
        <ellipse cx="923" cy="487.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144"
              x="932" y="491.9814">toFile(std::string format) : void
        </text>
        <ellipse cx="923" cy="501.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283"
              x="932" y="505.8174">toString(std::string format, std::string base_uri_) : std::string
        </text>
        <ellipse cx="923" cy="515.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80"
              x="932" y="519.6533">toEditor() : Editor
        </text>
        <ellipse cx="923" cy="529.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122"
              x="932" y="533.4893">getModelUri() : librdf_model*
        </text>
        <ellipse cx="923" cy="542.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141"
              x="932" y="547.3252">getStorage() : librdf_storage*
        </text>
        <ellipse cx="923" cy="556.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122"
              x="932" y="561.1611">getWorld() : librdf_world*
        </text>
        <ellipse cx="923" cy="570.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159"
              x="932" y="574.9971">getRaptorWorld() : raptor_world*
        </text>
        <ellipse cx="923" cy="584.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302"
              x="932" y="588.833">getNamespaces() : std::unordered_map&lt;const char* , char*&gt;&amp;
        </text>
        <ellipse cx="923" cy="598.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173"
              x="932" y="602.6689">setModelUri(librdf_model* model) : void
        </text>
        <ellipse cx="923" cy="612.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="444"
              x="932" y="616.5049">setNamespaces(const std::unordered_map&lt;const char*, const char*&gt;&amp;
            namespaces) : void
        </text>
        <ellipse cx="923" cy="625.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83"
              x="932" y="630.3408">setOption() : void
        </text>
        <ellipse cx="923" cy="639.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252"
              x="932" y="644.1768">setRaptorWorld(raptor_world* raptorWorldPtr) : void
        </text>
        <ellipse cx="923" cy="653.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201"
              x="932" y="658.0127">setStorage(librdf_storage* storage) : void
        </text>
        <ellipse cx="923" cy="667.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173"
              x="932" y="671.8486">setWorld(librdf_world* world) : void
        </text><!--MD5=[e86a4777f2c0372cf9fb3cd047e1466e]
class Reader-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="338.5547" id="Reader"
              style="stroke: #A80036; stroke-width: 1.5;" width="383" x="1446.5" y="853"/>
        <ellipse cx="1613.25" cy="869" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M1616.0156,864.875 Q1616.1719,864.6563 1616.3594,864.5469 Q1616.5469,864.4375 1616.7656,864.4375 Q1617.1406,864.4375 1617.375,864.6953 Q1617.6094,864.9531 1617.6094,865.5625 L1617.6094,867.0156 Q1617.6094,867.625 1617.375,867.8906 Q1617.1406,868.1563 1616.7656,868.1563 Q1616.4219,868.1563 1616.2188,867.9531 Q1616.0156,867.7656 1615.9063,867.25 Q1615.8594,866.8906 1615.6719,866.7031 Q1615.3438,866.3281 1614.7344,866.1094 Q1614.125,865.8906 1613.5,865.8906 Q1612.7344,865.8906 1612.1016,866.2188 Q1611.4688,866.5469 1610.9766,867.2969 Q1610.4844,868.0469 1610.4844,869.0781 L1610.4844,870.1719 Q1610.4844,871.4063 1611.375,872.2266 Q1612.2656,873.0469 1613.8594,873.0469 Q1614.7969,873.0469 1615.4531,872.7969 Q1615.8438,872.6406 1616.2656,872.2031 Q1616.5313,871.9375 1616.6797,871.8594 Q1616.8281,871.7813 1617.0313,871.7813 Q1617.3594,871.7813 1617.6172,872.0391 Q1617.875,872.2969 1617.875,872.6406 Q1617.875,872.9844 1617.5313,873.3906 Q1617.0313,873.9688 1616.2344,874.2969 Q1615.1563,874.75 1613.8594,874.75 Q1612.3438,874.75 1611.1406,874.125 Q1610.1563,873.625 1609.4688,872.5547 Q1608.7813,871.4844 1608.7813,870.2031 L1608.7813,869.0469 Q1608.7813,867.7188 1609.3984,866.5703 Q1610.0156,865.4219 1611.1094,864.8047 Q1612.2031,864.1875 1613.4375,864.1875 Q1614.1719,864.1875 1614.8203,864.3516 Q1615.4688,864.5156 1616.0156,864.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41"
              x="1633.75" y="873.9102">Reader
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="1447.5" x2="1828.5" y1="885" y2="885"/>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1454.5" y="893"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105"
              x="1466.5" y="900.4189">model_uri_ : librdf_model*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1454.5" y="906.8359"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113"
              x="1466.5" y="914.2549">parser_ : librdf_parser*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1454.5" y="920.6719"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98"
              x="1466.5" y="928.0908">base_uri_ : librdf_uri*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1454.5" y="934.5078"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105"
              x="1466.5" y="941.9268">world_ : librdf_world*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1454.5" y="948.3438"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164"
              x="1466.5" y="955.7627">raptor_world_ptr_ : raptor_world*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1454.5" y="962.1797"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94"
              x="1466.5" y="969.5986">format_ : std::string
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="1447.5" x2="1828.5" y1="976.0156" y2="976.0156"/>
        <ellipse cx="1457.5" cy="987.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323"
              x="1466.5" y="991.4346">Reader(librdf_world* world, librdf_model* model, std::string format)
        </text>
        <rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1454.5" y="997.8516"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222"
              x="1466.5" y="1005.2705">makeParser(std::string format) : librdf_parser*
        </text>
        <ellipse cx="1457.5" cy="1014.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250"
              x="1466.5" y="1019.1064">fromString(const std::string&amp; rdf_string) : std::string
        </text>
        <ellipse cx="1457.5" cy="1028.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203"
              x="1466.5" y="1032.9424">fromFile(const std::string&amp; filename) : void
        </text>
        <ellipse cx="1457.5" cy="1042.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="357"
              x="1466.5" y="1046.7783">parseNamespacesWithPrefix() : std::unordered_map&lt;const char* , char*&gt;
        </text>
        <ellipse cx="1457.5" cy="1056.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215"
              x="1466.5" y="1060.6143">setBaseUri(const std::string&amp; baseUri) : void
        </text>
        <ellipse cx="1457.5" cy="1070.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177"
              x="1466.5" y="1074.4502">setFormat(const std::string&amp; f) : void
        </text>
        <ellipse cx="1457.5" cy="1083.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320"
              x="1466.5" y="1088.2861">setOption(const std::string&amp; option, const std::string&amp; value) : void
        </text>
        <ellipse cx="1457.5" cy="1097.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122"
              x="1466.5" y="1102.1221">getModelUri() : librdf_model*
        </text>
        <ellipse cx="1457.5" cy="1111.5391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130"
              x="1466.5" y="1115.958">getParser() : librdf_parser*
        </text>
        <ellipse cx="1457.5" cy="1125.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116"
              x="1466.5" y="1129.7939">getBaseUri() : librdf_uri*
        </text>
        <ellipse cx="1457.5" cy="1139.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122"
              x="1466.5" y="1143.6299">getWorld() : librdf_world*
        </text>
        <ellipse cx="1457.5" cy="1153.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159"
              x="1466.5" y="1157.4658">getRaptorWorld() : raptor_world*
        </text>
        <ellipse cx="1457.5" cy="1166.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120"
              x="1466.5" y="1171.3018">getFormat() : std::string&amp;
        </text>
        <ellipse cx="1457.5" cy="1180.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240"
              x="1466.5" y="1185.1377">getValidParserNames() : std::vector&lt;std::string&gt;&amp;
        </text><!--MD5=[4c6f3337fb9f1c95f56d359511b9cac3]
class SemsimCombineArchive-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="89.5078" id="SemsimCombineArchive"
              style="stroke: #A80036; stroke-width: 1.5;" width="506" x="6" y="977.5"/>
        <ellipse cx="186.25" cy="993.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M189.0156,989.375 Q189.1719,989.1563 189.3594,989.0469 Q189.5469,988.9375 189.7656,988.9375 Q190.1406,988.9375 190.375,989.1953 Q190.6094,989.4531 190.6094,990.0625 L190.6094,991.5156 Q190.6094,992.125 190.375,992.3906 Q190.1406,992.6563 189.7656,992.6563 Q189.4219,992.6563 189.2188,992.4531 Q189.0156,992.2656 188.9063,991.75 Q188.8594,991.3906 188.6719,991.2031 Q188.3438,990.8281 187.7344,990.6094 Q187.125,990.3906 186.5,990.3906 Q185.7344,990.3906 185.1016,990.7188 Q184.4688,991.0469 183.9766,991.7969 Q183.4844,992.5469 183.4844,993.5781 L183.4844,994.6719 Q183.4844,995.9063 184.375,996.7266 Q185.2656,997.5469 186.8594,997.5469 Q187.7969,997.5469 188.4531,997.2969 Q188.8438,997.1406 189.2656,996.7031 Q189.5313,996.4375 189.6797,996.3594 Q189.8281,996.2813 190.0313,996.2813 Q190.3594,996.2813 190.6172,996.5391 Q190.875,996.7969 190.875,997.1406 Q190.875,997.4844 190.5313,997.8906 Q190.0313,998.4688 189.2344,998.7969 Q188.1563,999.25 186.8594,999.25 Q185.3438,999.25 184.1406,998.625 Q183.1563,998.125 182.4688,997.0547 Q181.7813,995.9844 181.7813,994.7031 L181.7813,993.5469 Q181.7813,992.2188 182.3984,991.0703 Q183.0156,989.9219 184.1094,989.3047 Q185.2031,988.6875 186.4375,988.6875 Q187.1719,988.6875 187.8203,988.8516 Q188.4688,989.0156 189.0156,989.375 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="137"
              x="206.75" y="998.4102">SemsimCombineArchive
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="511" y1="1009.5" y2="1009.5"/>
        <ellipse cx="17" cy="1020.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202"
              x="26" y="1024.9189">CombineArchive : using CombineArchive::
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="511" y1="1031.3359" y2="1031.3359"/>
        <ellipse cx="17" cy="1042.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="273" x="26" y="1046.7549">fromFile(const std::string&amp; file) :
            SemsimCombineArchive
        </text>
        <ellipse cx="17" cy="1056.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="480" x="26" y="1060.5908">fromUrl(const std::string&amp; url,
            const std::string&amp; output_filename) : omexmeta::SemsimCombineArchive
        </text><!--MD5=[8eeaa74abbf9682858b38bcaff2be6c3]
class OmexMetaUtils-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="117.1797" id="OmexMetaUtils"
              style="stroke: #A80036; stroke-width: 1.5;" width="338" x="547" y="964"/>
        <ellipse cx="675.75" cy="980" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M678.5156,975.875 Q678.6719,975.6563 678.8594,975.5469 Q679.0469,975.4375 679.2656,975.4375 Q679.6406,975.4375 679.875,975.6953 Q680.1094,975.9531 680.1094,976.5625 L680.1094,978.0156 Q680.1094,978.625 679.875,978.8906 Q679.6406,979.1563 679.2656,979.1563 Q678.9219,979.1563 678.7188,978.9531 Q678.5156,978.7656 678.4063,978.25 Q678.3594,977.8906 678.1719,977.7031 Q677.8438,977.3281 677.2344,977.1094 Q676.625,976.8906 676,976.8906 Q675.2344,976.8906 674.6016,977.2188 Q673.9688,977.5469 673.4766,978.2969 Q672.9844,979.0469 672.9844,980.0781 L672.9844,981.1719 Q672.9844,982.4063 673.875,983.2266 Q674.7656,984.0469 676.3594,984.0469 Q677.2969,984.0469 677.9531,983.7969 Q678.3438,983.6406 678.7656,983.2031 Q679.0313,982.9375 679.1797,982.8594 Q679.3281,982.7813 679.5313,982.7813 Q679.8594,982.7813 680.1172,983.0391 Q680.375,983.2969 680.375,983.6406 Q680.375,983.9844 680.0313,984.3906 Q679.5313,984.9688 678.7344,985.2969 Q677.6563,985.75 676.3594,985.75 Q674.8438,985.75 673.6406,985.125 Q672.6563,984.625 671.9688,983.5547 Q671.2813,982.4844 671.2813,981.2031 L671.2813,980.0469 Q671.2813,978.7188 671.8984,977.5703 Q672.5156,976.4219 673.6094,975.8047 Q674.7031,975.1875 675.9375,975.1875 Q676.6719,975.1875 677.3203,975.3516 Q677.9688,975.5156 678.5156,975.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72"
              x="696.25" y="984.9102">OmexMetaUtils
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="548" x2="884" y1="996" y2="996"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="548" x2="884" y1="1004" y2="1004"/>
        <ellipse cx="558" cy="1015" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65"
              x="567" y="1019.4189">OmexMetaUtils()
        </text>
        <ellipse cx="558" cy="1028.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="194" x="567" y="1033.2549">exists(const std::string&amp; filename)
            : bool
        </text>
        <ellipse cx="558" cy="1042.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="208" x="567" y="1047.0908">removeFile(const std::string&amp;
            filename) : int
        </text>
        <ellipse cx="558" cy="1056.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="312" x="567" y="1060.9268">download(const std::string&amp; url,
            const std::string filename) : void
        </text>
        <ellipse cx="558" cy="1070.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs"
              text-decoration="underline" textLength="236" x="567" y="1074.7627">removeIfExists(const std::string&amp;
            filename) : void
        </text><!--MD5=[86cfdc25119a3a20e0664f11a0f5b002]
class Writer-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="241.7031" id="Writer"
              style="stroke: #A80036; stroke-width: 1.5;" width="491" x="920.5" y="901.5"/>
        <ellipse cx="1145.75" cy="917.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M1148.5156,913.375 Q1148.6719,913.1563 1148.8594,913.0469 Q1149.0469,912.9375 1149.2656,912.9375 Q1149.6406,912.9375 1149.875,913.1953 Q1150.1094,913.4531 1150.1094,914.0625 L1150.1094,915.5156 Q1150.1094,916.125 1149.875,916.3906 Q1149.6406,916.6563 1149.2656,916.6563 Q1148.9219,916.6563 1148.7188,916.4531 Q1148.5156,916.2656 1148.4063,915.75 Q1148.3594,915.3906 1148.1719,915.2031 Q1147.8438,914.8281 1147.2344,914.6094 Q1146.625,914.3906 1146,914.3906 Q1145.2344,914.3906 1144.6016,914.7188 Q1143.9688,915.0469 1143.4766,915.7969 Q1142.9844,916.5469 1142.9844,917.5781 L1142.9844,918.6719 Q1142.9844,919.9063 1143.875,920.7266 Q1144.7656,921.5469 1146.3594,921.5469 Q1147.2969,921.5469 1147.9531,921.2969 Q1148.3438,921.1406 1148.7656,920.7031 Q1149.0313,920.4375 1149.1797,920.3594 Q1149.3281,920.2813 1149.5313,920.2813 Q1149.8594,920.2813 1150.1172,920.5391 Q1150.375,920.7969 1150.375,921.1406 Q1150.375,921.4844 1150.0313,921.8906 Q1149.5313,922.4688 1148.7344,922.7969 Q1147.6563,923.25 1146.3594,923.25 Q1144.8438,923.25 1143.6406,922.625 Q1142.6563,922.125 1141.9688,921.0547 Q1141.2813,919.9844 1141.2813,918.7031 L1141.2813,917.5469 Q1141.2813,916.2188 1141.8984,915.0703 Q1142.5156,913.9219 1143.6094,913.3047 Q1144.7031,912.6875 1145.9375,912.6875 Q1146.6719,912.6875 1147.3203,912.8516 Q1147.9688,913.0156 1148.5156,913.375 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="32"
              x="1166.25" y="922.4102">Writer
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="921.5" x2="1410.5" y1="933.5" y2="933.5"/>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="928.5" y="941.5"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105"
              x="940.5" y="948.9189">model_uri_ : librdf_model*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="928.5" y="955.3359"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131"
              x="940.5" y="962.7549">serializer : librdf_serializer*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="928.5" y="969.1719"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103"
              x="940.5" y="976.5908">base_uri_ : librdf_uri*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="928.5" y="983.0078"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105"
              x="940.5" y="990.4268">world_ : librdf_world*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="928.5" y="996.8438"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164"
              x="940.5" y="1004.2627">raptor_world_ptr_ : raptor_world*
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="928.5" y="1010.6797"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88"
              x="940.5" y="1018.0986">format : std::string
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="921.5" x2="1410.5" y1="1024.5156" y2="1024.5156"/>
        <ellipse cx="931.5" cy="1035.5156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="465"
              x="940.5" y="1039.9346">Writer(librdf_world* world_, librdf_model* model_uri_, std::string format, const
            std::string&amp; base_uri_)
        </text>
        <ellipse cx="931.5" cy="1049.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86"
              x="940.5" y="1053.7705">print() : std::string
        </text>
        <ellipse cx="931.5" cy="1063.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="353"
              x="940.5" y="1067.6064">registerNamespace(const std::string&amp; ns, const std::string&amp; prefix) : void
        </text>
        <ellipse cx="931.5" cy="1077.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204"
              x="940.5" y="1081.4424">setFormat(const std::string&amp; format) : void
        </text>
        <ellipse cx="931.5" cy="1090.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320"
              x="940.5" y="1095.2783">setOption(const std::string&amp; option, const std::string&amp; value) : void
        </text>
        <ellipse cx="931.5" cy="1104.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179"
              x="940.5" y="1109.1143">setWorld(librdf_world* world_) : void
        </text>
        <ellipse cx="931.5" cy="1118.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102"
              x="940.5" y="1122.9502">toString() : std::string
        </text>
        <ellipse cx="931.5" cy="1132.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144"
              x="940.5" y="1136.7861">toFile(std::string format) : void
        </text><!--MD5=[559db66c208d2736f857be4b8ed380a2]
class Editor-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="131.0156" id="Editor"
              style="stroke: #A80036; stroke-width: 1.5;" width="199" x="1864.5" y="957"/>
        <ellipse cx="1943.75" cy="973" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M1946.5156,968.875 Q1946.6719,968.6563 1946.8594,968.5469 Q1947.0469,968.4375 1947.2656,968.4375 Q1947.6406,968.4375 1947.875,968.6953 Q1948.1094,968.9531 1948.1094,969.5625 L1948.1094,971.0156 Q1948.1094,971.625 1947.875,971.8906 Q1947.6406,972.1563 1947.2656,972.1563 Q1946.9219,972.1563 1946.7188,971.9531 Q1946.5156,971.7656 1946.4063,971.25 Q1946.3594,970.8906 1946.1719,970.7031 Q1945.8438,970.3281 1945.2344,970.1094 Q1944.625,969.8906 1944,969.8906 Q1943.2344,969.8906 1942.6016,970.2188 Q1941.9688,970.5469 1941.4766,971.2969 Q1940.9844,972.0469 1940.9844,973.0781 L1940.9844,974.1719 Q1940.9844,975.4063 1941.875,976.2266 Q1942.7656,977.0469 1944.3594,977.0469 Q1945.2969,977.0469 1945.9531,976.7969 Q1946.3438,976.6406 1946.7656,976.2031 Q1947.0313,975.9375 1947.1797,975.8594 Q1947.3281,975.7813 1947.5313,975.7813 Q1947.8594,975.7813 1948.1172,976.0391 Q1948.375,976.2969 1948.375,976.6406 Q1948.375,976.9844 1948.0313,977.3906 Q1947.5313,977.9688 1946.7344,978.2969 Q1945.6563,978.75 1944.3594,978.75 Q1942.8438,978.75 1941.6406,978.125 Q1940.6563,977.625 1939.9688,976.5547 Q1939.2813,975.4844 1939.2813,974.2031 L1939.2813,973.0469 Q1939.2813,971.7188 1939.8984,970.5703 Q1940.5156,969.4219 1941.6094,968.8047 Q1942.7031,968.1875 1943.9375,968.1875 Q1944.6719,968.1875 1945.3203,968.3516 Q1945.9688,968.5156 1946.5156,968.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="32"
              x="1964.25" y="977.9102">Editor
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="1865.5" x2="2062.5" y1="989" y2="989"/>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1872.5" y="997"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105"
              x="1884.5" y="1004.4189">metaIdPlacer : MetaId*
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="1865.5" x2="2062.5" y1="1010.8359" y2="1010.8359"/>
        <ellipse cx="1875.5" cy="1021.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173"
              x="1884.5" y="1026.2549">«constructor» Editor(std::string xml)
        </text>
        <rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1872.5" y="1032.6719"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92"
              x="1884.5" y="1040.0908">addMetaIds() : void
        </text>
        <ellipse cx="1875.5" cy="1049.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117"
              x="1884.5" y="1053.9268">getMetaIds() : std::string
        </text>
        <ellipse cx="1875.5" cy="1063.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107"
              x="1884.5" y="1067.7627">addSingleAnnotation() : void
        </text>
        <ellipse cx="1875.5" cy="1077.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125"
              x="1884.5" y="1081.5986">removeAnnotation() : void
        </text>
        <path d="M2098.5,976.5 L2098.5,1018.5 L2063.73,1022.5 L2098.5,1026.5 L2098.5,1068.2578 A0,0 0 0 0 2098.5,1068.2578 L2289.5,1068.2578 A0,0 0 0 0 2289.5,1068.2578 L2289.5,986.5 L2279.5,976.5 L2098.5,976.5 A0,0 0 0 0 2098.5,976.5 "
              fill="#FBFB77" filter="url(#f1pade0lt0jcgx)" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M2279.5,976.5 L2279.5,986.5 L2289.5,986.5 L2279.5,976.5 " fill="#FBFB77"
              style="stroke: #A80036; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="142"
              x="2104.5" y="994.9951">- addMetaIds happens in
        </text>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="69"
              x="2112.5" y="1011.3467">constructor.
        </text>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="170"
              x="2104.5" y="1027.6982">- addSingleAnnotation is overloaded
        </text>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="152"
              x="2112.5" y="1044.0498">method with one signature
        </text>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="129"
              x="2112.5" y="1060.4014">per type of annotation.
        </text>
        <path d="M1835,345.5 L1835,437.2578 A0,0 0 0 0 1835,437.2578 L1960,437.2578 L1964,956.57 L1968,437.2578 L2093,437.2578 A0,0 0 0 0 2093,437.2578 L2093,355.5 L2083,345.5 L1835,345.5 A0,0 0 0 0 1835,345.5 "
              fill="#FBFB77" filter="url(#f1pade0lt0jcgx)" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M2083,345.5 L2083,355.5 L2093,355.5 L2083,345.5 " fill="#FBFB77"
              style="stroke: #A80036; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="151"
              x="1841" y="363.9951">Design choice, overloaded
        </text>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="156"
              x="1841" y="380.3467">addSingleAnnotation method or 5
        </text>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="189"
              x="1841" y="396.6982">methods with descriptive names:
        </text>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="237"
              x="1841" y="413.0498">singular, physicalEntity PhysicalProcess
        </text>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="22"
              x="1841" y="429.4014">etc.
        </text><!--MD5=[cc9f4f616b3bacf1757bab89af969e78]
class KeyGen-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="KeyGen"
              style="stroke: #A80036; stroke-width: 1.5;" width="75" x="3121.5" y="998.5"/>
        <ellipse cx="3136.5" cy="1014.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M3139.2656,1010.375 Q3139.4219,1010.1563 3139.6094,1010.0469 Q3139.7969,1009.9375 3140.0156,1009.9375 Q3140.3906,1009.9375 3140.625,1010.1953 Q3140.8594,1010.4531 3140.8594,1011.0625 L3140.8594,1012.5156 Q3140.8594,1013.125 3140.625,1013.3906 Q3140.3906,1013.6563 3140.0156,1013.6563 Q3139.6719,1013.6563 3139.4688,1013.4531 Q3139.2656,1013.2656 3139.1563,1012.75 Q3139.1094,1012.3906 3138.9219,1012.2031 Q3138.5938,1011.8281 3137.9844,1011.6094 Q3137.375,1011.3906 3136.75,1011.3906 Q3135.9844,1011.3906 3135.3516,1011.7188 Q3134.7188,1012.0469 3134.2266,1012.7969 Q3133.7344,1013.5469 3133.7344,1014.5781 L3133.7344,1015.6719 Q3133.7344,1016.9063 3134.625,1017.7266 Q3135.5156,1018.5469 3137.1094,1018.5469 Q3138.0469,1018.5469 3138.7031,1018.2969 Q3139.0938,1018.1406 3139.5156,1017.7031 Q3139.7813,1017.4375 3139.9297,1017.3594 Q3140.0781,1017.2813 3140.2813,1017.2813 Q3140.6094,1017.2813 3140.8672,1017.5391 Q3141.125,1017.7969 3141.125,1018.1406 Q3141.125,1018.4844 3140.7813,1018.8906 Q3140.2813,1019.4688 3139.4844,1019.7969 Q3138.4063,1020.25 3137.1094,1020.25 Q3135.5938,1020.25 3134.3906,1019.625 Q3133.4063,1019.125 3132.7188,1018.0547 Q3132.0313,1016.9844 3132.0313,1015.7031 L3132.0313,1014.5469 Q3132.0313,1013.2188 3132.6484,1012.0703 Q3133.2656,1010.9219 3134.3594,1010.3047 Q3135.4531,1009.6875 3136.6875,1009.6875 Q3137.4219,1009.6875 3138.0703,1009.8516 Q3138.7188,1010.0156 3139.2656,1010.375 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43"
              x="3150.5" y="1019.4102">KeyGen
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3122.5" x2="3195.5" y1="1030.5" y2="1030.5"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="3122.5" x2="3195.5" y1="1038.5" y2="1038.5"/><!--MD5=[fa5c8d161c371afac71f934c0d6827e5]
class MetaIdAssistant-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="117.1797" id="MetaIdAssistant"
              style="stroke: #A80036; stroke-width: 1.5;" width="416" x="2286" y="333"/>
        <ellipse cx="2446.25" cy="349" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M2449.0156,344.875 Q2449.1719,344.6563 2449.3594,344.5469 Q2449.5469,344.4375 2449.7656,344.4375 Q2450.1406,344.4375 2450.375,344.6953 Q2450.6094,344.9531 2450.6094,345.5625 L2450.6094,347.0156 Q2450.6094,347.625 2450.375,347.8906 Q2450.1406,348.1563 2449.7656,348.1563 Q2449.4219,348.1563 2449.2188,347.9531 Q2449.0156,347.7656 2448.9063,347.25 Q2448.8594,346.8906 2448.6719,346.7031 Q2448.3438,346.3281 2447.7344,346.1094 Q2447.125,345.8906 2446.5,345.8906 Q2445.7344,345.8906 2445.1016,346.2188 Q2444.4688,346.5469 2443.9766,347.2969 Q2443.4844,348.0469 2443.4844,349.0781 L2443.4844,350.1719 Q2443.4844,351.4063 2444.375,352.2266 Q2445.2656,353.0469 2446.8594,353.0469 Q2447.7969,353.0469 2448.4531,352.7969 Q2448.8438,352.6406 2449.2656,352.2031 Q2449.5313,351.9375 2449.6797,351.8594 Q2449.8281,351.7813 2450.0313,351.7813 Q2450.3594,351.7813 2450.6172,352.0391 Q2450.875,352.2969 2450.875,352.6406 Q2450.875,352.9844 2450.5313,353.3906 Q2450.0313,353.9688 2449.2344,354.2969 Q2448.1563,354.75 2446.8594,354.75 Q2445.3438,354.75 2444.1406,354.125 Q2443.1563,353.625 2442.4688,352.5547 Q2441.7813,351.4844 2441.7813,350.2031 L2441.7813,349.0469 Q2441.7813,347.7188 2442.3984,346.5703 Q2443.0156,345.4219 2444.1094,344.8047 Q2445.2031,344.1875 2446.4375,344.1875 Q2447.1719,344.1875 2447.8203,344.3516 Q2448.4688,344.5156 2449.0156,344.875 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="87"
              x="2466.75" y="353.9102">MetaIdAssistant
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="2287" x2="2701" y1="365" y2="365"/>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2294" y="373"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164"
              x="2306" y="380.4189">std::vector&lt;std::string&gt; elements_
        </text>
        <rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2294" y="386.8359"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163"
              x="2306" y="394.2549">metaIdAssistant : MetaIdAssistant
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="2287" x2="2701" y1="400.6719" y2="400.6719"/>
        <ellipse cx="2297" cy="411.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390"
              x="2306" y="416.0908">«constructor» MetaIdAssistant(std::string xml, MetaIdAssistant* metaIdAssistant)
        </text>
        <rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2294" y="422.5078"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92"
              x="2306" y="429.9268">addMetaIds() : void
        </text>
        <ellipse cx="2297" cy="439.3438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117"
              x="2306" y="443.7627">getMetaIds() : std::string
        </text><!--MD5=[f49bb3cccd66355a7bfe15d943ae43e1]
class SBMLMetaIdAssistant-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="SBMLMetaIdAssistant"
              style="stroke: #A80036; stroke-width: 1.5;" width="151" x="2324.5" y="998.5"/>
        <ellipse cx="2339.5" cy="1014.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M2342.2656,1010.375 Q2342.4219,1010.1563 2342.6094,1010.0469 Q2342.7969,1009.9375 2343.0156,1009.9375 Q2343.3906,1009.9375 2343.625,1010.1953 Q2343.8594,1010.4531 2343.8594,1011.0625 L2343.8594,1012.5156 Q2343.8594,1013.125 2343.625,1013.3906 Q2343.3906,1013.6563 2343.0156,1013.6563 Q2342.6719,1013.6563 2342.4688,1013.4531 Q2342.2656,1013.2656 2342.1563,1012.75 Q2342.1094,1012.3906 2341.9219,1012.2031 Q2341.5938,1011.8281 2340.9844,1011.6094 Q2340.375,1011.3906 2339.75,1011.3906 Q2338.9844,1011.3906 2338.3516,1011.7188 Q2337.7188,1012.0469 2337.2266,1012.7969 Q2336.7344,1013.5469 2336.7344,1014.5781 L2336.7344,1015.6719 Q2336.7344,1016.9063 2337.625,1017.7266 Q2338.5156,1018.5469 2340.1094,1018.5469 Q2341.0469,1018.5469 2341.7031,1018.2969 Q2342.0938,1018.1406 2342.5156,1017.7031 Q2342.7813,1017.4375 2342.9297,1017.3594 Q2343.0781,1017.2813 2343.2813,1017.2813 Q2343.6094,1017.2813 2343.8672,1017.5391 Q2344.125,1017.7969 2344.125,1018.1406 Q2344.125,1018.4844 2343.7813,1018.8906 Q2343.2813,1019.4688 2342.4844,1019.7969 Q2341.4063,1020.25 2340.1094,1020.25 Q2338.5938,1020.25 2337.3906,1019.625 Q2336.4063,1019.125 2335.7188,1018.0547 Q2335.0313,1016.9844 2335.0313,1015.7031 L2335.0313,1014.5469 Q2335.0313,1013.2188 2335.6484,1012.0703 Q2336.2656,1010.9219 2337.3594,1010.3047 Q2338.4531,1009.6875 2339.6875,1009.6875 Q2340.4219,1009.6875 2341.0703,1009.8516 Q2341.7188,1010.0156 2342.2656,1010.375 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119"
              x="2353.5" y="1019.4102">SBMLMetaIdAssistant
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="2325.5" x2="2474.5" y1="1030.5" y2="1030.5"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="2325.5" x2="2474.5" y1="1038.5" y2="1038.5"/><!--MD5=[42568045e7ab66d59604b11f33fd171c]
class CellMLMetaIdAssistant-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="CellMLMetaIdAssistant"
              style="stroke: #A80036; stroke-width: 1.5;" width="157" x="2510.5" y="998.5"/>
        <ellipse cx="2525.5" cy="1014.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M2528.2656,1010.375 Q2528.4219,1010.1563 2528.6094,1010.0469 Q2528.7969,1009.9375 2529.0156,1009.9375 Q2529.3906,1009.9375 2529.625,1010.1953 Q2529.8594,1010.4531 2529.8594,1011.0625 L2529.8594,1012.5156 Q2529.8594,1013.125 2529.625,1013.3906 Q2529.3906,1013.6563 2529.0156,1013.6563 Q2528.6719,1013.6563 2528.4688,1013.4531 Q2528.2656,1013.2656 2528.1563,1012.75 Q2528.1094,1012.3906 2527.9219,1012.2031 Q2527.5938,1011.8281 2526.9844,1011.6094 Q2526.375,1011.3906 2525.75,1011.3906 Q2524.9844,1011.3906 2524.3516,1011.7188 Q2523.7188,1012.0469 2523.2266,1012.7969 Q2522.7344,1013.5469 2522.7344,1014.5781 L2522.7344,1015.6719 Q2522.7344,1016.9063 2523.625,1017.7266 Q2524.5156,1018.5469 2526.1094,1018.5469 Q2527.0469,1018.5469 2527.7031,1018.2969 Q2528.0938,1018.1406 2528.5156,1017.7031 Q2528.7813,1017.4375 2528.9297,1017.3594 Q2529.0781,1017.2813 2529.2813,1017.2813 Q2529.6094,1017.2813 2529.8672,1017.5391 Q2530.125,1017.7969 2530.125,1018.1406 Q2530.125,1018.4844 2529.7813,1018.8906 Q2529.2813,1019.4688 2528.4844,1019.7969 Q2527.4063,1020.25 2526.1094,1020.25 Q2524.5938,1020.25 2523.3906,1019.625 Q2522.4063,1019.125 2521.7188,1018.0547 Q2521.0313,1016.9844 2521.0313,1015.7031 L2521.0313,1014.5469 Q2521.0313,1013.2188 2521.6484,1012.0703 Q2522.2656,1010.9219 2523.3594,1010.3047 Q2524.4531,1009.6875 2525.6875,1009.6875 Q2526.4219,1009.6875 2527.0703,1009.8516 Q2527.7188,1010.0156 2528.2656,1010.375 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="125"
              x="2539.5" y="1019.4102">CellMLMetaIdAssistant
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="2511.5" x2="2666.5" y1="1030.5" y2="1030.5"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="2511.5" x2="2666.5" y1="1038.5" y2="1038.5"/>
        <path d="M2737.5,354 L2737.5,387.5 L2702.21,391.5 L2737.5,395.5 L2737.5,429.4063 A0,0 0 0 0 2737.5,429.4063 L2956.5,429.4063 A0,0 0 0 0 2956.5,429.4063 L2956.5,364 L2946.5,354 L2737.5,354 A0,0 0 0 0 2737.5,354 "
              fill="#FBFB77" filter="url(#f1pade0lt0jcgx)" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M2946.5,354 L2946.5,364 L2956.5,364 L2946.5,354 " fill="#FBFB77"
              style="stroke: #A80036; stroke-width: 1.0;"/>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="160"
              x="2743.5" y="372.4951">Subclasses only implement
        </text>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="129"
              x="2743.5" y="388.8467">new elements_ vector.
        </text>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="175"
              x="2743.5" y="405.1982">Directly uses lxml to minimize
        </text>
        <text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="198"
              x="2743.5" y="421.5498">dependencies on libsbml/libcellml.
        </text><!--MD5=[56852745c768f25acacadd45218cef10]
class CombineArchive-->
        <rect fill="#FEFECE" filter="url(#f1pade0lt0jcgx)" height="48" id="CombineArchive"
              style="stroke: #A80036; stroke-width: 1.5;" width="122" x="198" y="367.5"/>
        <ellipse cx="213" cy="383.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/>
        <path d="M215.7656,379.375 Q215.9219,379.1563 216.1094,379.0469 Q216.2969,378.9375 216.5156,378.9375 Q216.8906,378.9375 217.125,379.1953 Q217.3594,379.4531 217.3594,380.0625 L217.3594,381.5156 Q217.3594,382.125 217.125,382.3906 Q216.8906,382.6563 216.5156,382.6563 Q216.1719,382.6563 215.9688,382.4531 Q215.7656,382.2656 215.6563,381.75 Q215.6094,381.3906 215.4219,381.2031 Q215.0938,380.8281 214.4844,380.6094 Q213.875,380.3906 213.25,380.3906 Q212.4844,380.3906 211.8516,380.7188 Q211.2188,381.0469 210.7266,381.7969 Q210.2344,382.5469 210.2344,383.5781 L210.2344,384.6719 Q210.2344,385.9063 211.125,386.7266 Q212.0156,387.5469 213.6094,387.5469 Q214.5469,387.5469 215.2031,387.2969 Q215.5938,387.1406 216.0156,386.7031 Q216.2813,386.4375 216.4297,386.3594 Q216.5781,386.2813 216.7813,386.2813 Q217.1094,386.2813 217.3672,386.5391 Q217.625,386.7969 217.625,387.1406 Q217.625,387.4844 217.2813,387.8906 Q216.7813,388.4688 215.9844,388.7969 Q214.9063,389.25 213.6094,389.25 Q212.0938,389.25 210.8906,388.625 Q209.9063,388.125 209.2188,387.0547 Q208.5313,385.9844 208.5313,384.7031 L208.5313,383.5469 Q208.5313,382.2188 209.1484,381.0703 Q209.7656,379.9219 210.8594,379.3047 Q211.9531,378.6875 213.1875,378.6875 Q213.9219,378.6875 214.5703,378.8516 Q215.2188,379.0156 215.7656,379.375 Z "/>
        <text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90"
              x="227" y="388.4102">CombineArchive
        </text>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="199" x2="319" y1="399.5" y2="399.5"/>
        <line style="stroke: #A80036; stroke-width: 1.5;" x1="199" x2="319" y1="407.5" y2="407.5"/><!--MD5=[920f829c300f0ae8e7bed0edd0962bde]
reverse link IRDF to Triple--><path d="M4394.55,442.64 C4384.79,597.01 4362.08,1062.515 4433,1192 C4468,1255.901 4529,1306.194 4589.17,1343.415 " fill="none" id="IRDF&lt;-Triple" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4387.57,442.09,4395.86,422.59,4401.54,443,4387.57,442.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f398b041ddf8a7f2265c067547c66cb8]
reverse link IRDF to ListOfTriples--><path d="M4406.28,442.57 C4427.48,570.77 4483.09,907.16 4498.18,998.39 " fill="none" id="IRDF&lt;-ListOfTriples" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4399.37,443.71,4403.02,422.84,4413.18,441.43,4399.37,443.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5dd42e91161f2d63d6a41a444b2cbf3f]
reverse link IRDF to SingularAnnotation--><path d="M4395.23,442.84 C4383.42,657.51 4337.5,1492.337 4329.27,1641.971 " fill="none" id="IRDF&lt;-SingularAnnotation" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4388.25,442.29,4396.34,422.7,4402.23,443.05,4388.25,442.29" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[39171f6c44be50d3fd8e6ef9a03d0967]
link ListOfTriples to Triple--><path d="M4508.98,1046.615 C4519.62,1080.085 4541.79,1143.354 4571,1192 C4585.93,1216.871 4603.42,1241.847 4621.66,1265.721 " fill="none" id="ListOfTriples-&gt;Triple" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4624.84,1269.853,4622.5371,1260.2772,4621.7972,1265.8854,4616.189,1265.1456,4624.84,1269.853" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[848da78ca757c817d883dc16b1ab0063]
reverse link Subject to Triple--><path d="M4772.08,1100.375 C4770.89,1148.373 4769.3,1211.873 4767.85,1269.94 " fill="none" id="Subject&lt;-Triple" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4772.21,1095.191,4767.9876,1104.0888,4772.0858,1100.1895,4775.9851,1104.2876,4772.21,1095.191" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ebe945fa2670b5bb38f4f06f89f500ee]
reverse link Predicate to Triple--><path d="M5102.7,1105.674 C5052.48,1152.954 4987.73,1213.903 4928.32,1269.826 " fill="none" id="Predicate&lt;-Triple" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5106.6,1102.007,5097.3054,1105.2643,5102.9597,1105.4345,5102.7894,1111.0888,5106.6,1102.007" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9315d82e453b838ec3ef847af8999d5e]
reverse link Resource to Triple--><path d="M5472.74,1146.748 C5450.2,1163.176 5426.55,1178.857 5403,1192 C5254.56,1274.857 5070.93,1338.065 4938.67,1377.512 " fill="none" id="Resource&lt;-Triple" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5476.94,1143.673,5467.3168,1145.7692,5472.9078,1146.6296,5472.0474,1152.2207,5476.94,1143.673" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[00b0bbe5972f4eec2cdb0177d3ad25e1]
reverse link ControlledVocabulary to BiomodelsBiologyQualifier--><path d="M4025,567.59 C4025,711.48 4025,904.19 4025,984.23 " fill="none" id="ControlledVocabulary&lt;-BiomodelsBiologyQualifier" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4018,567.18,4025,547.18,4032,567.18,4018,567.18" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[731f18e9b4c431563528285376e43efb]
reverse link Resource to ResourceUrl--><path d="M5590.53,1163.405 C5574.56,1251.122 5555.49,1355.916 5547.19,1401.469 " fill="none" id="Resource&lt;-ResourceUrl" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5583.68,1161.964,5594.15,1143.542,5597.45,1164.472,5583.68,1161.964" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5d54d5b14e07f2e17008693f68d75b47]
reverse link Resource to ResourceLiteral--><path d="M5641.47,1163.405 C5657.44,1251.122 5676.51,1355.916 5684.81,1401.469 " fill="none" id="Resource&lt;-ResourceLiteral" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="5634.55,1164.472,5637.85,1143.542,5648.32,1161.964,5634.55,1164.472" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[98e266842c3e48f15a046e7d19679034]
reverse link Uri to Subject--><path d="M4774,780.24 C4774,845.11 4774,905.58 4774,949.75 " fill="none" id="Uri&lt;-Subject" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4774,775.16,4770,784.16,4774,780.16,4778,784.16,4774,775.16" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[421c2439504af32964c21a0fb04c2d46]
reverse link Triple to PhysicalProperty--><path d="M4913.62,1585.096 C4934.43,1607.151 4953.32,1627.183 4966.99,1641.674 " fill="none" id="Triple&lt;-PhysicalProperty" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4909.99,1581.249,4913.2676,1590.5365,4913.4255,1584.8818,4919.0801,1585.0397,4909.99,1581.249" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9c3cfe43e3959c3eefbfc6024f9a6b93]
reverse link Triple to PropertyBearer--><path d="M4761.99,1586.461 C4761.72,1607.976 4761.47,1627.483 4761.29,1641.674 " fill="none" id="Triple&lt;-PropertyBearer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4762.05,1581.249,4757.9372,1590.198,4761.9871,1586.2486,4765.9366,1590.2986,4762.05,1581.249" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4adce2440d7652f159decf9b01f1fc86]
reverse link PropertyBearer to PhysicalEntity--><path d="M4761,1710.578 C4761,1724.362 4761,1739.057 4761,1750.828 " fill="none" id="PropertyBearer&lt;-PhysicalEntity" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4754,1710.217,4761,1690.217,4768,1710.217,4754,1710.217" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7dca2b3106ae71f2237057a7746b8189]
reverse link PropertyBearer to PhysicalProcess--><path d="M4810.22,1701.88 C4832.87,1717.93 4859.13,1736.535 4879.3,1750.828 " fill="none" id="PropertyBearer&lt;-PhysicalProcess" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4806.04,1707.492,4793.76,1690.217,4814.13,1696.069,4806.04,1707.492" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3667d7479206c11e3e0291397464a5e6]
reverse link PropertyBearer to EnergyDiff--><path d="M4684.35,1692.235 C4624.81,1711.837 4543.71,1738.54 4490.62,1756.018 " fill="none" id="PropertyBearer&lt;-EnergyDiff" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4682.46,1685.489,4703.64,1685.883,4686.84,1698.787,4682.46,1685.489" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[37dd7075e4eea84115a04dfaaa8b9804]
reverse link PropertyBearer to PhysicalDependency--><path d="M4708.91,1701.408 C4684.44,1717.565 4655.93,1736.395 4634.08,1750.828 " fill="none" id="PropertyBearer&lt;-PhysicalDependency" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4705.3,1695.399,4725.85,1690.217,4713.02,1707.081,4705.3,1695.399" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d14c96fd2506c0979f1476f48aa34f9b]
link SingularAnnotation to Annotation--><path d="M4328.78,1690.053 C4330.88,1718.575 4338.29,1767.247 4364,1799 C4389.12,1830.024 4428.74,1850.809 4462.62,1863.942 " fill="none" id="SingularAnnotation-&gt;Annotation" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4465.3,1857.466,4481.76,1870.81,4460.57,1870.643,4465.3,1857.466" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e1ddfe6ef85240fcb09b546a7aadca5c]
link CompositeAnnotation to Annotation--><path d="M5009.47,1795.107 C5003.57,1796.469 4997.69,1797.783 4992,1799 C4850,1829.354 4682.05,1857.892 4591.93,1872.613 " fill="none" id="CompositeAnnotation-&gt;Annotation" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="4592.94,1879.541,4572.08,1875.838,4590.69,1865.722,4592.94,1879.541" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[36279575142f99ec0a74e3b418bc6072]
reverse link Triple to SingularAnnotation--><path d="M4584.78,1524.534 C4505.93,1567.669 4420.08,1614.631 4370.31,1641.854 " fill="none" id="Triple&lt;-SingularAnnotation" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4589.49,1521.961,4579.6746,1522.7725,4585.1038,1524.3613,4583.5151,1529.7904,4589.49,1521.961" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7c7017ecf8e1a17e73c1e918074ed72e]
reverse link PropertyBearer to CompositeAnnotation--><path d="M4823.08,1687.502 C4877.99,1705.634 4958.01,1732.063 5015.14,1750.929 " fill="none" id="PropertyBearer&lt;-CompositeAnnotation" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4818.18,1685.883,4825.4676,1692.508,4822.9268,1687.4539,4827.981,1684.9131,4818.18,1685.883" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b7b5e6016eb31463fb5b0b2ef2da2ca1]
reverse link PhysicalProperty to CompositeAnnotation--><path d="M5013.31,1694.099 C5029.02,1711.609 5049.25,1734.153 5064.21,1750.828 " fill="none" id="PhysicalProperty&lt;-CompositeAnnotation" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="5009.83,1690.217,5012.8735,1699.5838,5013.1732,1693.9349,5018.8222,1694.2346,5009.83,1690.217" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[1bc727df80fdadd0b5ec81d3be961f3b]
reverse link Annotation to ListOfAnnotations--><path d="M4527,1913.433 C4527,1930.7415 4527,1952.5734 4527,1968.8279 " fill="none" id="Annotation&lt;-ListOfAnnotations" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="4527,1908.217,4523,1917.217,4527,1913.217,4531,1917.217,4527,1908.217" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[670ddab9a3e3aba99cad56035c005c44]
reverse link MetaIdAssistant to SBMLMetaIdAssistant--><path d="M2482.38,470.26 C2460.94,613.72 2416.19,913.17 2403.45,998.41 " fill="none" id="MetaIdAssistant&lt;-SBMLMetaIdAssistant" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2475.49,469.01,2485.37,450.27,2489.33,471.08,2475.49,469.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5b8dce6108f5b5a7d9753024bf0764a3]
reverse link MetaIdAssistant to CellMLMetaIdAssistant--><path d="M2505.74,470.26 C2527.41,613.72 2572.64,913.17 2585.51,998.41 " fill="none" id="MetaIdAssistant&lt;-CellMLMetaIdAssistant" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2498.79,471.09,2502.72,450.27,2512.63,469,2498.79,471.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[02b4a288ce6e548d39df82d7def6848e]
reverse link RDF to Writer--><path d="M1166,692.26 C1166,766.32 1166,841.48 1166,901.25 " fill="none" id="RDF&lt;-Writer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1166,678.93,1162,684.93,1166,690.93,1170,684.93,1166,678.93" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="1167" y="819.4951">aggregation</text><!--MD5=[3e75a076fba04e7781cd357ff71a17d8]
reverse link RDF to Reader--><path d="M1388.8,689.4 C1430.92,745.54 1473.61,802.43 1511.47,852.88 " fill="none" id="RDF&lt;-Reader" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1380.94,678.93,1381.34,686.13,1388.14,688.53,1387.74,681.33,1380.94,678.93" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="1487" y="819.4951">aggregation</text><!--MD5=[900fe02fcbbffcd0852a468e2d78a834]
reverse link RDF to Editor--><path d="M1431.58,540.18 C1565.03,621.96 1724.04,731.55 1847,853 C1878.04,883.66 1906.16,923.56 1927.05,956.84 " fill="none" id="RDF&lt;-Editor" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1420.39,533.35,1423.429,539.8895,1430.6343,539.5994,1427.5953,533.0599,1420.39,533.35" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="1817" y="819.4951">aggregation</text><!--MD5=[876ab017321b4c309978a04aee43b830]
reverse link RDF to OmexMetaUtils--><path d="M953.412,689.65 C878.897,793.81 802.561,900.51 757.228,963.87 " fill="none" id="RDF&lt;-OmexMetaUtils" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="961.081,678.93,954.3378,681.4853,954.103,688.6926,960.8462,686.1373,961.081,678.93" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="70" x="863" y="819.4951">composition</text><!--MD5=[d36ee6a3c3cdd5512a296b8a5d40d8df]
reverse link RDF to SemsimCombineArchive--><path d="M901.157,576.17 C701.005,714.97 441.19,895.15 322.805,977.25 " fill="none" id="RDF&lt;-SemsimCombineArchive" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="911.842,568.76,904.6322,568.8953,901.984,575.6025,909.1938,575.4673,911.842,568.76" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="554" y="819.4951">Composition</text><!--MD5=[b3bf4fafee2fb641b8af7e7efe2ebe53]
reverse link OmexMetaUtils to CurlGet--><path d="M716,1094.44 C716,1177.111 716,1311.183 716,1380.252 " fill="none" id="OmexMetaUtils&lt;-CurlGet" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="716,1081.381,712,1087.381,716,1093.381,720,1087.381,716,1081.381" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="72" x="717" y="1236.4951">Composition</text><!--MD5=[daf2b4d5ab0f6e7055c6dc1cfeddabcf]
reverse link CombineArchive to SemsimCombineArchive--><path d="M259,435.85 C259,550.56 259,861.2 259,977.1 " fill="none" id="CombineArchive&lt;-SemsimCombineArchive" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="252,435.63,259,415.63,266,435.63,252,435.63" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="56" x="260" y="819.4951">extension</text><!--MD5=[e7e540cf1c686691bddbee13ee4317bc]
link PredicateNamespaces to RaptorUtils--><!--MD5=[dce6774b9d398d7155d46117f7058058]
link PredicateNamespaces to KeyGen--><!--MD5=[83a350ef1ccdf71b537e9c50985fc42d]
@startuml






class BiomodelsBiologyQualifier {
    +BiomodelsBiologyQualifier(const std::string& qualifier)
    #setValidTerms() : void
}


class ControlledVocabulary {
    +ControlledVocabulary()
    +ControlledVocabulary(std::string qualifier)
    +getUri() : Uri 
    +operator!=(const ControlledVocabulary& rhs) : bool 
    +operator==(const ControlledVocabulary& rhs) : bool 
    +operator<<(std::ostream& os, const ControlledVocabulary& vocabulary) : std : : ostream&
    +make_shared() : std::shared_ptr<ControlledVocabulary>
    -prefix_ : std::string
    -qualifier : std::string
    -root : std::string
    +getPrefix() : std::string&
    +getTerm() : std::string&
    +getRoot() : std::string& 
    #valid_terms : std::vector<std::string>
    +getValidTerms() : std::vector<std::string>& 
    +setPrefix(const std::string& cvNamespace) : void
    +setRoot(const std::string& root) : void
    #setValidTerms() : void
    #verify() : void
}


abstract class IRDF {
+{abstract} serialize(std::string format) : std::string
}

class Predicate {
    +Predicate()
    +Predicate(const std::shared_ptr<ControlledVocabulary>& term)
    +getUri() : Uri 
    +operator!=(const Predicate& rhs) : bool 
    +operator==(const Predicate& rhs) : bool 
    +operator<<(std::ostream& os, const Predicate& predicate) : std : : ostream&
    -term : std::shared_ptr<ControlledVocabulary>
    +getTerm() : std::shared_ptr<ControlledVocabulary>& 
}

class PredicateNamespaces {
    +PredicateNamespaces()
    +{static} getNamespaces() : std::unordered_map<std::string , std::string>
}


class RaptorUtils {
    +{static} raptorUriToTerm(raptor_world* world, raptor_uri* uri) : raptor_term*
    +{static} raptorStringToUri(raptor_world* world, const unsigned char* str) : raptor_uri*
    +{static} raptorUriToString(raptor_uri* u) : std::string
    +{static} raptorTermToString(raptor_term* term) : unsigned char*
}

class Resource {
    +Resource()
    +Resource(std::string resourceNamespace, std::string identifier)
    +Resource(std::string resource)
    +operator!=(const Resource& rhs) : bool 
    +operator==(const Resource& rhs) : bool 
    +operator<<(std::ostream& os, const Resource& resource) : std : : ostream&
    +docs-build() : std::string
    -identifier : std::string
    -identifiers_base : std::string
    -resource_namespace : std::string
    +getIdentifier() : std::string& 
    +getIdentifiersBase() : std::string& 
    +getResourceNamespace() : std::string& 
    +{static} splitStringBy(std::string str, char delimiter) : std::vector<std::string>
}


class Subject {
    +Subject()
    +Subject(std::string metaId)
    +operator!=(const Subject& rhs) : bool 
    +operator==(const Subject& rhs) : bool 
    +operator<<(std::ostream& os, const Subject& subject) : std : : ostream&
    -metaId : std::string
    +getMetaId() : std::string& 
}

class Triple {
    +Triple(Subject subject, Predicate predicate, Resource resource)
    +Triple()
    +Triple(const Triple& triple)
    +Triple(Triple&& triple)
    +~Triple()
    -predicate : Predicate
    +getPredicate() : Predicate& 
    -resource : Resource
    +getResource() : Resource& 
    -subject : Subject
    +getSubject() : Subject& 
    +operator=(const Triple& triple) : Triple&
    +operator=(Triple&& triple) : Triple&
    +operator!=(const Triple& rhs) : bool 
    +operator==(const Triple& rhs) : bool 
    +operator<<(std::ostream& os, const Triple& triple) : std : : ostream&
    +serialize(std::string format) : std::string
    +{static} from_xml(std::string xml) : void
    -{static} parseTriple(void* user_data, raptor_statement* raptor_triple) : void
}


class Uri {
    +Uri()
    +Uri(const Uri& url)
    +Uri(Uri&& url) noexcept: m_ip_v(-1)
    +Uri(std::string url_str)
    +query(size_t i) : KeyVal&
    +set_query(size_t i) : KeyVal&
    +query() : Query&
    +set_query() : Query&
    +add_query(KeyVal& kv) : Uri&
    +add_query(std::string& key, std::string& val) : Uri&
    +add_query(std::string& key) : Uri&
    +clear() : Uri&
    +fragment(const std::string& f) : Uri&
    +host(const std::string& h, uint8_t ip_v) : Uri&
    +operator=(std::string& url_str) : Uri&
    +operator=(const Uri& url) : Uri&
    +operator=(Uri&& url) : Uri&
    +path(const std::string& str) : Uri&
    +port(const std::string& str) : Uri&
    +port(std::uint16_t num) : Uri&
    +scheme(const std::string& s) : Uri&
    +set_query(Query& q) : Uri&
    +str(std::string& url_str) : Uri&
    +user_info(const std::string& s) : Uri&
    +operator!=(const Uri& rhs) : bool 
    +operator==(const Uri& rhs) : bool 
    -m_query : mutable Query
    -m_ip_v : mutable std::int8_t
    -m_fragment : mutable std::string
    -m_host : mutable std::string
    -m_path : mutable std::string
    -m_port : mutable std::string
    -m_scheme : mutable std::string
    -m_url : mutable std::string
    -m_user : mutable std::string
    +operator<<(std::ostream& os, const Uri& uri) : std : : ostream&
    +ip_version() : std::int8_t
    +output(std::ostream& o) : std::ostream& 
    +end() : std::string
    +pruneEnd() : std::string
    +str() : std::string 
    +fragment() : std::string&
    +host() : std::string&
    +path() : std::string&
    +port() : std::string&
    +scheme() : std::string& 
    +user_info() : std::string&
    -assign(const Uri& url) : void
    -assign(Uri&& url) : void
    -build_url() : void 
    -lazy_parse() : void 
    -parse_url() : void 
}



IRDF <|- - Triple
IRDF <|- - ListOfTriples
IRDF <|- - SingularAnnotation
ListOfTriples - -> Triple

Subject <- - Triple
Predicate <- - Triple
Resource <- - Triple
ControlledVocabulary <|- - BiomodelsBiologyQualifier
Resource <|- - ResourceUrl
Resource <|- - ResourceLiteral

Uri <- - Subject
Triple <- - PhysicalProperty
Triple <- - PropertyBearer
PropertyBearer <|- - PhysicalEntity
PropertyBearer <|- - PhysicalProcess
PropertyBearer <|- - EnergyDiff
PropertyBearer <|- - PhysicalDependency

SingularAnnotation - -|> Annotation
CompositeAnnotation - -|> Annotation
Triple <- - SingularAnnotation

PropertyBearer <- - CompositeAnnotation
PhysicalProperty <- - CompositeAnnotation

Annotation <- - ListOfAnnotations

class CurlGet {
    +CurlGet()
    +{static} download(const std::string& url, const std::string& output_filename) : int
    -{static} curlWriteCallback(void* data, size_t size, size_t nmemb, void* userp) : size_t
}


class RDF {
    +RDF()
    +RDF(librdf_world* world, raptor_world* raptor_world_, librdf_storage* storage, librdf_model* model)
    +RDF(const RDF& libRdfModel)
    +RDF(RDF&& libRdfModel)
    +~RDF()
    +operator=(const RDF& libRdfModel) : RDF&
    +operator=(RDF&& libRdfModel) : RDF&
    +operator!=(const RDF& rhs) : bool
    +operator==(const RDF& rhs) : bool
    -model_ : librdf_model*
    -storage_ : librdf_storage*
    -world_ : librdf_world*
    -raptor_world_ : raptor_world*
    -makeWriter(const std::string& format, const std::string& base_uri_) : omexmeta::Writer
    -namespaces_ : std::unordered_map<const char*, const char*>
    +{static} init() : LibRDFObjectsTuple
    +{static} fromOmex(std::string filename_or_url) : RDF
    +{static} fromFile(std::string filename) : RDF
    +{static} fromUrl(std::string url) : RDF
    +{static} listOptions() : std::ostringstream
    +addStatement(std::string subject, std::string predicate, std::string resource) : void
    +propagateNamespacesFromParser() : void
    +{static} fromXML(const std::string& filename, std::string format) : omexmeta::RDF
    +{static} fromString(const std::string& str, std::string format) : void
    +toFile(std::string format) : void
    +toString(std::string format, std::string base_uri_) : std::string
    +toEditor() : Editor
    +getModel() : librdf_model*
    +getStorage() : librdf_storage*
    +getWorld() : librdf_world*
    +getRaptorWorld() : raptor_world*
    +getNamespaces() : std::unordered_map<const char* , char*>&
    +setModel(librdf_model* model) : void
    +setNamespaces(const std::unordered_map<const char*, const char*>& namespaces) : void
    +setOption() : void
    +setRaptorWorld(raptor_world* raptorWorldPtr) : void
    +setStorage(librdf_storage* storage) : void
    +setWorld(librdf_world* world) : void
}

class Reader {
    +Reader(librdf_world* world, librdf_model* model, std::string format)
    -model_ : librdf_model*
    -parser_ : librdf_parser*
    -base_uri_ : librdf_uri*
    -world_ : librdf_world*
    -raptor_world_ptr_ : raptor_world*
    -format_ : std::string
    -makeParser(std::string format) : librdf_parser*
    +fromString(const std::string& rdf_string) : std::string
    +fromFile(const std::string& filename) : void
    +parseNamespacesWithPrefix() : std::unordered_map<const char* , char*>
    +setBaseUri(const std::string& baseUri) : void
    +setFormat(const std::string& f) : void
    +setOption(const std::string& option, const std::string& value) : void
    +getModel() : librdf_model*
    +getParser() : librdf_parser*
    +getBaseUri() : librdf_uri*
    +getWorld() : librdf_world* 
    +getRaptorWorld() : raptor_world*
    +getFormat() : std::string&
    +getValidParserNames() : std::vector<std::string>&
}

class SemsimCombineArchive {
    +{static} fromFile(const std::string& file) : SemsimCombineArchive
    +{static} fromUrl(const std::string& url, const std::string& output_filename) : omexmeta::SemsimCombineArchive
    +CombineArchive : using CombineArchive::
}

class OmexMetaUtils {
    +OmexMetaUtils()
    +{static} exists(const std::string& filename) : bool
    +{static} removeFile(const std::string& filename) : int
    +{static} download(const std::string& url, const std::string filename) : void
    +{static} removeIfExists(const std::string& filename) : void
}

class Writer {
    +Writer(librdf_world* world_, librdf_model* model_, std::string format, const std::string& base_uri_)
    -model_ : librdf_model*
    -serializer : librdf_serializer*
    -base_uri_ : librdf_uri*
    -world_ : librdf_world*
    -raptor_world_ptr_ : raptor_world*
    -format : std::string
    +print() : std::string
    +registerNamespace(const std::string& ns, const std::string& prefix) : void
    +setFormat(const std::string& format) : void
    +setOption(const std::string& option, const std::string& value) : void
    +setWorld(librdf_world* world_) : void
    +toString() : std::string
    +toFile(std::string format) : void
}

class Editor {
    - metaIdPlacer : MetaId*
    + <<constructor>> Editor(std::string xml)
    - addMetaIds() : void
    + getMetaIds() : std::string
    + addPhysicalEntityAnnotation() : void
    + removeAnnotation() : void
}
note right of Editor
    - addMetaIds happens in
      constructor.
    - addSingleAnnotation is overloaded
      method with one signature
      per type of annotation.
end note

note top of Editor
    Design choice, overloaded
    addSingleAnnotation method or 5
    methods with descriptive names:
    singular, physicalEntity PhysicalProcess
    etc.
end note

class KeyGen {}

class MetaIdAssistant {
    - std::vector<std::string> elements_
    - metaIdAssistant : MetaIdAssistant
    + <<constructor>> MetaIdAssistant(std::string xml, MetaIdAssistant* metaIdAssistant)
    - addMetaIds() : void
    + getMetaIds() : std::string
}

class SBMLMetaIdAssistant {}

class CellMLMetaIdAssistant {}

MetaIdAssistant <|- - SBMLMetaIdAssistant
MetaIdAssistant <|- - CellMLMetaIdAssistant

note right of MetaIdAssistant
    Subclasses only implement
    new elements_ vector.
    Directly uses lxml to minimize
    dependencies on libsbml/libcellml.
end note

RDF o- - Writer : aggregation
RDF o- - Reader : aggregation
RDF o- - Editor : aggregation
RDF *- - OmexMetaUtils: composition
RDF *- - SemsimCombineArchive : Composition
OmexMetaUtils *- - CurlGet: Composition


CombineArchive <|- - SemsimCombineArchive :extension







@enduml

PlantUML version 1.2020.05(Thu Mar 19 21:17:32 GMT 2020)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) Client VM
Java Version: 1.8.0_241-b07
Operating System: Windows 10
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>