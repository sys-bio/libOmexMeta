<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="RefCountedRedlandType_8h" kind="file" language="C++">
    <compoundname>RefCountedRedlandType.h</compoundname>
    <includes refid="RedlandType_8h" local="yes">RedlandType.h</includes>
    <includes refid="librdf_8h" local="yes">librdf.h</includes>
    <includes refid="raptor2_8h" local="yes">raptor2.h</includes>
    <includes refid="rasqal_8h" local="yes">rasqal.h</includes>
    <includes local="yes">rdf_uri_internal.h</includes>
    <includes refid="LibrdfWorld_8h" local="yes">redland/LibrdfWorld.h</includes>
    <includes local="no">variant</includes>
    <includedby refid="LibrdfNode_8h" local="yes">src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h</includedby>
    <includedby refid="LibrdfQuery_8h" local="yes">src/redland/RedlandWrapper/src/include/redland/LibrdfQuery.h</includedby>
    <includedby refid="LibrdfStream_8h" local="yes">src/redland/RedlandWrapper/src/include/redland/LibrdfStream.h</includedby>
    <includedby refid="LibrdfUri_8h" local="yes">src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h</includedby>
    <includedby refid="RedlandAPI_8h" local="yes">src/redland/RedlandWrapper/src/include/redland/RedlandAPI.h</includedby>
    <incdepgraph>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="31">
        <label>functional</label>
      </node>
      <node id="10">
        <label>rasqal.h</label>
        <link refid="rasqal_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>filesystem</label>
      </node>
      <node id="14">
        <label>rdf_init.h</label>
      </node>
      <node id="38">
        <label>variant</label>
      </node>
      <node id="25">
        <label>rdf_stream.h</label>
      </node>
      <node id="17">
        <label>rdf_node.h</label>
      </node>
      <node id="21">
        <label>rdf_storage.h</label>
      </node>
      <node id="26">
        <label>rdf_query.h</label>
      </node>
      <node id="37">
        <label>string</label>
      </node>
      <node id="34">
        <label>redland/Logger.h</label>
        <link refid="Logger_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>rdf_iterator.h</label>
      </node>
      <node id="30">
        <label>regex</label>
      </node>
      <node id="33">
        <label>exception</label>
      </node>
      <node id="23">
        <label>rdf_raptor.h</label>
      </node>
      <node id="22">
        <label>rdf_parser.h</label>
      </node>
      <node id="32">
        <label>redland/LibrdfException.h</label>
        <link refid="LibrdfException_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="9">
        <label>redland_export.h</label>
      </node>
      <node id="20">
        <label>rdf_model.h</label>
      </node>
      <node id="39">
        <label>rdf_uri_internal.h</label>
      </node>
      <node id="18">
        <label>rdf_concepts.h</label>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
      <node id="2">
        <label>RedlandType.h</label>
        <link refid="RedlandType_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>rdf_hash.h</label>
      </node>
      <node id="16">
        <label>rdf_uri.h</label>
      </node>
      <node id="6">
        <label>raptor2.h</label>
        <link refid="raptor2_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>src/redland/RedlandWrapper/src/include/redland/RefCountedRedlandType.h</label>
        <link refid="RefCountedRedlandType_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rdf_log.h</label>
      </node>
      <node id="19">
        <label>rdf_statement.h</label>
      </node>
      <node id="24">
        <label>rdf_serializer.h</label>
      </node>
      <node id="27">
        <label>rdf_utf8.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>librdf.h</label>
        <link refid="librdf_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>rdf_digest.h</label>
      </node>
      <node id="4">
        <label>redland/LibrdfWorld.h</label>
        <link refid="LibrdfWorld_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="34">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfQueryResults.h</label>
        <link refid="LibrdfQueryResults_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/omexmeta/include/omexmeta/Triples.h</label>
        <link refid="Triples_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfQuery.h</label>
        <link refid="LibrdfQuery_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/omexmeta/include/omexmeta/Query.h</label>
        <link refid="Query_8h_source"/>
      </node>
      <node id="7">
        <label>src/omexmeta/include/omexmeta/RDF.h</label>
        <link refid="RDF_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/omexmeta/include/omexmeta/SBMLSemanticExtraction.h</label>
        <link refid="SBMLSemanticExtraction_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfStream.h</label>
        <link refid="LibrdfStream_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfModel.h</label>
        <link refid="LibrdfModel_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/omexmeta/include/omexmeta/Triple.h</label>
        <link refid="Triple_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfStatement.h</label>
        <link refid="LibrdfStatement_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/omexmeta/include/omexmeta/PhysicalEntity.h</label>
        <link refid="PhysicalEntity_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>src/omexmeta/include/omexmeta/OmexMetaUtils.h</label>
        <link refid="OmexMetaUtils_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/omexmeta/include/omexmeta/IRDF.h</label>
        <link refid="IRDF_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/omexmeta/include/omexmeta/EnergyDiff.h</label>
        <link refid="EnergyDiff_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/omexmeta/include/omexmeta/PropertyBearer.h</label>
        <link refid="PropertyBearer_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>src/omexmeta/include/omexmeta/Predicate.h</label>
        <link refid="Predicate_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfStorage.h</label>
        <link refid="LibrdfStorage_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfSerializer.h</label>
        <link refid="LibrdfSerializer_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/omexmeta/include/omexmeta/PersonalInformation.h</label>
        <link refid="PersonalInformation_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/omexmeta/include/omexmeta/OmexMeta.h</label>
        <link refid="OmexMeta_8h_source"/>
      </node>
      <node id="4">
        <label>src/omexmeta/include/omexmeta/Editor.h</label>
        <link refid="Editor_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/omexmeta/include/omexmeta/MetaID.h</label>
        <link refid="MetaID_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/omexmeta/include/omexmeta/PhysicalProperty.h</label>
        <link refid="PhysicalProperty_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h</label>
        <link refid="LibrdfNode_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/redland/RedlandWrapper/src/include/redland/RedlandAPI.h</label>
        <link refid="RedlandAPI_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>src/omexmeta/include/omexmeta/ElementExtractor.h</label>
        <link refid="ElementExtractor_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>src/omexmeta/include/omexmeta/MarkupIdentifier.h</label>
        <link refid="MarkupIdentifier_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>src/omexmeta/include/omexmeta/OmexMetaXml.h</label>
        <link refid="OmexMetaXml_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>src/omexmeta/include/omexmeta/UriHandler.h</label>
        <link refid="UriHandler_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>src/omexmeta/include/omexmeta/VCardTranslator.h</label>
        <link refid="VCardTranslator_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/redland/RedlandWrapper/src/include/redland/RefCountedRedlandType.h</label>
        <link refid="RefCountedRedlandType_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfParser.h</label>
        <link refid="LibrdfParser_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/omexmeta/include/omexmeta/OmexMetaCApi.h</label>
        <link refid="OmexMetaCApi_8h_source"/>
      </node>
      <node id="11">
        <label>src/omexmeta/include/omexmeta/Participant.h</label>
        <link refid="Participant_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/omexmeta/include/omexmeta/PhysicalProcess.h</label>
        <link refid="PhysicalProcess_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/omexmeta/include/omexmeta/PurgeRDFBag.h</label>
        <link refid="PurgeRDFBag_8h_source"/>
      </node>
      <node id="37">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h</label>
        <link refid="LibrdfUri_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classredland_1_1RefCountedRedlandType" prot="public">redland::RefCountedRedlandType</innerclass>
    <innernamespace refid="namespaceredland">redland</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Ciaran<sp/>on<sp/>06/08/2021.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIBOMEXMETA_REFCOUNTEDREDLANDTYPE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBOMEXMETA_REFCOUNTEDREDLANDTYPE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RedlandType.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;librdf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;raptor2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rasqal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rdf_uri_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;redland/LibrdfWorld.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;variant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">redland<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>world_free_func<sp/>=<sp/>std::function&lt;void(librdf_world<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>storage_free_func<sp/>=<sp/>std::function&lt;void(librdf_storage<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>serializer_free_func<sp/>=<sp/>std::function&lt;void(librdf_serializer<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>parser_free_func<sp/>=<sp/>std::function&lt;void(librdf_parser<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>statement_free_func<sp/>=<sp/>std::function&lt;void(librdf_statement<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>query_free_func<sp/>=<sp/>std::function&lt;void(librdf_query<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>query_results_free_func<sp/>=<sp/>std::function&lt;void(librdf_query_results<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>model_free_func<sp/>=<sp/>std::function&lt;void(librdf_model<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FreeFuncType&gt;</highlight></codeline>
<codeline lineno="28" refid="classredland_1_1RefCountedRedlandType" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classredland_1_1RefCountedRedlandType" kindref="compound">RefCountedRedlandType</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType</ref>&lt;ObjType,<sp/>FreeFuncType&gt;<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType" kindref="compound">ThisType</ref><sp/>=<sp/><ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType&lt;ObjType, FreeFuncType&gt;</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1a3c3a57c6b73d9bea7e0a9cdb9a725006" kindref="member">ThisType::RedlandType</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>default<sp/>constructor.<sp/>Users<sp/>would<sp/>need<sp/>to<sp/>populate<sp/>obj_<sp/>and<sp/>freeFunc_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>manually<sp/>if<sp/>default<sp/>constructor<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@see<sp/>RedlandType::setFreeFunc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@see<sp/>RedlandType::setObj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RefCountedRedlandType()<sp/>=<sp/>default;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>generic<sp/>constructor<sp/>for<sp/>ref<sp/>counted<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>objType<sp/>instance<sp/>of<sp/>ObjType*,<sp/>this<sp/>is<sp/>the<sp/>object<sp/>being<sp/>ref<sp/>counted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>func<sp/>the<sp/>function<sp/>that<sp/>free&apos;s<sp/>the<sp/>ref<sp/>counted<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RefCountedRedlandType(ObjType<sp/>*objType,<sp/>std::function&lt;void(ObjType*)&gt;<sp/>func)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>RedlandType&lt;ObjType,<sp/>FreeFuncType&gt;(objType,<sp/>func)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classredland_1_1RefCountedRedlandType_1ae0ca62ccfcffebe1f8d391fc80719fd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RefCountedRedlandType_1ae0ca62ccfcffebe1f8d391fc80719fd7" kindref="member">RefCountedRedlandType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RefCountedRedlandType" kindref="compound">RefCountedRedlandType</ref><sp/>&amp;other){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_<sp/>=<sp/>other.freeFunc_;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/>other.<ref refid="classredland_1_1RefCountedRedlandType_1aad3189482972131c1d253e7759fee33e" kindref="member">get</ref>();</highlight><highlight class="comment">//<sp/>automatically<sp/>increments<sp/>the<sp/>reference<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classredland_1_1RefCountedRedlandType_1aa0d305fe2357f0f5370a5027e165506a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RefCountedRedlandType" kindref="compound">RefCountedRedlandType</ref><sp/>&amp;<ref refid="classredland_1_1RefCountedRedlandType_1aa0d305fe2357f0f5370a5027e165506a" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RefCountedRedlandType" kindref="compound">RefCountedRedlandType</ref><sp/>&amp;other){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>weird<sp/>one<sp/>since<sp/>we&apos;re<sp/>treating<sp/>the<sp/>method<sp/>that<sp/>free&apos;s<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>a<sp/>member<sp/>variable.<sp/>It<sp/>means<sp/>that<sp/>we<sp/>want<sp/>to<sp/>free<sp/>an<sp/>existing<sp/>obj_<sp/>with<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uninitialized<sp/>freeFunc_.<sp/>So<sp/>we<sp/>copy<sp/>it<sp/>across<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_<sp/>=<sp/>other.freeFunc_;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>can<sp/>deal<sp/>with<sp/>obj.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/>other.<ref refid="classredland_1_1RefCountedRedlandType_1aad3189482972131c1d253e7759fee33e" kindref="member">get</ref>();</highlight><highlight class="comment">//<sp/>handles<sp/>reference<sp/>count<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classredland_1_1RefCountedRedlandType_1abb14a238dec2d35068c96d873ccef2da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RefCountedRedlandType_1abb14a238dec2d35068c96d873ccef2da" kindref="member">RefCountedRedlandType</ref>(<ref refid="classredland_1_1RefCountedRedlandType" kindref="compound">RefCountedRedlandType</ref><sp/>&amp;&amp;other)<sp/>noexcept{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>weird<sp/>one<sp/>since<sp/>we&apos;re<sp/>treating<sp/>the<sp/>method<sp/>that<sp/>free&apos;s<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>a<sp/>member<sp/>variable.<sp/>It<sp/>means<sp/>that<sp/>we<sp/>want<sp/>to<sp/>free<sp/>an<sp/>existing<sp/>obj_<sp/>with<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uninitialized<sp/>freeFunc_.<sp/>So<sp/>we<sp/>copy<sp/>it<sp/>across<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_<sp/>=<sp/>other.freeFunc_;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/>other.getWithoutIncrement();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.obj_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classredland_1_1RefCountedRedlandType_1a1ac9b3d35fbbc1f17fb474d61071690e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RefCountedRedlandType" kindref="compound">RefCountedRedlandType</ref><sp/>&amp;<ref refid="classredland_1_1RefCountedRedlandType_1a1ac9b3d35fbbc1f17fb474d61071690e" kindref="member">operator=</ref>(<ref refid="classredland_1_1RefCountedRedlandType" kindref="compound">RefCountedRedlandType</ref><sp/>&amp;&amp;other)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>weird<sp/>one<sp/>since<sp/>we&apos;re<sp/>treating<sp/>the<sp/>method<sp/>that<sp/>free&apos;s<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>a<sp/>member<sp/>variable.<sp/>It<sp/>means<sp/>that<sp/>we<sp/>want<sp/>to<sp/>free<sp/>an<sp/>existing<sp/>obj_<sp/>with<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uninitialized<sp/>freeFunc_.<sp/>So<sp/>we<sp/>copy<sp/>it<sp/>across<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_<sp/>=<sp/>other.freeFunc_;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>can<sp/>deal<sp/>with<sp/>obj.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/>other.getWithoutIncrement();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.obj_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classredland_1_1RefCountedRedlandType_1a5e09c936eada4386171e23bc599f334f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RefCountedRedlandType_1a5e09c936eada4386171e23bc599f334f" kindref="member">freeObj</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>usage<sp/>=<sp/><ref refid="classredland_1_1RefCountedRedlandType_1a6984bffbdd92f2eaaf23e86f65044fb9" kindref="member">getUsage</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usage<sp/>-<sp/>1<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classredland_1_1RefCountedRedlandType_1a6984bffbdd92f2eaaf23e86f65044fb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RefCountedRedlandType_1a6984bffbdd92f2eaaf23e86f65044fb9" kindref="member">getUsage</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>-&gt;usage;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classredland_1_1RefCountedRedlandType_1ae8d1c23cc4bb8a9df585c87765d857bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RefCountedRedlandType_1ae8d1c23cc4bb8a9df585c87765d857bb" kindref="member">incrementUsage</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>-&gt;usage++;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classredland_1_1RefCountedRedlandType_1aad3189482972131c1d253e7759fee33e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjType<sp/>*<ref refid="classredland_1_1RefCountedRedlandType_1aad3189482972131c1d253e7759fee33e" kindref="member">get</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RefCountedRedlandType_1ae8d1c23cc4bb8a9df585c87765d857bb" kindref="member">incrementUsage</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classredland_1_1RefCountedRedlandType_1a688d681a2a77dcbd3223757912cc93b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjType<sp/>*<ref refid="classredland_1_1RefCountedRedlandType_1a688d681a2a77dcbd3223757912cc93b6" kindref="member">getWithoutIncrement</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType&lt;ObjType, FreeFuncType&gt;::obj_</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType&lt;ObjType, FreeFuncType&gt;::freeFunc_</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>namespace<sp/>redland</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//LIBOMEXMETA_REFCOUNTEDREDLANDTYPE_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/redland/RedlandWrapper/src/include/redland/RefCountedRedlandType.h"/>
  </compounddef>
</doxygen>
