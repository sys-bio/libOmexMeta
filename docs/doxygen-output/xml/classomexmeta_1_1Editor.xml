<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classomexmeta_1_1Editor" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::Editor</compoundname>
    <includes refid="Editor_8h" local="no">Editor.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classomexmeta_1_1Editor_1a36eecb635c6384ad186f0e750602b58e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::Editor::xml_</definition>
        <argsstring></argsstring>
        <name>xml_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="406" column="21" bodyfile="src/omexmeta/include/omexmeta/Editor.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Editor_1ad3c91f02707459e06f4487f9a10fb53c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; omexmeta::Editor::metaids_</definition>
        <argsstring></argsstring>
        <name>metaids_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="407" column="21" bodyfile="src/omexmeta/include/omexmeta/Editor.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Editor_1a61eeafd61b1be05ea73b7bf784878846" prot="private" static="no" mutable="no">
        <type><ref refid="classredland_1_1LibrdfModel" kindref="compound">LibrdfModel</ref> &amp;</type>
        <definition>LibrdfModel&amp; omexmeta::Editor::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="408" column="21" bodyfile="src/omexmeta/include/omexmeta/Editor.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Editor_1a79d5dd5430ec0b292ea162fdf7ba4a61" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool omexmeta::Editor::create_ids_</definition>
        <argsstring></argsstring>
        <name>create_ids_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="409" column="14" bodyfile="src/omexmeta/include/omexmeta/Editor.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Editor_1adf7c779ffdad4784bf1f0a831b75b83e" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::string &gt; &amp;</type>
        <definition>std::unordered_map&lt;std::string, std::string&gt;&amp; omexmeta::Editor::namespaces_</definition>
        <argsstring></argsstring>
        <name>namespaces_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="410" column="28" bodyfile="src/omexmeta/include/omexmeta/Editor.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Editor_1a1d731b45a2d26d5118c7483d4f3033a3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool omexmeta::Editor::generate_new_metaids_</definition>
        <argsstring></argsstring>
        <name>generate_new_metaids_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="411" column="14" bodyfile="src/omexmeta/include/omexmeta/Editor.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Editor_1ac4bbccf4ad683eaa744a5b9e81e688f8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool omexmeta::Editor::sbml_semantic_extraction_</definition>
        <argsstring></argsstring>
        <name>sbml_semantic_extraction_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="412" column="14" bodyfile="src/omexmeta/include/omexmeta/Editor.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Editor_1a3c4514ca9177b9bc157e9e52af23bc82" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::Editor::metaid_base_</definition>
        <argsstring></argsstring>
        <name>metaid_base_</name>
        <initializer>= &quot;#OmexMetaId&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="413" column="21" bodyfile="src/omexmeta/include/omexmeta/Editor.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Editor_1a2676967741d009a5e9115d031b018318" prot="private" static="no" mutable="no">
        <type>OmexMetaXmlType</type>
        <definition>OmexMetaXmlType omexmeta::Editor::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="414" column="25" bodyfile="src/omexmeta/include/omexmeta/Editor.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Editor_1abf4cd9407efdec0a0b8b07189d26cf21" prot="private" static="no" mutable="no">
        <type>OmexMetaXmlPtr</type>
        <definition>OmexMetaXmlPtr omexmeta::Editor::omexMetaXmlPtr_</definition>
        <argsstring></argsstring>
        <name>omexMetaXmlPtr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="415" column="24" bodyfile="src/omexmeta/include/omexmeta/Editor.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Editor_1a2bebe515d6a48f4f74a1d25bc791b740" prot="private" static="no" mutable="no">
        <type><ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
        <definition>UriHandler&amp; omexmeta::Editor::uriHandler_</definition>
        <argsstring></argsstring>
        <name>uriHandler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="417" column="20" bodyfile="src/omexmeta/include/omexmeta/Editor.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classomexmeta_1_1Editor_1ac3f42bf53669cc903521ca05c47016df" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::Editor::Editor</definition>
        <argsstring>(std::string xml_or_file, bool create_ids, LibrdfModel &amp;model, NamespaceMap &amp;ns_map, UriHandler &amp;uriHandler, bool generate_new_metaids=false, bool sbml_semantic_extraction=true)</argsstring>
        <name>Editor</name>
        <param>
          <type>std::string</type>
          <declname>xml_or_file</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>create_ids</declname>
        </param>
        <param>
          <type><ref refid="classredland_1_1LibrdfModel" kindref="compound">LibrdfModel</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>NamespaceMap &amp;</type>
          <declname>ns_map</declname>
        </param>
        <param>
          <type><ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
          <declname>uriHandler</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>generate_new_metaids</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sbml_semantic_extraction</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>constructor for <ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml_or_file</parametername>
</parameternamelist>
<parameterdescription>
<para>The valid xml content for annotation OR the path to the file on disk containing this content </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generate_new_metaids.</parametername>
</parameternamelist>
<parameterdescription>
<para>Autogenerate metaids for xml element that do not already have them </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sbml_semantic_extraction.</parametername>
</parameternamelist>
<parameterdescription>
<para>When</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xml_or_file</parametername>
</parameternamelist>
<parameterdescription>
<para>is determined to be sbml, automatically extract some information regarding species and reactions. <ref refid="classThis" kindref="compound">This</ref> option is ignored when</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xml_or_file</parametername>
</parameternamelist>
<parameterdescription>
<para>is not sbml. Default is true. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>a reference to the current model (owned by <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nm_map</parametername>
</parameternamelist>
<parameterdescription>
<para>a set of namespaces for current xml</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The <ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> is usually instantiated from the RDF::to_editor class which automatically takes care of the<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>and</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ns_map</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments. When instantiated, the editor class automatically reads the XML and adds metaids to some or all of the elements, depending on the XML type parameter. If the user specifies that they are annotating an SBML model, the elements returned by SBMLAssistant::getValidElements() are given metaids (if not exist), while if the user chooses cellml the elements returned by CellMLAssistant::getValidElements() are used. If the type is unknown, then all elements are given metaids. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="60" column="18" bodyfile="src/omexmeta/Editor.cpp" bodystart="11" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1aa11380bb7e2ca7859937c3f5907b6240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::Editor::~Editor</definition>
        <argsstring>()=default</argsstring>
        <name>~Editor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>We no longer required to free the triples_ used by <ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> since they are created and freed inplace - i.e. locally, not at the class scope. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="69" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1ab5b39f1f137312ce77575e73a86dfb05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int omexmeta::Editor::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="71" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a514443fe99a6e52154d1fe4f7ec94618" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const NamespaceMap &amp;</type>
        <definition>const std::unordered_map&lt; std::string, std::string &gt; &amp; omexmeta::Editor::getNamespaces</definition>
        <argsstring>() const</argsstring>
        <name>getNamespaces</name>
        <briefdescription>
<para>returns a hashmap of namespaces to prefixes. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Map where keys are namespaces and values are prefixes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="77" column="29" bodyfile="src/omexmeta/Editor.cpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1abfc5a972954cde4ec2112cc0e00a7ed3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfModel" kindref="compound">LibrdfModel</ref> &amp;</type>
        <definition>LibrdfModel &amp; omexmeta::Editor::getModel</definition>
        <argsstring>() const</argsstring>
        <name>getModel</name>
        <briefdescription>
<para>return the underlying librdf_model* pointer </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the librdf_model pointer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="83" column="22" bodyfile="src/omexmeta/Editor.cpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a83836e19bb1de9c7df69d36e8b61b2b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::setNamespaces</definition>
        <argsstring>(const NamespaceMap &amp;namespaces)</argsstring>
        <name>setNamespaces</name>
        <param>
          <type>const NamespaceMap &amp;</type>
          <declname>namespaces</declname>
        </param>
        <briefdescription>
<para>set the namespace map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="88" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1ad931e829fc9f78717e0c1443c619b7d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::Editor::getXml</definition>
        <argsstring>() const</argsstring>
        <name>getXml</name>
        <briefdescription>
<para>return the xml </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the xml string after metaids are added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="94" column="28" bodyfile="src/omexmeta/Editor.cpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a242c86222e1aeff337d3af22641db1de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt; &amp;</type>
        <definition>const std::vector&lt; std::string &gt; &amp; omexmeta::Editor::getMetaids</definition>
        <argsstring>() const</argsstring>
        <name>getMetaids</name>
        <briefdescription>
<para>returns a list of metaids both that existed previously and that was added during instantiation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>vector of metaids used in the xml </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="101" column="28" bodyfile="src/omexmeta/Editor.cpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a052a725cee8b8e577c55e977eee81ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::addNamespace</definition>
        <argsstring>(const std::string &amp;ns, std::string prefix)</argsstring>
        <name>addNamespace</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ns</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
<para>add a namespace </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ns</parametername>
</parameternamelist>
<parameterdescription>
<para>the namespace </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>the prefix used in serialized annotations to refer to the namespace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="108" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a434304cc0ca8aa802cd236d34aaa1763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::addSingleAnnotation</definition>
        <argsstring>(LibrdfNode subject, const PredicatePtr &amp;predicate_ptr, const LibrdfNode &amp;resource)</argsstring>
        <name>addSingleAnnotation</name>
        <param>
          <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref></type>
          <declname>subject</declname>
        </param>
        <param>
          <type>const PredicatePtr &amp;</type>
          <declname>predicate_ptr</declname>
        </param>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref> &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
<para>Add a SingleAnnotation (aka a <ref refid="classomexmeta_1_1Triple" kindref="compound">Triple</ref>) to the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>subject</parametername>
</parameternamelist>
<parameterdescription>
<para>the subject portion of the triple </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>to the predicate the predicate portion of the triple. Ths is a pointer to support polymorphic calls. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resource</parametername>
</parameternamelist>
<parameterdescription>
<para>the resource portion of the triple </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="116" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="159" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1ae46835f3f35425d8087b80d08666aaa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::addSingleAnnotation</definition>
        <argsstring>(SingularAnnotation &amp;singularAnnotation)</argsstring>
        <name>addSingleAnnotation</name>
        <param>
          <type><ref refid="classomexmeta_1_1Triple" kindref="compound">SingularAnnotation</ref> &amp;</type>
          <declname>singularAnnotation</declname>
        </param>
        <briefdescription>
<para>Add a SingleAnnotation (aka <ref refid="classomexmeta_1_1Triple" kindref="compound">Triple</ref>) to the rdf graph. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>singularAnnotation</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of SingularAnnotation to add to the model </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="122" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1afcb5ce7397aab23fabd3b4b4b89d3a54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::removeSingleAnnotation</definition>
        <argsstring>(const SingularAnnotation &amp;singularAnnotation) const</argsstring>
        <name>removeSingleAnnotation</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1Triple" kindref="compound">SingularAnnotation</ref> &amp;</type>
          <declname>singularAnnotation</declname>
        </param>
        <briefdescription>
<para>remove a singular annotation (aka <ref refid="classomexmeta_1_1Triple" kindref="compound">Triple</ref>) from the rdf graph </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>singularAnnotation</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of SingularAnnotation to remove from the model </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="128" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a81e9e3e81a86ac079f81239a47f18092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::addCompositeAnnotation</definition>
        <argsstring>(PropertyBearer *phenomenonPtr)</argsstring>
        <name>addCompositeAnnotation</name>
        <param>
          <type><ref refid="classomexmeta_1_1PropertyBearer" kindref="compound">PropertyBearer</ref> *</type>
          <declname>phenomenonPtr</declname>
        </param>
        <briefdescription>
<para>add a composite annotation to the rdf graph. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phenomenonPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an object of type PhysicalPhenomenon, the superclass of the composite annotations.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Composite annotations currently supported are <ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref>, <ref refid="classomexmeta_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> and <ref refid="classomexmeta_1_1EnergyDiff" kindref="compound">EnergyDiff</ref>. The PhysicalDependency type will be supported in future releases.</para>
<para>For developers. Consider removing this function in favour of using the add* functions. </para>
        </detaileddescription>
        <inbodydescription>
<para>Implementation note: <ref refid="classThis" kindref="compound">This</ref> method generates triples on the fly and then frees. <ref refid="classThis" kindref="compound">This</ref> was implemented this way as it helped avoid memory issues but perhaps a better implementation would be similar to that in the <ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> class.</para>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="142" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="198" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a4600654719f3f66935ea96a4567a9086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::addPhysicalProperty</definition>
        <argsstring>(PhysicalProperty &amp;physicalProperty)</argsstring>
        <name>addPhysicalProperty</name>
        <param>
          <type><ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> &amp;</type>
          <declname>physicalProperty</declname>
        </param>
        <briefdescription>
<para>add a physical process to the rdf graph </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="147" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="235" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a0740831baafe244374ad7a324d51a87e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::addPhysicalEntity</definition>
        <argsstring>(PhysicalEntity &amp;physicalEntity)</argsstring>
        <name>addPhysicalEntity</name>
        <param>
          <type><ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> &amp;</type>
          <declname>physicalEntity</declname>
        </param>
        <briefdescription>
<para>add a composite annotation of type <ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> to the rdf graph </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>physicalEntity</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of a <ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> object to add to the rdf graph. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="153" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a0acf94314252b70a4db89f83e6047e8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::removePhysicalEntity</definition>
        <argsstring>(PhysicalEntity &amp;physicalEntity) const</argsstring>
        <name>removePhysicalEntity</name>
        <param>
          <type><ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> &amp;</type>
          <declname>physicalEntity</declname>
        </param>
        <briefdescription>
<para>remove triples associated with a a <ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> object from the rdf graph </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>physicalEntity</parametername>
</parameternamelist>
<parameterdescription>
<para>the PhysicalEntityto remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="159" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="287" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a8be7fa01bef49ff1c93965781797c9bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::removePersonalInformation</definition>
        <argsstring>(PersonalInformation *information) const</argsstring>
        <name>removePersonalInformation</name>
        <param>
          <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> *</type>
          <declname>information</declname>
        </param>
        <briefdescription>
<para>remove triples associated with a <ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> object from the rdf graph </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>information</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> object to remove. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="165" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="291" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1ae4a608ecbe64f05c1b64efbeeb1fdeb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::addPhysicalProcess</definition>
        <argsstring>(PhysicalProcess &amp;physicalProcess)</argsstring>
        <name>addPhysicalProcess</name>
        <param>
          <type><ref refid="classomexmeta_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> &amp;</type>
          <declname>physicalProcess</declname>
        </param>
        <briefdescription>
<para>add a composite annotation of type <ref refid="classomexmeta_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> to the rdf graph </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>physicalProcess</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of a <ref refid="classomexmeta_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> object to add to the rdf graph. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="171" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a42640d74c6afe780738c906bdf346a78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::removePhysicalProcess</definition>
        <argsstring>(PhysicalProcess &amp;physicalProcess) const</argsstring>
        <name>removePhysicalProcess</name>
        <param>
          <type><ref refid="classomexmeta_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> &amp;</type>
          <declname>physicalProcess</declname>
        </param>
        <briefdescription>
<para>remove triples associated with a <ref refid="classomexmeta_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> object from the rdf graph </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>physicalProcess</parametername>
</parameternamelist>
<parameterdescription>
<para>the PhysicalProcessto remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="177" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="302" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a0e7eb192448ba81b1ca7f91b15785030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::addEnergyDiff</definition>
        <argsstring>(EnergyDiff &amp;ediff)</argsstring>
        <name>addEnergyDiff</name>
        <param>
          <type><ref refid="classomexmeta_1_1EnergyDiff" kindref="compound">EnergyDiff</ref> &amp;</type>
          <declname>ediff</declname>
        </param>
        <briefdescription>
<para>add a composite annotation of type <ref refid="classomexmeta_1_1EnergyDiff" kindref="compound">EnergyDiff</ref> to the rdf graph </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ediff</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of a <ref refid="classomexmeta_1_1EnergyDiff" kindref="compound">EnergyDiff</ref> objec to add to the rdf graph. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="183" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a1b2e0f5859fe2e2784ecff2a78f7f1f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::addPersonalInformation</definition>
        <argsstring>(PersonalInformation *personalInformation)</argsstring>
        <name>addPersonalInformation</name>
        <param>
          <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> *</type>
          <declname>personalInformation</declname>
        </param>
        <briefdescription>
<para>add a <ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> class to the rdf model </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>personalInformation</parametername>
</parameternamelist>
<parameterdescription>
<para>An instance of a <ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> object to add to the rdf graph. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="189" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="260" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a237078857cd0d8c31ebe5c7200538ffc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::removeEnergyDiff</definition>
        <argsstring>(EnergyDiff &amp;physicalForce) const</argsstring>
        <name>removeEnergyDiff</name>
        <param>
          <type><ref refid="classomexmeta_1_1EnergyDiff" kindref="compound">EnergyDiff</ref> &amp;</type>
          <declname>physicalForce</declname>
        </param>
        <briefdescription>
<para>remove triples associated with a a <ref refid="classomexmeta_1_1EnergyDiff" kindref="compound">EnergyDiff</ref> object from the rdf graph </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>physicalForce</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classomexmeta_1_1EnergyDiff" kindref="compound">EnergyDiff</ref> to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="195" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="298" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a790458ef32f01ce0a6fd87bf14bed81a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::checkValidMetaid</definition>
        <argsstring>(const std::string &amp;metaid)</argsstring>
        <name>checkValidMetaid</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>metaid</declname>
        </param>
        <briefdescription>
<para>check that a metaid is valid by comparing with the output from Editor::getMetaIds() </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="201" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="83" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a3fef7f1c38949b50239a9a07cc327d67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::addNamespaceFromAnnotation</definition>
        <argsstring>(const std::string &amp;predicate_string)</argsstring>
        <name>addNamespaceFromAnnotation</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>predicate_string</declname>
        </param>
        <briefdescription>
<para>extract namespace part of uri from @parameter predicate_string and add it to namespace_ if we know it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="207" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="186" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1af987e450e4bf9d75391ad3f5ac6233f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::Editor::getMetaidBase</definition>
        <argsstring>() const</argsstring>
        <name>getMetaidBase</name>
        <briefdescription>
<para>get the string that is being used for the metaid base (default is OmexMetaID) </para>
        </briefdescription>
        <detaileddescription>
<para>this base will only be used when the generate_metaids boolean is set to true in the constructor. <simplesect kind="return"><para>std::string of metaid base </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="214" column="27" bodyfile="src/omexmeta/Editor.cpp" bodystart="452" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a206feee18473abbeda5e4e55906e73eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::setMetaidBase</definition>
        <argsstring>(const std::string &amp;metaidBase)</argsstring>
        <name>setMetaidBase</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>metaidBase</declname>
        </param>
        <briefdescription>
<para>set the base metaid string (default is OmexMetaId) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>metaidBase</parametername>
</parameternamelist>
<parameterdescription>
<para>the string you want to use for metaid base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void</para>
</simplesect>
using editor.setMetaidBase(&quot;MyNewMetaid&quot;) will make metaids added by libomexmeta look like MyNewMetaid0001, MyNewMetaid0002, etc. It is assumed that it will not be necessary to have more than 9999 new metaids. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="224" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="454" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a68ade6a293061a98243a3b2853e55a4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>OmexMetaXmlType</type>
        <definition>OmexMetaXmlType omexmeta::Editor::getType</definition>
        <argsstring>() const</argsstring>
        <name>getType</name>
        <briefdescription>
<para>getter for the current xml type identification variable. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>OmexMetaType</para>
</simplesect>
<ref refid="classThis" kindref="compound">This</ref> should be set automatically in the <ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="231" column="26" bodyfile="src/omexmeta/Editor.cpp" bodystart="458" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a3e2c493ed5034a15e6915b7b649b58a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::setType</definition>
        <argsstring>(OmexMetaXmlType type)</argsstring>
        <name>setType</name>
        <param>
          <type>OmexMetaXmlType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>setter for the current xml type identification variable. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void</para>
</simplesect>
<ref refid="classThis" kindref="compound">This</ref> should be set automatically in the <ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="238" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="460" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a245b2105c175892d1fddaf693fa9d636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref></type>
        <definition>PhysicalEntity omexmeta::Editor::newPhysicalEntity</definition>
        <argsstring>()</argsstring>
        <name>newPhysicalEntity</name>
        <briefdescription>
<para>create a new <ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classomexmeta_1_1PhysicalEntity" kindref="compound">PhysicalEntity</ref> objects should only be instantiated via the <ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> because this enables the passing of necessary information behind the scenes, rather than needing to be provided by the user. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="246" column="24" bodyfile="src/omexmeta/Editor.cpp" bodystart="315" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a4faf7d0c71afca8ded828ac7bdb857f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1EnergyDiff" kindref="compound">EnergyDiff</ref></type>
        <definition>EnergyDiff omexmeta::Editor::newEnergyDiff</definition>
        <argsstring>()</argsstring>
        <name>newEnergyDiff</name>
        <briefdescription>
<para>create a new <ref refid="classomexmeta_1_1EnergyDiff" kindref="compound">EnergyDiff</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classomexmeta_1_1EnergyDiff" kindref="compound">EnergyDiff</ref> objects should only be instantiated via the <ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> because this enables the passing of necessary information behind the scenes, rather than needing to be provided by the user. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="254" column="20" bodyfile="src/omexmeta/Editor.cpp" bodystart="319" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a2815d918736ee17d07306c5cf07c8ebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref></type>
        <definition>PhysicalProcess omexmeta::Editor::newPhysicalProcess</definition>
        <argsstring>()</argsstring>
        <name>newPhysicalProcess</name>
        <briefdescription>
<para>create a new <ref refid="classomexmeta_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classomexmeta_1_1PhysicalProcess" kindref="compound">PhysicalProcess</ref> objects should only be instantiated via the <ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> because this enables the passing of necessary information behind the scenes, rather than needing to be provided by the user. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="262" column="25" bodyfile="src/omexmeta/Editor.cpp" bodystart="323" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a1943079ddbc4a4c6d896f51f360a11df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref></type>
        <definition>PersonalInformation omexmeta::Editor::newPersonalInformation</definition>
        <argsstring>()</argsstring>
        <name>newPersonalInformation</name>
        <briefdescription>
<para>create a new <ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classomexmeta_1_1PersonalInformation" kindref="compound">PersonalInformation</ref> objects should only be instantiated via the <ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> because this enables the passing of necessary information behind the scenes, rather than needing to be provided by the user. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="270" column="29" bodyfile="src/omexmeta/Editor.cpp" bodystart="327" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a8fb3a19e8f64aeff2ac9b78c483843de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::addSingleAnnotationNoValidation</definition>
        <argsstring>(SingularAnnotation &amp;singularAnnotation)</argsstring>
        <name>addSingleAnnotationNoValidation</name>
        <param>
          <type><ref refid="classomexmeta_1_1Triple" kindref="compound">SingularAnnotation</ref> &amp;</type>
          <declname>singularAnnotation</declname>
        </param>
        <briefdescription>
<para>like addSingleAnnotation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="275" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a415aa94ed30686392c65f99b4318aa84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>OMEXMETA_DEPRECATED void</type>
        <definition>void omexmeta::Editor::addCompositeAnnotation2</definition>
        <argsstring>(PropertyBearer *phenomenonPtr)</argsstring>
        <name>addCompositeAnnotation2</name>
        <param>
          <type><ref refid="classomexmeta_1_1PropertyBearer" kindref="compound">PropertyBearer</ref> *</type>
          <declname>phenomenonPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="277" column="34" bodyfile="src/omexmeta/Editor.cpp" bodystart="218" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1ace8ee873498fa72b63c0747775b729f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::addTriples</definition>
        <argsstring>(Triples &amp;triples)</argsstring>
        <name>addTriples</name>
        <param>
          <type><ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref> &amp;</type>
          <declname>triples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="279" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="227" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a1b126c390f5fc0b7ebcd1e3f691c9ece" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::removePropertyBearer</definition>
        <argsstring>(PropertyBearer *physicalPhenomenon) const</argsstring>
        <name>removePropertyBearer</name>
        <param>
          <type><ref refid="classomexmeta_1_1PropertyBearer" kindref="compound">PropertyBearer</ref> *</type>
          <declname>physicalPhenomenon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="281" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="280" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a736e49794c5a358f06d13d41c3657fe2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::Editor::getArchiveUri</definition>
        <argsstring>() const</argsstring>
        <name>getArchiveUri</name>
        <briefdescription>
<para>get the current value of archive_uri_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="286" column="22" bodyfile="src/omexmeta/Editor.cpp" bodystart="417" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a8494826923de713c19f971fd9c7908c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::Editor::getLocalUri</definition>
        <argsstring>() const</argsstring>
        <name>getLocalUri</name>
        <briefdescription>
<para>get the current value of local_uri_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="291" column="21" bodyfile="src/omexmeta/Editor.cpp" bodystart="411" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a0020d3b9c3e91fb37c134ba8b211c13e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::Editor::getModelUri</definition>
        <argsstring>() const</argsstring>
        <name>getModelUri</name>
        <briefdescription>
<para>get the current value of model_uri_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="296" column="22" bodyfile="src/omexmeta/Editor.cpp" bodystart="413" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1ad05a3dc568f8919db829e544babbfc6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::Editor::getModelLevelAnnotationUri</definition>
        <argsstring>() const</argsstring>
        <name>getModelLevelAnnotationUri</name>
        <briefdescription>
<para>get the current value of the uri used to annotate model level annotations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="302" column="21" bodyfile="src/omexmeta/Editor.cpp" bodystart="415" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a2264cbd2efae17d1d72c3f402d8721bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::Editor::getRepositoryUri</definition>
        <argsstring>() const</argsstring>
        <name>getRepositoryUri</name>
        <briefdescription>
<para>get the current value of archive_uri_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="307" column="22" bodyfile="src/omexmeta/Editor.cpp" bodystart="419" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a5143e1f8db82393faed322810acf5e92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref></type>
        <definition>LibrdfNode omexmeta::Editor::createNodeWithModelUri</definition>
        <argsstring>(const std::string &amp;string) const</argsstring>
        <name>createNodeWithModelUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>instantiate a LibrdfNode that is prefixed with the current local_uri </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="313" column="21" bodyfile="src/omexmeta/Editor.cpp" bodystart="421" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a1926b789086e29102e33808169a5af0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> &amp;</type>
        <definition>Editor &amp; omexmeta::Editor::addCreator</definition>
        <argsstring>(std::string orcid_id)</argsstring>
        <name>addCreator</name>
        <param>
          <type>std::string</type>
          <declname>orcid_id</declname>
        </param>
        <briefdescription>
<para>add the &quot;creator&quot; model level annotation </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>an</parametername>
</parameternamelist>
<parameterdescription>
<para>orcid_id as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="319" column="16" bodyfile="src/omexmeta/Editor.cpp" bodystart="332" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a87d3b7e4ab717c18653acf92a2c2c9d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> &amp;</type>
        <definition>Editor &amp; omexmeta::Editor::addContributor</definition>
        <argsstring>(std::string orcid_id)</argsstring>
        <name>addContributor</name>
        <param>
          <type>std::string</type>
          <declname>orcid_id</declname>
        </param>
        <briefdescription>
<para>add the &quot;curator&quot; model level annotation </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>an</parametername>
</parameternamelist>
<parameterdescription>
<para>orcid_id as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="325" column="16" bodyfile="src/omexmeta/Editor.cpp" bodystart="345" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a4da72139f63090ab5682bf51c96d7886" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> &amp;</type>
        <definition>Editor &amp; omexmeta::Editor::addTaxon</definition>
        <argsstring>(const std::string &amp;taxon_id)</argsstring>
        <name>addTaxon</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>taxon_id</declname>
        </param>
        <briefdescription>
<para>add the &quot;taxon id&quot; model level annotation </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>an</parametername>
</parameternamelist>
<parameterdescription>
<para>taxon_id as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="331" column="16" bodyfile="src/omexmeta/Editor.cpp" bodystart="400" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a9eeaa4cfeeb9bae8b5d5f7705e170de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> &amp;</type>
        <definition>Editor &amp; omexmeta::Editor::addPubmed</definition>
        <argsstring>(const std::string &amp;pubmedid)</argsstring>
        <name>addPubmed</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>pubmedid</declname>
        </param>
        <briefdescription>
<para>add the &quot;pubmed id&quot; model level annotation </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>pubmed id as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="337" column="16" bodyfile="src/omexmeta/Editor.cpp" bodystart="380" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a58db6f81ad362189bed21780be5f3611" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> &amp;</type>
        <definition>Editor &amp; omexmeta::Editor::addDescription</definition>
        <argsstring>(const std::string &amp;date)</argsstring>
        <name>addDescription</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>add the &quot;description&quot; model level annotation </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>description of the model as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="343" column="16" bodyfile="src/omexmeta/Editor.cpp" bodystart="371" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1ace652a3364ba755330179e2aeb630761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> &amp;</type>
        <definition>Editor &amp; omexmeta::Editor::addDateCreated</definition>
        <argsstring>(const std::string &amp;date)</argsstring>
        <name>addDateCreated</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>add the &quot;date created&quot; model level annotation </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>date that the model was created </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="349" column="16" bodyfile="src/omexmeta/Editor.cpp" bodystart="358" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a50674b2591d2fed572954ac8490ee21c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Triple" kindref="compound">SingularAnnotation</ref></type>
        <definition>SingularAnnotation omexmeta::Editor::newSingularAnnotation</definition>
        <argsstring>(std::string metaid) const</argsstring>
        <name>newSingularAnnotation</name>
        <param>
          <type>std::string</type>
          <declname>metaid</declname>
        </param>
        <briefdescription>
<para>create a new singular annotation object with metaid </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>metaid</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to use in the &quot;rdf:about&quot; field or subject </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new SingularAnnotation object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="356" column="28" bodyfile="src/omexmeta/Editor.cpp" bodystart="445" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a904a1beb0ba56ccfc1aca70d512030ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> &amp;</type>
        <definition>Editor &amp; omexmeta::Editor::addParentModel</definition>
        <argsstring>(const std::string &amp;biomod_id)</argsstring>
        <name>addParentModel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>biomod_id</declname>
        </param>
        <briefdescription>
<para>add the &quot;parent model&quot; model level annotation </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>biomodels id for the model in which this model was derived from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="362" column="16" bodyfile="src/omexmeta/Editor.cpp" bodystart="390" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a6142da2b89068e9638410c3c903e3b64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Triple" kindref="compound">SingularAnnotation</ref></type>
        <definition>SingularAnnotation omexmeta::Editor::newSingularAnnotation</definition>
        <argsstring>() const</argsstring>
        <name>newSingularAnnotation</name>
        <briefdescription>
<para>create a new SingularAnnotation object </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A SingularAnnotation object</para>
</simplesect>
a SingularAnnotation is a typedefed <ref refid="classomexmeta_1_1Triple" kindref="compound">Triple</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="369" column="28" bodyfile="src/omexmeta/Editor.cpp" bodystart="440" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1aeae47fb60d955f506de2f16a54c0679a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref></type>
        <definition>PhysicalProperty omexmeta::Editor::newPhysicalProperty</definition>
        <argsstring>()</argsstring>
        <name>newPhysicalProperty</name>
        <briefdescription>
<para>instantiate a new <ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> instance and return </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="374" column="26" bodyfile="src/omexmeta/Editor.cpp" bodystart="306" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1ab36fc15581a0aa0af434af60d4f910ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> *</type>
        <definition>PhysicalProperty * omexmeta::Editor::newPhysicalPropertyPtr</definition>
        <argsstring>()</argsstring>
        <name>newPhysicalPropertyPtr</name>
        <briefdescription>
<para>instantiate a pointer to a new <ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> instance and return </para>
        </briefdescription>
        <detaileddescription>
<para>the caller is responsible for deleting the returned <ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> using deletePhysicalProperty </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="381" column="26" bodyfile="src/omexmeta/Editor.cpp" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a0c3c16e06d9ecbbf9958bb2feb85b56a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
        <definition>UriHandler &amp; omexmeta::Editor::getUriHandler</definition>
        <argsstring>() const</argsstring>
        <name>getUriHandler</name>
        <briefdescription>
<para>get a reference to the current <ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="386" column="20" bodyfile="src/omexmeta/Editor.cpp" bodystart="461" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Editor_1a6f201bae38c324800d0d55e778cb6135" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::Editor::stripAnnotations</definition>
        <argsstring>(const std::string &amp;annotationElementName=&quot;annotation&quot;)</argsstring>
        <name>stripAnnotations</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>annotationElementName</declname>
          <defval>&quot;annotation&quot;</defval>
        </param>
        <briefdescription>
<para>remove all &lt;annotation&gt; elements from the xml associated with this <ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>annotationElementName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the element that contains the annotations. The default is &quot;annotation&quot; since sbml embedded annotations are all contained within an &lt;annotation&gt; element. Other languages</para>
</parameterdescription>
</parameteritem>
</parameterlist>
returns a copy of xml without any annotations (i.e. CellML) may not follow this convention and have the option of changing check element contains the annotations. Users should be warned that no verification is in place to prevent you from stripping away arbitrary elements with this method - all elements named<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>annotationElementName</parametername>
</parameternamelist>
<parameterdescription>
<para>will be removed from this xml document, regardless of content. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="403" column="21" bodyfile="src/omexmeta/Editor.cpp" bodystart="465" bodyend="467"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classomexmeta_1_1Editor_1ae9f90708ec42906075e38c1d26a62be6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Editor::extractNamespacesFromTriplesVector</definition>
        <argsstring>(PropertyBearer *pp)</argsstring>
        <name>extractNamespacesFromTriplesVector</name>
        <param>
          <type><ref refid="classomexmeta_1_1PropertyBearer" kindref="compound">PropertyBearer</ref> *</type>
          <declname>pp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Editor.h" line="419" column="14" bodyfile="src/omexmeta/Editor.cpp" bodystart="143" bodyend="153"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Add or change annotations in xml. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/omexmeta/include/omexmeta/Editor.h" line="40" column="5" bodyfile="src/omexmeta/include/omexmeta/Editor.h" bodystart="40" bodyend="420"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1Editor_1a81e9e3e81a86ac079f81239a47f18092" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addCompositeAnnotation</name></member>
      <member refid="classomexmeta_1_1Editor_1a415aa94ed30686392c65f99b4318aa84" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addCompositeAnnotation2</name></member>
      <member refid="classomexmeta_1_1Editor_1a87d3b7e4ab717c18653acf92a2c2c9d4" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addContributor</name></member>
      <member refid="classomexmeta_1_1Editor_1a1926b789086e29102e33808169a5af0c" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addCreator</name></member>
      <member refid="classomexmeta_1_1Editor_1ace652a3364ba755330179e2aeb630761" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addDateCreated</name></member>
      <member refid="classomexmeta_1_1Editor_1a58db6f81ad362189bed21780be5f3611" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addDescription</name></member>
      <member refid="classomexmeta_1_1Editor_1a0e7eb192448ba81b1ca7f91b15785030" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addEnergyDiff</name></member>
      <member refid="classomexmeta_1_1Editor_1a052a725cee8b8e577c55e977eee81ace" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addNamespace</name></member>
      <member refid="classomexmeta_1_1Editor_1a3fef7f1c38949b50239a9a07cc327d67" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addNamespaceFromAnnotation</name></member>
      <member refid="classomexmeta_1_1Editor_1a904a1beb0ba56ccfc1aca70d512030ed" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addParentModel</name></member>
      <member refid="classomexmeta_1_1Editor_1a1b2e0f5859fe2e2784ecff2a78f7f1f8" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addPersonalInformation</name></member>
      <member refid="classomexmeta_1_1Editor_1a0740831baafe244374ad7a324d51a87e" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addPhysicalEntity</name></member>
      <member refid="classomexmeta_1_1Editor_1ae4a608ecbe64f05c1b64efbeeb1fdeb1" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addPhysicalProcess</name></member>
      <member refid="classomexmeta_1_1Editor_1a4600654719f3f66935ea96a4567a9086" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addPhysicalProperty</name></member>
      <member refid="classomexmeta_1_1Editor_1a9eeaa4cfeeb9bae8b5d5f7705e170de4" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addPubmed</name></member>
      <member refid="classomexmeta_1_1Editor_1a434304cc0ca8aa802cd236d34aaa1763" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addSingleAnnotation</name></member>
      <member refid="classomexmeta_1_1Editor_1ae46835f3f35425d8087b80d08666aaa4" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addSingleAnnotation</name></member>
      <member refid="classomexmeta_1_1Editor_1a8fb3a19e8f64aeff2ac9b78c483843de" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addSingleAnnotationNoValidation</name></member>
      <member refid="classomexmeta_1_1Editor_1a4da72139f63090ab5682bf51c96d7886" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addTaxon</name></member>
      <member refid="classomexmeta_1_1Editor_1ace8ee873498fa72b63c0747775b729f5" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>addTriples</name></member>
      <member refid="classomexmeta_1_1Editor_1a790458ef32f01ce0a6fd87bf14bed81a" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>checkValidMetaid</name></member>
      <member refid="classomexmeta_1_1Editor_1a79d5dd5430ec0b292ea162fdf7ba4a61" prot="private" virt="non-virtual"><scope>omexmeta::Editor</scope><name>create_ids_</name></member>
      <member refid="classomexmeta_1_1Editor_1a5143e1f8db82393faed322810acf5e92" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>createNodeWithModelUri</name></member>
      <member refid="classomexmeta_1_1Editor_1ac3f42bf53669cc903521ca05c47016df" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>Editor</name></member>
      <member refid="classomexmeta_1_1Editor_1ae9f90708ec42906075e38c1d26a62be6" prot="private" virt="non-virtual"><scope>omexmeta::Editor</scope><name>extractNamespacesFromTriplesVector</name></member>
      <member refid="classomexmeta_1_1Editor_1a1d731b45a2d26d5118c7483d4f3033a3" prot="private" virt="non-virtual"><scope>omexmeta::Editor</scope><name>generate_new_metaids_</name></member>
      <member refid="classomexmeta_1_1Editor_1a736e49794c5a358f06d13d41c3657fe2" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>getArchiveUri</name></member>
      <member refid="classomexmeta_1_1Editor_1a8494826923de713c19f971fd9c7908c0" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>getLocalUri</name></member>
      <member refid="classomexmeta_1_1Editor_1af987e450e4bf9d75391ad3f5ac6233f6" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>getMetaidBase</name></member>
      <member refid="classomexmeta_1_1Editor_1a242c86222e1aeff337d3af22641db1de" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>getMetaids</name></member>
      <member refid="classomexmeta_1_1Editor_1abfc5a972954cde4ec2112cc0e00a7ed3" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>getModel</name></member>
      <member refid="classomexmeta_1_1Editor_1ad05a3dc568f8919db829e544babbfc6b" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>getModelLevelAnnotationUri</name></member>
      <member refid="classomexmeta_1_1Editor_1a0020d3b9c3e91fb37c134ba8b211c13e" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>getModelUri</name></member>
      <member refid="classomexmeta_1_1Editor_1a514443fe99a6e52154d1fe4f7ec94618" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>getNamespaces</name></member>
      <member refid="classomexmeta_1_1Editor_1a2264cbd2efae17d1d72c3f402d8721bf" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>getRepositoryUri</name></member>
      <member refid="classomexmeta_1_1Editor_1a68ade6a293061a98243a3b2853e55a4b" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>getType</name></member>
      <member refid="classomexmeta_1_1Editor_1a0c3c16e06d9ecbbf9958bb2feb85b56a" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>getUriHandler</name></member>
      <member refid="classomexmeta_1_1Editor_1ad931e829fc9f78717e0c1443c619b7d3" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>getXml</name></member>
      <member refid="classomexmeta_1_1Editor_1a3c4514ca9177b9bc157e9e52af23bc82" prot="private" virt="non-virtual"><scope>omexmeta::Editor</scope><name>metaid_base_</name></member>
      <member refid="classomexmeta_1_1Editor_1ad3c91f02707459e06f4487f9a10fb53c" prot="private" virt="non-virtual"><scope>omexmeta::Editor</scope><name>metaids_</name></member>
      <member refid="classomexmeta_1_1Editor_1a61eeafd61b1be05ea73b7bf784878846" prot="private" virt="non-virtual"><scope>omexmeta::Editor</scope><name>model_</name></member>
      <member refid="classomexmeta_1_1Editor_1adf7c779ffdad4784bf1f0a831b75b83e" prot="private" virt="non-virtual"><scope>omexmeta::Editor</scope><name>namespaces_</name></member>
      <member refid="classomexmeta_1_1Editor_1a4faf7d0c71afca8ded828ac7bdb857f5" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>newEnergyDiff</name></member>
      <member refid="classomexmeta_1_1Editor_1a1943079ddbc4a4c6d896f51f360a11df" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>newPersonalInformation</name></member>
      <member refid="classomexmeta_1_1Editor_1a245b2105c175892d1fddaf693fa9d636" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>newPhysicalEntity</name></member>
      <member refid="classomexmeta_1_1Editor_1a2815d918736ee17d07306c5cf07c8ebf" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>newPhysicalProcess</name></member>
      <member refid="classomexmeta_1_1Editor_1aeae47fb60d955f506de2f16a54c0679a" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>newPhysicalProperty</name></member>
      <member refid="classomexmeta_1_1Editor_1ab36fc15581a0aa0af434af60d4f910ac" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>newPhysicalPropertyPtr</name></member>
      <member refid="classomexmeta_1_1Editor_1a50674b2591d2fed572954ac8490ee21c" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>newSingularAnnotation</name></member>
      <member refid="classomexmeta_1_1Editor_1a6142da2b89068e9638410c3c903e3b64" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>newSingularAnnotation</name></member>
      <member refid="classomexmeta_1_1Editor_1abf4cd9407efdec0a0b8b07189d26cf21" prot="private" virt="non-virtual"><scope>omexmeta::Editor</scope><name>omexMetaXmlPtr_</name></member>
      <member refid="classomexmeta_1_1Editor_1a237078857cd0d8c31ebe5c7200538ffc" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>removeEnergyDiff</name></member>
      <member refid="classomexmeta_1_1Editor_1a8be7fa01bef49ff1c93965781797c9bc" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>removePersonalInformation</name></member>
      <member refid="classomexmeta_1_1Editor_1a0acf94314252b70a4db89f83e6047e8f" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>removePhysicalEntity</name></member>
      <member refid="classomexmeta_1_1Editor_1a42640d74c6afe780738c906bdf346a78" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>removePhysicalProcess</name></member>
      <member refid="classomexmeta_1_1Editor_1a1b126c390f5fc0b7ebcd1e3f691c9ece" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>removePropertyBearer</name></member>
      <member refid="classomexmeta_1_1Editor_1afcb5ce7397aab23fabd3b4b4b89d3a54" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>removeSingleAnnotation</name></member>
      <member refid="classomexmeta_1_1Editor_1ac4bbccf4ad683eaa744a5b9e81e688f8" prot="private" virt="non-virtual"><scope>omexmeta::Editor</scope><name>sbml_semantic_extraction_</name></member>
      <member refid="classomexmeta_1_1Editor_1a206feee18473abbeda5e4e55906e73eb" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>setMetaidBase</name></member>
      <member refid="classomexmeta_1_1Editor_1a83836e19bb1de9c7df69d36e8b61b2b2" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>setNamespaces</name></member>
      <member refid="classomexmeta_1_1Editor_1a3e2c493ed5034a15e6915b7b649b58a3" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>setType</name></member>
      <member refid="classomexmeta_1_1Editor_1ab5b39f1f137312ce77575e73a86dfb05" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>size</name></member>
      <member refid="classomexmeta_1_1Editor_1a6f201bae38c324800d0d55e778cb6135" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>stripAnnotations</name></member>
      <member refid="classomexmeta_1_1Editor_1a2676967741d009a5e9115d031b018318" prot="private" virt="non-virtual"><scope>omexmeta::Editor</scope><name>type_</name></member>
      <member refid="classomexmeta_1_1Editor_1a2bebe515d6a48f4f74a1d25bc791b740" prot="private" virt="non-virtual"><scope>omexmeta::Editor</scope><name>uriHandler_</name></member>
      <member refid="classomexmeta_1_1Editor_1a36eecb635c6384ad186f0e750602b58e" prot="private" virt="non-virtual"><scope>omexmeta::Editor</scope><name>xml_</name></member>
      <member refid="classomexmeta_1_1Editor_1aa11380bb7e2ca7859937c3f5907b6240" prot="public" virt="non-virtual"><scope>omexmeta::Editor</scope><name>~Editor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
