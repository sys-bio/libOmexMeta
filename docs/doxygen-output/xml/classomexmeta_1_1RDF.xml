<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classomexmeta_1_1RDF" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::RDF</compoundname>
    <basecompoundref refid="classomexmeta_1_1IRDF" prot="public" virt="non-virtual">omexmeta::IRDF</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classomexmeta_1_1RDF_1a1979d7d70a4c20f2e63f00c7fa668b1f" prot="public" static="no" mutable="no">
        <type>NamespaceMap</type>
        <definition>NamespaceMap omexmeta::RDF::namespaces_</definition>
        <argsstring></argsstring>
        <name>namespaces_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Storage for namespaces and prefixes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="363" column="22" bodyfile="src/omexmeta/include/omexmeta/RDF.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1RDF_1a82bc53feb93e1243970400fd104174da" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; omexmeta::RDF::seen_namespaces_</definition>
        <argsstring></argsstring>
        <name>seen_namespaces_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Part of the mechanism that propogates namespaces through to serializer.</para>
<para>todo observer pattern might make for more elegant design. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="371" column="21" bodyfile="src/omexmeta/include/omexmeta/RDF.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1RDF_1a59014bbb45a43dbfa760480f1713c473" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string omexmeta::RDF::OMEXlib_</definition>
        <argsstring></argsstring>
        <name>OMEXlib_</name>
        <initializer>= &quot;http://OMEXlibrary.org/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default repository uri </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="376" column="27" bodyfile="src/omexmeta/include/omexmeta/RDF.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classomexmeta_1_1RDF_1a345bcba83c6928f750ba732b6e6c748b" prot="private" static="no" mutable="no">
        <type><ref refid="classredland_1_1LibrdfStorage" kindref="compound">LibrdfStorage</ref></type>
        <definition>LibrdfStorage omexmeta::RDF::storage_</definition>
        <argsstring></argsstring>
        <name>storage_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="408" column="23" bodyfile="src/omexmeta/include/omexmeta/RDF.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1RDF_1a88a09d66eb9d6881fd77e9ef6133b4e6" prot="private" static="no" mutable="no">
        <type><ref refid="classredland_1_1LibrdfModel" kindref="compound">LibrdfModel</ref></type>
        <definition>LibrdfModel omexmeta::RDF::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="409" column="21" bodyfile="src/omexmeta/include/omexmeta/RDF.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1RDF_1ac7eaa8a5c0fdf7b563ba56550fede82a" prot="private" static="no" mutable="no">
        <type>OmexMetaXmlType</type>
        <definition>OmexMetaXmlType omexmeta::RDF::xmlType</definition>
        <argsstring></argsstring>
        <name>xmlType</name>
        <initializer>= OMEXMETA_TYPE_NOTSET</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="410" column="25" bodyfile="src/omexmeta/include/omexmeta/RDF.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1RDF_1a54d08d61cfd6eab43c2034e115150a59" prot="private" static="no" mutable="no">
        <type><ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref></type>
        <definition>UriHandler omexmeta::RDF::uriHandler_</definition>
        <argsstring></argsstring>
        <name>uriHandler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="411" column="20" bodyfile="src/omexmeta/include/omexmeta/RDF.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classomexmeta_1_1RDF_1aea1783a66fd8bf3393acf9a48f9366ce" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::RDF::RDF</definition>
        <argsstring>(const std::string &amp;storage_type=&quot;memory&quot;, const std::string &amp;storage_name=&quot;OmexMetaStore&quot;, const char *storage_options=nullptr, const char *model_options=nullptr)</argsstring>
        <name>RDF</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>storage_type</declname>
          <defval>&quot;memory&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>storage_name</declname>
          <defval>&quot;OmexMetaStore&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>storage_options</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>model_options</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>constructor for <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> class </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>storage_type.</parametername>
</parameternamelist>
<parameterdescription>
<para>Defaults to memory. Other options include: &quot;hashes&quot;, &quot;file&quot;, &quot;mysql&quot;, &quot;postgresql&quot;, &quot;sqlite&quot;, &quot;uri&quot;, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_name</parametername>
</parameternamelist>
<parameterdescription>
<para>name used for storage. When storage is not internally held in memory, this becomes the name of the file or database. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_options</parametername>
</parameternamelist>
<parameterdescription>
<para>options that get passed on to storage. Please study <ulink url="http://librdf.org/docs/api/redland-storage-modules.html">http://librdf.org/docs/api/redland-storage-modules.html</ulink> for more information. @model_options options that get passed to the model. Please see <ulink url="http://librdf.org/docs/api/index.html">http://librdf.org/docs/api/index.html</ulink> for more details. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="65" column="18" bodyfile="src/omexmeta/RDF.cpp" bodystart="14" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a8c6b384164d81e402bda9d124c20153e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::RDF::~RDF</definition>
        <argsstring>()=default</argsstring>
        <name>~RDF</name>
        <briefdescription>
<para>destructor for <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="72" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ad95c4a8588988efe399c7f984e304990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::RDF::RDF</definition>
        <argsstring>(const RDF &amp;rdf)=delete</argsstring>
        <name>RDF</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> &amp;</type>
          <declname>rdf</declname>
        </param>
        <briefdescription>
<para>copy constructor for <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> class </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> instances are not copyable due to restrictions within the redland libraries. You must instead move <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="80" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a6490b2ea0d10e3026bea587a305b7fb9" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>omexmeta::RDF::RDF</definition>
        <argsstring>(RDF &amp;&amp;rdf) noexcept</argsstring>
        <name>RDF</name>
        <param>
          <type><ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> &amp;&amp;</type>
          <declname>rdf</declname>
        </param>
        <briefdescription>
<para>move constructor for <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> class </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="85" column="9" bodyfile="src/omexmeta/RDF.cpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a9d1b20d798969d3c1dac412c621247b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> &amp;</type>
        <definition>RDF&amp; omexmeta::RDF::operator=</definition>
        <argsstring>(const RDF &amp;rdf)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> &amp;</type>
          <declname>rdf</declname>
        </param>
        <briefdescription>
<para>copy assignment constructor for <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> ojects </para>
        </briefdescription>
        <detaileddescription>
<para>Copy assignment functionality is prohibited for <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> objects. Use move semantics insead. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="92" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ae3739bda3be0986547c31559381f3df4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> &amp;</type>
        <definition>RDF &amp; omexmeta::RDF::operator=</definition>
        <argsstring>(RDF &amp;&amp;rdf) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> &amp;&amp;</type>
          <declname>rdf</declname>
        </param>
        <briefdescription>
<para>move assignment operator for <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="97" column="13" bodyfile="src/omexmeta/RDF.cpp" bodystart="34" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a1ebd37b6dbce97660ed48031686d7f30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int omexmeta::RDF::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <reimplements refid="classomexmeta_1_1IRDF_1aecfe18ec1c54af5308079656f4e94add">size</reimplements>
        <briefdescription>
<para>returns the number of triples currently present in the <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="103" column="13" bodyfile="src/omexmeta/RDF.cpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a6d8ab2edd8f798006ee77a4202bf462e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool omexmeta::RDF::empty</definition>
        <argsstring>() const override</argsstring>
        <name>empty</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a7677907fb2f50601910db2fa950a8004">empty</reimplements>
        <briefdescription>
<para>indicator for whether the <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> graph is empty </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> graph has no triples, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="109" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ad403d7c62ef1cf902fcb8b65c5ad641f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::addFromString</definition>
        <argsstring>(const std::string &amp;str, const std::string &amp;syntax=&quot;guess&quot;) override</argsstring>
        <name>addFromString</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a75d577cd26b9ecaa564df281e176cf9d">addFromString</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>syntax</declname>
          <defval>&quot;guess&quot;</defval>
        </param>
        <briefdescription>
<para>non-static variant of <ref refid="classomexmeta_1_1RDF_1ab282cd4a6d76e87fa9ca91077936eeb5" kindref="member">RDF::fromString()</ref>. Reads rdf into an <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> instance. See <ref refid="classomexmeta_1_1RDF_1ab282cd4a6d76e87fa9ca91077936eeb5" kindref="member">RDF::fromString()</ref> for argument requirements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="123" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="94" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a602c7ca8ca94b151dd97b8a513cef0a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::addFromUri</definition>
        <argsstring>(const std::string &amp;uri_string, const std::string &amp;syntax=&quot;guess&quot;) override</argsstring>
        <name>addFromUri</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a65870ee3c430ed69b5725f5788d3d13f">addFromUri</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>syntax</declname>
          <defval>&quot;guess&quot;</defval>
        </param>
        <briefdescription>
<para>non-static counterpart of <ref refid="classomexmeta_1_1RDF_1a18f57a8d85f89ff7b0575540ab280a2f" kindref="member">RDF::fromUri</ref>. Downloads and parses rdf from a URI. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classomexmeta_1_1RDF_1a18f57a8d85f89ff7b0575540ab280a2f" kindref="member">RDF::fromUri</ref> for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="142" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="159" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1af62debd6edc14e6ff06c28d7726cfef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::addFromFile</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;syntax) override</argsstring>
        <name>addFromFile</name>
        <reimplements refid="classomexmeta_1_1IRDF_1aa5e41fde69be8051f767d219dfa680b6">addFromFile</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>syntax</declname>
        </param>
        <briefdescription>
<para>non-static counter part of <ref refid="classomexmeta_1_1RDF_1a87ab63ef63126945d345d463e0a14f5e" kindref="member">RDF::fromFile</ref>. Reads rdf from annotations in a file </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the filename to read as string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syntax</parametername>
</parameternamelist>
<parameterdescription>
<para>the syntax of the <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> in filename </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an instantiated <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> object</para>
</simplesect>
Uses LibrdfParser::fromFile under the hood </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="160" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="203" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a1fa12a4283c03d068f03ae33c5114c54" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::RDF::toString</definition>
        <argsstring>(const std::string &amp;syntax=&quot;turtle&quot;, const char *mime_type=nullptr, const char *type_uri=nullptr) override</argsstring>
        <name>toString</name>
        <reimplements refid="classomexmeta_1_1IRDF_1ab7dc920117857da3e4bb8a33b2abde22">toString</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>syntax</declname>
          <defval>&quot;turtle&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>mime_type</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>type_uri</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>serialize <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> graph to string </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>syntax</parametername>
</parameternamelist>
<parameterdescription>
<para>the expected output syntax. <ref refid="classOptions" kindref="compound">Options</ref> include: &quot;ntriples&quot;, &quot;turtle&quot;, &quot;rdfxml-xmp&quot;, &quot;rdfxml-abbrev&quot;, &quot;rdfxml&quot;, &quot;dot&quot;, &quot;json-triples&quot;, &quot;json&quot;, &quot;nquads&quot;, &quot;html&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="168" column="21" bodyfile="src/omexmeta/RDF.cpp" bodystart="249" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a3ca48d8b9790b4ccd091204c4d9a0c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::toFile</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;syntax=&quot;turtle&quot;, const char *mime_type=nullptr, const char *type_uri=nullptr) override</argsstring>
        <name>toFile</name>
        <reimplements refid="classomexmeta_1_1IRDF_1abb9b34078ac32441906715ad723585db">toFile</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>syntax</declname>
          <defval>&quot;turtle&quot;</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>mime_type</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>type_uri</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Write annotations to file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>syntax</parametername>
</parameternamelist>
<parameterdescription>
<para>the expected output syntax. <ref refid="classOptions" kindref="compound">Options</ref> include: &quot;ntriples&quot;, &quot;turtle&quot;, &quot;rdfxml-xmp&quot;, &quot;rdfxml-abbrev&quot;, &quot;rdfxml&quot;, &quot;dot&quot;, &quot;json-triples&quot;, &quot;json&quot;, &quot;nquads&quot;, &quot;html&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>full path of file to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mime_type</parametername>
</parameternamelist>
<parameterdescription>
<para>optional valid mime </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>optional type uri </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="181" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="275" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a99bf8d2fd11cc200501ead29f4a8656f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref></type>
        <definition>Editor omexmeta::RDF::toEditor</definition>
        <argsstring>(const std::string &amp;xml, bool generate_new_metaids=false, bool sbml_semantic_extraction=true) override</argsstring>
        <name>toEditor</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a9aea8384b8020a56e0a3cdaddd4fc2a8">toEditor</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>generate_new_metaids</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sbml_semantic_extraction</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>instantiate an <ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>the xml you want to open for editing. <ref refid="classThis" kindref="compound">This</ref> can be any type of xml document, but SBML and CellML are most common. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generate_new_metaids</parametername>
</parameternamelist>
<parameterdescription>
<para>When true, will add metaids onto a copy of the xml source code for annotation. Default = false. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OmexMetaXmlType</parametername>
</parameternamelist>
<parameterdescription>
<para>an indicator enum specifying whether the xml is sbml, cellml or unknown. Default is &quot;OMEXMETA_TYPE_NOTSET&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="191" column="16" bodyfile="src/omexmeta/RDF.cpp" bodystart="292" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a072496a750958bd7c59471bb5229f0bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> *</type>
        <definition>Editor * omexmeta::RDF::toEditorPtr</definition>
        <argsstring>(const std::string &amp;xml, bool generate_new_metaids=false, bool sbml_semantic_extraction=true) override</argsstring>
        <name>toEditorPtr</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a675b2df700c826523be8f413dc9d3879">toEditorPtr</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>generate_new_metaids</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sbml_semantic_extraction</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>instantiate an <ref refid="classomexmeta_1_1Editor" kindref="compound">Editor</ref> object and return a new pointer to it. Memory returned is owned by the caller and needs deleting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>the xml you want to open for editing. <ref refid="classThis" kindref="compound">This</ref> can be any type of xml document, but SBML and CellML are most common. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generate_new_metaids</parametername>
</parameternamelist>
<parameterdescription>
<para>When true, will add metaids onto a copy of the xml source code for annotation. Default = false. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OmexMetaXmlType</parametername>
</parameternamelist>
<parameterdescription>
<para>an indicator enum specifying whether the xml is sbml, cellml or unknown. Default is &quot;OMEXMETA_TYPE_NOTSET&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="201" column="17" bodyfile="src/omexmeta/RDF.cpp" bodystart="296" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ac9a8bab617b61115f8c4500b45d52f62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classredland_1_1LibrdfModel" kindref="compound">LibrdfModel</ref></type>
        <definition>LibrdfModel omexmeta::RDF::getModel</definition>
        <argsstring>() const override</argsstring>
        <name>getModel</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a25b4184633418ebe164dcbb25449f264">getModel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="203" column="21" bodyfile="src/omexmeta/RDF.cpp" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a11792378c78d2c703ba69692eaa64ce9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classredland_1_1LibrdfStorage" kindref="compound">LibrdfStorage</ref></type>
        <definition>LibrdfStorage omexmeta::RDF::getStorage</definition>
        <argsstring>() const override</argsstring>
        <name>getStorage</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a081c601071a6157f845f02ce7db74b37">getStorage</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="205" column="23" bodyfile="src/omexmeta/RDF.cpp" bodystart="301" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ab833a4b13d27b5c7e3667dcfe2937e98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int omexmeta::RDF::commitTransaction</definition>
        <argsstring>() const override</argsstring>
        <name>commitTransaction</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a2a69a4b100bd6ee9c4fc81c9096d1e77">commitTransaction</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="207" column="13" bodyfile="src/omexmeta/RDF.cpp" bodystart="305" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a6a9df7e508c0a516e793614e12771759" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int omexmeta::RDF::startTransaction</definition>
        <argsstring>() const override</argsstring>
        <name>startTransaction</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a8cf7f2394f706e98aae511126e5ce7bf">startTransaction</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="209" column="13" bodyfile="src/omexmeta/RDF.cpp" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a752cdbce8114f3bb9b39734c263ac98b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * omexmeta::RDF::getTransactionHandle</definition>
        <argsstring>() const override</argsstring>
        <name>getTransactionHandle</name>
        <reimplements refid="classomexmeta_1_1IRDF_1aaccc0e3c4fb1b7692d15ecb75216ccb3">getTransactionHandle</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="211" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="313" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a8962e4cfd044a0a76fc09f35d125c40a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int omexmeta::RDF::startTransactionWithHandle</definition>
        <argsstring>(void *handle) const override</argsstring>
        <name>startTransactionWithHandle</name>
        <reimplements refid="classomexmeta_1_1IRDF_1ad2e4378996118885b2105b00a0986d2c">startTransactionWithHandle</reimplements>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="213" column="13" bodyfile="src/omexmeta/RDF.cpp" bodystart="317" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a3fd8f1647bbe570d1f4efdffe378d624" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int omexmeta::RDF::getTransactionRollback</definition>
        <argsstring>() const override</argsstring>
        <name>getTransactionRollback</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a7fefdb7f8725c44d77ddb2194ad09ff8">getTransactionRollback</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="215" column="13" bodyfile="src/omexmeta/RDF.cpp" bodystart="321" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a2d8400380bc4361fb8ffaf5e90c8c7fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::RDF::queryResultsAsString</definition>
        <argsstring>(const std::string &amp;query_str, const std::string &amp;results_syntax) override</argsstring>
        <name>queryResultsAsString</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a4e527f3cda44ecb05b58ec6d3ceae056">queryResultsAsString</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>query_str</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>results_syntax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="219" column="21" bodyfile="src/omexmeta/RDF.cpp" bodystart="262" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1af529c3765fa9bccbc532c01243da557e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>ResultsMap</type>
        <definition>ResultsMap omexmeta::RDF::queryResultsAsMap</definition>
        <argsstring>(const std::string &amp;query_str) override</argsstring>
        <name>queryResultsAsMap</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a8409c10ab5a8f3208127f162bb2436d1">queryResultsAsMap</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>query_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="221" column="20" bodyfile="src/omexmeta/RDF.cpp" bodystart="269" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a867deb1681500712e942b61e4e1460c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::unordered_map&lt; std::string, std::string &gt;</type>
        <definition>std::unordered_map&lt; std::string, std::string &gt; omexmeta::RDF::propagateNamespacesFromParser</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;seen_namespaces) override</argsstring>
        <name>propagateNamespacesFromParser</name>
        <reimplements refid="classomexmeta_1_1IRDF_1ae686e65ae3cff9025c80abfb5c7643b2">propagateNamespacesFromParser</reimplements>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>seen_namespaces</declname>
        </param>
        <briefdescription>
<para>compared namespaces seen with namespaces known and ensures models that use a known namespace use that namespace. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seen_namespaces</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of strings of namespaces the parser has seen before. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="231" column="9" bodyfile="src/omexmeta/RDF.cpp" bodystart="231" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a501c173fc1b60932391f5f7a3ff8212e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>OmexMetaXmlType</type>
        <definition>OmexMetaXmlType omexmeta::RDF::getXmlType</definition>
        <argsstring>() const override</argsstring>
        <name>getXmlType</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a2086b9e03996090d9ae0d47980d21362">getXmlType</reimplements>
        <briefdescription>
<para>getter for xmlType attribue. </para>
        </briefdescription>
        <detaileddescription>
<para>when the rdf graph is sbml, it will return OMEXMETA_TYPE_SBML. When cellML it will return OMEXMETA_TYPE_CELLML. Otherwise it is OMEXMETA_TYPE_UNKNOWN. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="240" column="25" bodyfile="src/omexmeta/RDF.cpp" bodystart="405" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1add69d33d544dc31789b2ff0a71182a84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::RDF::operator==</definition>
        <argsstring>(const RDF &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="241" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="464" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ac652b39964477c8ea69e5218f2203013" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::RDF::operator!=</definition>
        <argsstring>(const RDF &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="242" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="467" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a72705a830be2b6d6ed40d2cb65136335" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::setXmlType</definition>
        <argsstring>(OmexMetaXmlType xmlType) override</argsstring>
        <name>setXmlType</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a842d156fe9fd94ac2762f813cb1e8a44">setXmlType</reimplements>
        <param>
          <type>OmexMetaXmlType</type>
          <declname>xmlType</declname>
        </param>
        <briefdescription>
<para>set the xml type for the current graph. </para>
        </briefdescription>
        <detaileddescription>
<para>If you have been reading from an SBML you cannot then read from another syntax (such as cellml). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="249" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="409" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ae4ba9a6a862c4acce2f6757a99b4c4c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::RDF::getRepositoryUri</definition>
        <argsstring>() const override</argsstring>
        <name>getRepositoryUri</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a5be6df9c2dfe0ac487f80fd280cda45a">getRepositoryUri</reimplements>
        <briefdescription>
<para>getter for repository uri which defaults to &quot;http://omex-library.org/&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="255" column="27" bodyfile="src/omexmeta/RDF.cpp" bodystart="365" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a9f35a52ca041be0f036197989cdca3e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::setRepositoryUri</definition>
        <argsstring>(const std::string &amp;repositoryName) override</argsstring>
        <name>setRepositoryUri</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a5cbbc6f0c8364656cf7beb27c9f29fa4">setRepositoryUri</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>repositoryName</declname>
        </param>
        <briefdescription>
<para>setter for the repository uri which defaults to &quot;http://omex-library.org/&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>repositoryName</parametername>
</parameternamelist>
<parameterdescription>
<para>the repository uri. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="262" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="369" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a6cba8783aa84a3df928825ce44555733" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::RDF::getArchiveUri</definition>
        <argsstring>() const override</argsstring>
        <name>getArchiveUri</name>
        <reimplements refid="classomexmeta_1_1IRDF_1aea1cc8d44420baade3246b7fa9cb937f">getArchiveUri</reimplements>
        <briefdescription>
<para>getter for archiveUri attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>default to <ulink url="http://omex-library.org/NewOmex.omex/">http://omex-library.org/NewOmex.omex/</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="268" column="27" bodyfile="src/omexmeta/RDF.cpp" bodystart="373" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1aabb921ecd37e3e9fc0e29066b658bf59" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::setArchiveUri</definition>
        <argsstring>(const std::string &amp;archiveName) override</argsstring>
        <name>setArchiveUri</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a2a441ed8298f7d743dc4ba5aa83b8eef">setArchiveUri</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>archiveName</declname>
        </param>
        <briefdescription>
<para>setter for archiveUri attribute. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>archiveName</parametername>
</parameternamelist>
<parameterdescription>
<para>the new name for archive uri attribute</para>
</parameterdescription>
</parameteritem>
</parameterlist>
default to <ulink url="http://omex-library.org/NewOmex.omex/">http://omex-library.org/NewOmex.omex/</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="275" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="377" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a0529edb78dde0798541cdc9761e2a0e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::RDF::getModelUri</definition>
        <argsstring>() const override</argsstring>
        <name>getModelUri</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a0e2ab7f825c02de3d038f6165490abc3">getModelUri</reimplements>
        <briefdescription>
<para>getter for model uri. </para>
        </briefdescription>
        <detaileddescription>
<para>defaults to <ulink url="http://omex-library.org/NewOmex.omex/NewModel.xml">http://omex-library.org/NewOmex.omex/NewModel.xml</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="281" column="27" bodyfile="src/omexmeta/RDF.cpp" bodystart="381" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a0c6ec28bb9cd9730224331ed69d41cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::setModelUri</definition>
        <argsstring>(std::string modelName) override</argsstring>
        <name>setModelUri</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a3740c0f6591c94dd7ff6cca94382a43a">setModelUri</reimplements>
        <param>
          <type>std::string</type>
          <declname>modelName</declname>
        </param>
        <briefdescription>
<para>setter for model uri. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelName</parametername>
</parameternamelist>
<parameterdescription>
<para>string for new model uri.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
defaults to <ulink url="http://omex-library.org/NewOmex.omex/NewModel.xml">http://omex-library.org/NewOmex.omex/NewModel.xml</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="288" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="385" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a2f1d018479ca77e429760f7bd517f597" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::RDF::getModelMetaid</definition>
        <argsstring>() override</argsstring>
        <name>getModelMetaid</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a0cd8eed096c3179dcc9de525e0235610">getModelMetaid</reimplements>
        <briefdescription>
<para>gets the uri fragment used for model level annotations. <ref refid="classThis" kindref="compound">This</ref> must be a valid metaid in your model and should be attached to a &quot;model&quot; element </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="294" column="27" bodyfile="src/omexmeta/RDF.cpp" bodystart="389" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a653aeeb8b6ed38c98277a3f9c900bd93" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::setModelMetaid</definition>
        <argsstring>(const std::string &amp;modelMetaid) override</argsstring>
        <name>setModelMetaid</name>
        <reimplements refid="classomexmeta_1_1IRDF_1acb06886f7cfb72a4d685e55ef4e21b50">setModelMetaid</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>modelMetaid</declname>
        </param>
        <briefdescription>
<para>sets the uri fragment used for model level annotations. <ref refid="classThis" kindref="compound">This</ref> must be a valid metaid in your model and should be attached to a &quot;model&quot; element </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="300" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="393" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ae7e24ae8c944722562a545e69520264b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::RDF::getModelLevelAnnotationUri</definition>
        <argsstring>() override</argsstring>
        <name>getModelLevelAnnotationUri</name>
        <reimplements refid="classomexmeta_1_1IRDF_1ac9130997e714afb210c2067b01cd071c">getModelLevelAnnotationUri</reimplements>
        <briefdescription>
<para>get the full uri for model level annotations. </para>
        </briefdescription>
        <detaileddescription>
<para>the modelUri concatonated with the model metaid fragment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="306" column="21" bodyfile="src/omexmeta/RDF.cpp" bodystart="397" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a7399a80108553b138bf168a76f8a4adf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::RDF::getLocalUri</definition>
        <argsstring>() const override</argsstring>
        <name>getLocalUri</name>
        <reimplements refid="classomexmeta_1_1IRDF_1af50f054c1e3520a00b587e1961e9fbea">getLocalUri</reimplements>
        <briefdescription>
<para>getter for local uri attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>defaults to <ulink url="http://omex-library.org/NewOmex.omex/NewModel.rdf#">http://omex-library.org/NewOmex.omex/NewModel.rdf#</ulink> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="311" column="27" bodyfile="src/omexmeta/RDF.cpp" bodystart="401" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ab6b74c206a0b9cbce946f9d7bd8d1f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::addTriple</definition>
        <argsstring>(const Triple &amp;triple) override</argsstring>
        <name>addTriple</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a0ff7b6b9535210e9e0174adbe548cc5c">addTriple</reimplements>
        <param>
          <type>const <ref refid="classomexmeta_1_1Triple" kindref="compound">Triple</ref> &amp;</type>
          <declname>triple</declname>
        </param>
        <briefdescription>
<para>add a <ref refid="classomexmeta_1_1Triple" kindref="compound">Triple</ref> to the current model </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="316" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="471" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1aa8f640de046b3c1bd43de0fe5aba0958" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::addTriples</definition>
        <argsstring>(Triples &amp;triples) override</argsstring>
        <name>addTriples</name>
        <reimplements refid="classomexmeta_1_1IRDF_1a45c579cbc2f6fe177bc51f97747cf949">addTriples</reimplements>
        <param>
          <type><ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref> &amp;</type>
          <declname>triples</declname>
        </param>
        <briefdescription>
<para>add a set of <ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref> to the current model </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="321" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="479" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a9565b7c0ad81abed2243c0a76f1ebea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
        <definition>UriHandler &amp; omexmeta::RDF::getUriHandler</definition>
        <argsstring>() override</argsstring>
        <name>getUriHandler</name>
        <reimplements refid="classomexmeta_1_1IRDF_1af30397ff81b27bdaede2c9491b7558ee">getUriHandler</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="348" column="20" bodyfile="src/omexmeta/RDF.cpp" bodystart="559" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ac8c1f50b7fd693518b41d3000a357fa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::purgeRDFBag</definition>
        <argsstring>()</argsstring>
        <name>purgeRDFBag</name>
        <briefdescription>
<para>remove rdf:Bag constructs from the current rdf graph </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="353" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1aea054c0e60e0aade66d52998b3559eec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::translateVcard</definition>
        <argsstring>()</argsstring>
        <name>translateVcard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Translate VCARD into foaf </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="358" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="88" bodyend="92"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ab282cd4a6d76e87fa9ca91077936eeb5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref></type>
        <definition>RDF omexmeta::RDF::fromString</definition>
        <argsstring>(const std::string &amp;str, const std::string &amp;syntax=&quot;guess&quot;)</argsstring>
        <name>fromString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>syntax</declname>
          <defval>&quot;guess&quot;</defval>
        </param>
        <briefdescription>
<para>instantiate an <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> instance and read annotations from a string. <ref refid="classThis" kindref="compound">This</ref> is a static method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>a reference to the string containing annotations </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syntax</parametername>
</parameternamelist>
<parameterdescription>
<para>which syntax str is in. Default=&quot;guess&quot; : try to guess. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="117" column="20" bodyfile="src/omexmeta/RDF.cpp" bodystart="53" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a18f57a8d85f89ff7b0575540ab280a2f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref></type>
        <definition>RDF omexmeta::RDF::fromUri</definition>
        <argsstring>(const std::string &amp;uri_string, const std::string &amp;syntax=&quot;guess&quot;)</argsstring>
        <name>fromUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>syntax</declname>
          <defval>&quot;guess&quot;</defval>
        </param>
        <briefdescription>
<para>parse <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> directly from a uri </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri_string</parametername>
</parameternamelist>
<parameterdescription>
<para>the uri to download containing <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syntax</parametername>
</parameternamelist>
<parameterdescription>
<para>the syntax that the <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> is in </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> an instantiated <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> object.</para>
</simplesect>
downloads uri from the internet and creates an <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> graph. See Librdf::parseUri() for more details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="134" column="20" bodyfile="src/omexmeta/RDF.cpp" bodystart="130" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a87ab63ef63126945d345d463e0a14f5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref></type>
        <definition>RDF omexmeta::RDF::fromFile</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;syntax)</argsstring>
        <name>fromFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>syntax</declname>
        </param>
        <briefdescription>
<para>read rdf from annotations in a file </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the filename to read as string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syntax</parametername>
</parameternamelist>
<parameterdescription>
<para>the syntax of the <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> in filename </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an instantiated <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> object</para>
</simplesect>
Uses LibrdfParser::fromFile under the hood </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="151" column="20" bodyfile="src/omexmeta/RDF.cpp" bodystart="178" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ae01ed260e02eda2141ffe1288f78c177" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostringstream</type>
        <definition>std::ostringstream omexmeta::RDF::listOptions</definition>
        <argsstring>()</argsstring>
        <name>listOptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="217" column="35" bodyfile="src/omexmeta/RDF.cpp" bodystart="325" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a436984961a0a9881824e031b855b7413" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::RDF::equals</definition>
        <argsstring>(RDF *actual, const std::string &amp;expected, const std::string &amp;syntax=&quot;turtle&quot;, bool verbose=false)</argsstring>
        <name>equals</name>
        <param>
          <type><ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>syntax</declname>
          <defval>&quot;turtle&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>test for equality between </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actual</parametername>
</parameternamelist>
<parameterdescription>
<para>and</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expected</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="326" column="21" bodyfile="src/omexmeta/RDF.cpp" bodystart="499" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a43fa92ba852b2181e0b437c812abac7d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::RDF::equals</definition>
        <argsstring>(const Triple &amp;actual, const std::string &amp;expected, const std::string &amp;syntax=&quot;turtle&quot;, bool verbose=false)</argsstring>
        <name>equals</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1Triple" kindref="compound">Triple</ref> &amp;</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>syntax</declname>
          <defval>&quot;turtle&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>test for equality between </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actual</parametername>
</parameternamelist>
<parameterdescription>
<para>and</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expected</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="331" column="21" bodyfile="src/omexmeta/RDF.cpp" bodystart="512" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a91068cb9e9f5f5b3295de96dbf9d243b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::RDF::equals</definition>
        <argsstring>(Triples &amp;actual, const std::string &amp;expected, const std::string &amp;syntax=&quot;turtle&quot;, bool verbose=false)</argsstring>
        <name>equals</name>
        <param>
          <type><ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref> &amp;</type>
          <declname>actual</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>syntax</declname>
          <defval>&quot;turtle&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>test for equality between </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actual</parametername>
</parameternamelist>
<parameterdescription>
<para>and</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expected</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="336" column="21" bodyfile="src/omexmeta/RDF.cpp" bodystart="528" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a60d25001511fbde99b4ca802d8e7621c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::RDF::equals</definition>
        <argsstring>(RDF *actual, RDF *expected, const std::string &amp;syntax=&quot;turtle&quot;, bool verbose=false)</argsstring>
        <name>equals</name>
        <param>
          <type><ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> *</type>
          <declname>actual</declname>
        </param>
        <param>
          <type><ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>syntax</declname>
          <defval>&quot;turtle&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>test for equality between </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actual</parametername>
</parameternamelist>
<parameterdescription>
<para>and</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expected</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="341" column="21" bodyfile="src/omexmeta/RDF.cpp" bodystart="488" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a1ec9f1e100bd55b556065856f1def174" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::RDF::equals</definition>
        <argsstring>(const std::string &amp;first, const std::string &amp;second, const std::string &amp;first_syntax=&quot;turtle&quot;, const std::string &amp;second_syntax=&quot;turtle&quot;, bool verbose=false)</argsstring>
        <name>equals</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>first</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>second</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>first_syntax</declname>
          <defval>&quot;turtle&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>second_syntax</declname>
          <defval>&quot;turtle&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>test for equality between </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>and</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>second</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="346" column="21" bodyfile="src/omexmeta/RDF.cpp" bodystart="544" bodyend="556"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a8383a1214020b9228ba5018868612a74" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::classifyXmlType</definition>
        <argsstring>(const std::string &amp;xml, const std::string &amp;input_syntax)</argsstring>
        <name>classifyXmlType</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>input_syntax</declname>
        </param>
        <briefdescription>
<para>autoset the xmlType variable based on xml content. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="382" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="413" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a2b7d4e2ddeaa44c26d4d82478b789a5e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::classifyXmlTypeFromFile</definition>
        <argsstring>(const std::string &amp;xml_file, const std::string &amp;input_syntax)</argsstring>
        <name>classifyXmlTypeFromFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml_file</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>input_syntax</declname>
        </param>
        <briefdescription>
<para>reads xml from file before calling classifyXmlType </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="387" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="436" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1ade6ca329272d5de27496183a81bbec8a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::extractSemanticInformationFromSBML</definition>
        <argsstring>(const std::string &amp;sbml)</argsstring>
        <name>extractSemanticInformationFromSBML</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sbml</declname>
        </param>
        <briefdescription>
<para>pull semantic information out of the sbml int the <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> graph </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="393" column="14" bodyfile="src/omexmeta/RDF.cpp" bodystart="447" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1add8f3d957f24a26785f29b85d50f4399" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::freeRDF</definition>
        <argsstring>()</argsstring>
        <name>freeRDF</name>
        <briefdescription>
<para>release memory consumed by <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Memory consumed by <ref refid="classomexmeta_1_1RDF" kindref="compound">RDF</ref> is destructed using RAII so users normally do not need this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="400" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1RDF_1a5dbc21ee385932368917630201d1df76" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::RDF::setLogHandlers</definition>
        <argsstring>()</argsstring>
        <name>setLogHandlers</name>
        <briefdescription>
<para>set custom handler functions for librdf, raptor and rasqal </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/RDF.h" line="406" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>omexmeta::IRDF</label>
        <link refid="classomexmeta_1_1IRDF"/>
      </node>
      <node id="1">
        <label>omexmeta::RDF</label>
        <link refid="classomexmeta_1_1RDF"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>omexmeta::IRDF</label>
        <link refid="classomexmeta_1_1IRDF"/>
      </node>
      <node id="1">
        <label>omexmeta::RDF</label>
        <link refid="classomexmeta_1_1RDF"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/omexmeta/include/omexmeta/RDF.h" line="50" column="5" bodyfile="src/omexmeta/include/omexmeta/RDF.h" bodystart="50" bodyend="412"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1RDF_1af62debd6edc14e6ff06c28d7726cfef4" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>addFromFile</name></member>
      <member refid="classomexmeta_1_1RDF_1ad403d7c62ef1cf902fcb8b65c5ad641f" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>addFromString</name></member>
      <member refid="classomexmeta_1_1RDF_1a602c7ca8ca94b151dd97b8a513cef0a4" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>addFromUri</name></member>
      <member refid="classomexmeta_1_1RDF_1ab6b74c206a0b9cbce946f9d7bd8d1f56" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>addTriple</name></member>
      <member refid="classomexmeta_1_1RDF_1aa8f640de046b3c1bd43de0fe5aba0958" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>addTriples</name></member>
      <member refid="classomexmeta_1_1RDF_1a8383a1214020b9228ba5018868612a74" prot="private" virt="non-virtual"><scope>omexmeta::RDF</scope><name>classifyXmlType</name></member>
      <member refid="classomexmeta_1_1RDF_1a2b7d4e2ddeaa44c26d4d82478b789a5e" prot="private" virt="non-virtual"><scope>omexmeta::RDF</scope><name>classifyXmlTypeFromFile</name></member>
      <member refid="classomexmeta_1_1RDF_1ab833a4b13d27b5c7e3667dcfe2937e98" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>commitTransaction</name></member>
      <member refid="classomexmeta_1_1RDF_1a6d8ab2edd8f798006ee77a4202bf462e" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>empty</name></member>
      <member refid="classomexmeta_1_1RDF_1a436984961a0a9881824e031b855b7413" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>equals</name></member>
      <member refid="classomexmeta_1_1RDF_1a43fa92ba852b2181e0b437c812abac7d" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>equals</name></member>
      <member refid="classomexmeta_1_1RDF_1a91068cb9e9f5f5b3295de96dbf9d243b" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>equals</name></member>
      <member refid="classomexmeta_1_1RDF_1a60d25001511fbde99b4ca802d8e7621c" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>equals</name></member>
      <member refid="classomexmeta_1_1RDF_1a1ec9f1e100bd55b556065856f1def174" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>equals</name></member>
      <member refid="classomexmeta_1_1RDF_1ade6ca329272d5de27496183a81bbec8a" prot="private" virt="non-virtual"><scope>omexmeta::RDF</scope><name>extractSemanticInformationFromSBML</name></member>
      <member refid="classomexmeta_1_1RDF_1add8f3d957f24a26785f29b85d50f4399" prot="private" virt="non-virtual"><scope>omexmeta::RDF</scope><name>freeRDF</name></member>
      <member refid="classomexmeta_1_1RDF_1a87ab63ef63126945d345d463e0a14f5e" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>fromFile</name></member>
      <member refid="classomexmeta_1_1RDF_1ab282cd4a6d76e87fa9ca91077936eeb5" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>fromString</name></member>
      <member refid="classomexmeta_1_1RDF_1a18f57a8d85f89ff7b0575540ab280a2f" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>fromUri</name></member>
      <member refid="classomexmeta_1_1RDF_1a6cba8783aa84a3df928825ce44555733" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>getArchiveUri</name></member>
      <member refid="classomexmeta_1_1RDF_1a7399a80108553b138bf168a76f8a4adf" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>getLocalUri</name></member>
      <member refid="classomexmeta_1_1RDF_1ac9a8bab617b61115f8c4500b45d52f62" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>getModel</name></member>
      <member refid="classomexmeta_1_1RDF_1ae7e24ae8c944722562a545e69520264b" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>getModelLevelAnnotationUri</name></member>
      <member refid="classomexmeta_1_1RDF_1a2f1d018479ca77e429760f7bd517f597" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>getModelMetaid</name></member>
      <member refid="classomexmeta_1_1RDF_1a0529edb78dde0798541cdc9761e2a0e7" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>getModelUri</name></member>
      <member refid="classomexmeta_1_1RDF_1ae4ba9a6a862c4acce2f6757a99b4c4c2" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>getRepositoryUri</name></member>
      <member refid="classomexmeta_1_1RDF_1a11792378c78d2c703ba69692eaa64ce9" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>getStorage</name></member>
      <member refid="classomexmeta_1_1RDF_1a752cdbce8114f3bb9b39734c263ac98b" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>getTransactionHandle</name></member>
      <member refid="classomexmeta_1_1RDF_1a3fd8f1647bbe570d1f4efdffe378d624" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>getTransactionRollback</name></member>
      <member refid="classomexmeta_1_1RDF_1a9565b7c0ad81abed2243c0a76f1ebea3" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>getUriHandler</name></member>
      <member refid="classomexmeta_1_1RDF_1a501c173fc1b60932391f5f7a3ff8212e" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>getXmlType</name></member>
      <member refid="classomexmeta_1_1RDF_1ae01ed260e02eda2141ffe1288f78c177" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>listOptions</name></member>
      <member refid="classomexmeta_1_1RDF_1a88a09d66eb9d6881fd77e9ef6133b4e6" prot="private" virt="non-virtual"><scope>omexmeta::RDF</scope><name>model_</name></member>
      <member refid="classomexmeta_1_1RDF_1a1979d7d70a4c20f2e63f00c7fa668b1f" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>namespaces_</name></member>
      <member refid="classomexmeta_1_1RDF_1a59014bbb45a43dbfa760480f1713c473" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>OMEXlib_</name></member>
      <member refid="classomexmeta_1_1RDF_1ac652b39964477c8ea69e5218f2203013" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>operator!=</name></member>
      <member refid="classomexmeta_1_1RDF_1a9d1b20d798969d3c1dac412c621247b9" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>operator=</name></member>
      <member refid="classomexmeta_1_1RDF_1ae3739bda3be0986547c31559381f3df4" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>operator=</name></member>
      <member refid="classomexmeta_1_1RDF_1add69d33d544dc31789b2ff0a71182a84" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>operator==</name></member>
      <member refid="classomexmeta_1_1RDF_1a867deb1681500712e942b61e4e1460c6" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>propagateNamespacesFromParser</name></member>
      <member refid="classomexmeta_1_1RDF_1ac8c1f50b7fd693518b41d3000a357fa4" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>purgeRDFBag</name></member>
      <member refid="classomexmeta_1_1RDF_1af529c3765fa9bccbc532c01243da557e" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>queryResultsAsMap</name></member>
      <member refid="classomexmeta_1_1RDF_1a2d8400380bc4361fb8ffaf5e90c8c7fd" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>queryResultsAsString</name></member>
      <member refid="classomexmeta_1_1RDF_1aea1783a66fd8bf3393acf9a48f9366ce" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>RDF</name></member>
      <member refid="classomexmeta_1_1RDF_1ad95c4a8588988efe399c7f984e304990" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>RDF</name></member>
      <member refid="classomexmeta_1_1RDF_1a6490b2ea0d10e3026bea587a305b7fb9" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>RDF</name></member>
      <member refid="classomexmeta_1_1RDF_1a82bc53feb93e1243970400fd104174da" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>seen_namespaces_</name></member>
      <member refid="classomexmeta_1_1RDF_1aabb921ecd37e3e9fc0e29066b658bf59" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>setArchiveUri</name></member>
      <member refid="classomexmeta_1_1RDF_1a5dbc21ee385932368917630201d1df76" prot="private" virt="non-virtual"><scope>omexmeta::RDF</scope><name>setLogHandlers</name></member>
      <member refid="classomexmeta_1_1RDF_1a653aeeb8b6ed38c98277a3f9c900bd93" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>setModelMetaid</name></member>
      <member refid="classomexmeta_1_1RDF_1a0c6ec28bb9cd9730224331ed69d41cad" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>setModelUri</name></member>
      <member refid="classomexmeta_1_1RDF_1a9f35a52ca041be0f036197989cdca3e7" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>setRepositoryUri</name></member>
      <member refid="classomexmeta_1_1RDF_1a72705a830be2b6d6ed40d2cb65136335" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>setXmlType</name></member>
      <member refid="classomexmeta_1_1RDF_1a1ebd37b6dbce97660ed48031686d7f30" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>size</name></member>
      <member refid="classomexmeta_1_1RDF_1a6a9df7e508c0a516e793614e12771759" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>startTransaction</name></member>
      <member refid="classomexmeta_1_1RDF_1a8962e4cfd044a0a76fc09f35d125c40a" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>startTransactionWithHandle</name></member>
      <member refid="classomexmeta_1_1RDF_1a345bcba83c6928f750ba732b6e6c748b" prot="private" virt="non-virtual"><scope>omexmeta::RDF</scope><name>storage_</name></member>
      <member refid="classomexmeta_1_1RDF_1a99bf8d2fd11cc200501ead29f4a8656f" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>toEditor</name></member>
      <member refid="classomexmeta_1_1RDF_1a072496a750958bd7c59471bb5229f0bb" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>toEditorPtr</name></member>
      <member refid="classomexmeta_1_1RDF_1a3ca48d8b9790b4ccd091204c4d9a0c05" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>toFile</name></member>
      <member refid="classomexmeta_1_1RDF_1a1fa12a4283c03d068f03ae33c5114c54" prot="public" virt="virtual"><scope>omexmeta::RDF</scope><name>toString</name></member>
      <member refid="classomexmeta_1_1RDF_1aea054c0e60e0aade66d52998b3559eec" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>translateVcard</name></member>
      <member refid="classomexmeta_1_1RDF_1a54d08d61cfd6eab43c2034e115150a59" prot="private" virt="non-virtual"><scope>omexmeta::RDF</scope><name>uriHandler_</name></member>
      <member refid="classomexmeta_1_1RDF_1ac7eaa8a5c0fdf7b563ba56550fede82a" prot="private" virt="non-virtual"><scope>omexmeta::RDF</scope><name>xmlType</name></member>
      <member refid="classomexmeta_1_1RDF_1a8c6b384164d81e402bda9d124c20153e" prot="public" virt="non-virtual"><scope>omexmeta::RDF</scope><name>~RDF</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
