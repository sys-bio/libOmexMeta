<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classRedlandLibrdfException" kind="class" language="C++" prot="public">
    <compoundname>RedlandLibrdfException</compoundname>
    <basecompoundref refid="classException" prot="public" virt="non-virtual">Exception</basecompoundref>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classRedlandLibrdfException_1ac541ead5c20548813d7dea73c28c7fab" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Exception::Exception</definition>
        <argsstring>(const char *message)</argsstring>
        <name>Exception</name>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor (C strings). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>C-style string error message. The string contents are copied upon construction. Hence, responsibility for deleting the char* lies with the caller. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfException.h" line="54" column="5" bodyfile="src/redland/RedlandWrapper/src/include/redland/LibrdfException.h" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classRedlandLibrdfException_1a0b1693d4d5007815322070c907ee5cc2" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Exception::Exception</definition>
        <argsstring>(std::string message)</argsstring>
        <name>Exception</name>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor (C++ STL strings). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The error message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfException.h" line="54" column="5" bodyfile="src/redland/RedlandWrapper/src/include/redland/LibrdfException.h" bodystart="26" bodyend="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>RedlandLibrdfException</label>
        <link refid="classRedlandLibrdfException"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Exception</label>
        <link refid="classException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>RedlandLibrdfException</label>
        <link refid="classRedlandLibrdfException"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Exception</label>
        <link refid="classException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfException.h" line="53" column="1" bodyfile="src/redland/RedlandWrapper/src/include/redland/LibrdfException.h" bodystart="53" bodyend="55"/>
    <listofallmembers>
      <member refid="classRedlandLibrdfException_1ac541ead5c20548813d7dea73c28c7fab" prot="private" virt="non-virtual"><scope>RedlandLibrdfException</scope><name>Exception</name></member>
      <member refid="classRedlandLibrdfException_1a0b1693d4d5007815322070c907ee5cc2" prot="private" virt="non-virtual"><scope>RedlandLibrdfException</scope><name>Exception</name></member>
      <member refid="classException_1ac541ead5c20548813d7dea73c28c7fab" prot="public" virt="non-virtual" ambiguityscope="Exception::"><scope>RedlandLibrdfException</scope><name>Exception</name></member>
      <member refid="classException_1a0b1693d4d5007815322070c907ee5cc2" prot="public" virt="non-virtual" ambiguityscope="Exception::"><scope>RedlandLibrdfException</scope><name>Exception</name></member>
      <member refid="classException_1a5d59cc46086c61391ed26773ce861780" prot="protected" virt="non-virtual"><scope>RedlandLibrdfException</scope><name>msg_</name></member>
      <member refid="classException_1ae7ba8334eb35e001b4b0c6df9339c0dc" prot="public" virt="non-virtual"><scope>RedlandLibrdfException</scope><name>what</name></member>
      <member refid="classException_1ab834fdbc275748cf287b994503521ada" prot="public" virt="non-virtual"><scope>RedlandLibrdfException</scope><name>~Exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
