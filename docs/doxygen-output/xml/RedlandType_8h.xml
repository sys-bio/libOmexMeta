<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="RedlandType_8h" kind="file" language="C++">
    <compoundname>RedlandType.h</compoundname>
    <includes local="no">sstream</includes>
    <includes refid="LibrdfWorld_8h" local="yes">redland/LibrdfWorld.h</includes>
    <includes refid="LibrdfException_8h" local="yes">redland/LibrdfException.h</includes>
    <includes refid="Logger_8h" local="yes">redland/Logger.h</includes>
    <includes refid="raptor2_8h" local="yes">raptor2.h</includes>
    <includes refid="rasqal_8h" local="yes">rasqal.h</includes>
    <includes refid="librdf_8h" local="yes">librdf.h</includes>
    <includes local="no">variant</includes>
    <includes local="yes">rdf_uri_internal.h</includes>
    <includedby refid="LibrdfQueryResults_8h" local="yes">src/redland/RedlandWrapper/src/include/redland/LibrdfQueryResults.h</includedby>
    <includedby refid="LibrdfSerializer_8h" local="yes">src/redland/RedlandWrapper/src/include/redland/LibrdfSerializer.h</includedby>
    <includedby refid="RedlandAPI_8h" local="yes">src/redland/RedlandWrapper/src/include/redland/RedlandAPI.h</includedby>
    <includedby refid="RefCountedRedlandType_8h" local="yes">src/redland/RedlandWrapper/src/include/redland/RefCountedRedlandType.h</includedby>
    <incdepgraph>
      <node id="7">
        <label>stdarg.h</label>
      </node>
      <node id="30">
        <label>functional</label>
      </node>
      <node id="9">
        <label>rasqal.h</label>
        <link refid="rasqal_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>filesystem</label>
      </node>
      <node id="13">
        <label>rdf_init.h</label>
      </node>
      <node id="35">
        <label>spdlog/common.h</label>
      </node>
      <node id="39">
        <label>variant</label>
      </node>
      <node id="34">
        <label>Message.h</label>
        <link refid="Message_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>rdf_stream.h</label>
      </node>
      <node id="16">
        <label>rdf_node.h</label>
      </node>
      <node id="20">
        <label>rdf_storage.h</label>
      </node>
      <node id="25">
        <label>rdf_query.h</label>
      </node>
      <node id="38">
        <label>string</label>
      </node>
      <node id="33">
        <label>redland/Logger.h</label>
        <link refid="Logger_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>rdf_iterator.h</label>
      </node>
      <node id="29">
        <label>regex</label>
      </node>
      <node id="32">
        <label>exception</label>
      </node>
      <node id="22">
        <label>rdf_raptor.h</label>
      </node>
      <node id="21">
        <label>rdf_parser.h</label>
      </node>
      <node id="31">
        <label>redland/LibrdfException.h</label>
        <link refid="LibrdfException_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="8">
        <label>redland_export.h</label>
      </node>
      <node id="19">
        <label>rdf_model.h</label>
      </node>
      <node id="40">
        <label>rdf_uri_internal.h</label>
      </node>
      <node id="17">
        <label>rdf_concepts.h</label>
      </node>
      <node id="2">
        <label>sstream</label>
      </node>
      <node id="1">
        <label>src/redland/RedlandWrapper/src/include/redland/RedlandType.h</label>
        <link refid="RedlandType_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>rdf_hash.h</label>
      </node>
      <node id="15">
        <label>rdf_uri.h</label>
      </node>
      <node id="5">
        <label>raptor2.h</label>
        <link refid="raptor2_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>rdf_log.h</label>
      </node>
      <node id="18">
        <label>rdf_statement.h</label>
      </node>
      <node id="23">
        <label>rdf_serializer.h</label>
      </node>
      <node id="26">
        <label>rdf_utf8.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>librdf.h</label>
        <link refid="librdf_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rdf_digest.h</label>
      </node>
      <node id="3">
        <label>redland/LibrdfWorld.h</label>
        <link refid="LibrdfWorld_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfQueryResults.h</label>
        <link refid="LibrdfQueryResults_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>src/omexmeta/include/omexmeta/Triples.h</label>
        <link refid="Triples_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfQuery.h</label>
        <link refid="LibrdfQuery_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>src/omexmeta/include/omexmeta/Query.h</label>
        <link refid="Query_8h_source"/>
      </node>
      <node id="5">
        <label>src/omexmeta/include/omexmeta/RDF.h</label>
        <link refid="RDF_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>src/omexmeta/include/omexmeta/SBMLSemanticExtraction.h</label>
        <link refid="SBMLSemanticExtraction_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfStream.h</label>
        <link refid="LibrdfStream_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfModel.h</label>
        <link refid="LibrdfModel_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>src/omexmeta/include/omexmeta/Triple.h</label>
        <link refid="Triple_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfStatement.h</label>
        <link refid="LibrdfStatement_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/omexmeta/include/omexmeta/PhysicalEntity.h</label>
        <link refid="PhysicalEntity_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/omexmeta/include/omexmeta/OmexMetaUtils.h</label>
        <link refid="OmexMetaUtils_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/omexmeta/include/omexmeta/IRDF.h</label>
        <link refid="IRDF_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/omexmeta/include/omexmeta/EnergyDiff.h</label>
        <link refid="EnergyDiff_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>src/omexmeta/include/omexmeta/PropertyBearer.h</label>
        <link refid="PropertyBearer_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>src/omexmeta/include/omexmeta/Predicate.h</label>
        <link refid="Predicate_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfStorage.h</label>
        <link refid="LibrdfStorage_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfSerializer.h</label>
        <link refid="LibrdfSerializer_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/omexmeta/include/omexmeta/PersonalInformation.h</label>
        <link refid="PersonalInformation_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/omexmeta/include/omexmeta/OmexMeta.h</label>
        <link refid="OmexMeta_8h_source"/>
      </node>
      <node id="10">
        <label>src/omexmeta/include/omexmeta/Editor.h</label>
        <link refid="Editor_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/omexmeta/include/omexmeta/MetaID.h</label>
        <link refid="MetaID_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>src/omexmeta/include/omexmeta/PhysicalProperty.h</label>
        <link refid="PhysicalProperty_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/redland/RedlandWrapper/src/include/redland/RedlandType.h</label>
        <link refid="RedlandType_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h</label>
        <link refid="LibrdfNode_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/redland/RedlandWrapper/src/include/redland/RedlandAPI.h</label>
        <link refid="RedlandAPI_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/omexmeta/include/omexmeta/ElementExtractor.h</label>
        <link refid="ElementExtractor_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/omexmeta/include/omexmeta/MarkupIdentifier.h</label>
        <link refid="MarkupIdentifier_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/omexmeta/include/omexmeta/OmexMetaXml.h</label>
        <link refid="OmexMetaXml_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/omexmeta/include/omexmeta/UriHandler.h</label>
        <link refid="UriHandler_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/omexmeta/include/omexmeta/VCardTranslator.h</label>
        <link refid="VCardTranslator_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>src/redland/RedlandWrapper/src/include/redland/RefCountedRedlandType.h</label>
        <link refid="RefCountedRedlandType_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfParser.h</label>
        <link refid="LibrdfParser_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/omexmeta/include/omexmeta/OmexMetaCApi.h</label>
        <link refid="OmexMetaCApi_8h_source"/>
      </node>
      <node id="24">
        <label>src/omexmeta/include/omexmeta/Participant.h</label>
        <link refid="Participant_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>src/omexmeta/include/omexmeta/PhysicalProcess.h</label>
        <link refid="PhysicalProcess_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/omexmeta/include/omexmeta/PurgeRDFBag.h</label>
        <link refid="PurgeRDFBag_8h_source"/>
      </node>
      <node id="38">
        <label>src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h</label>
        <link refid="LibrdfUri_8h_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classredland_1_1RedlandType" prot="public">redland::RedlandType</innerclass>
    <innernamespace refid="namespaceredland">redland</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Ciaran<sp/>on<sp/>06/08/2021.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIBOMEXMETA_REDLAND_TYPE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBOMEXMETA_REDLAND_TYPE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;redland/LibrdfWorld.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;redland/LibrdfException.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;redland/Logger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;raptor2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rasqal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;librdf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;variant&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rdf_uri_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">redland<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>world_free_func<sp/>=<sp/>std::function&lt;void(librdf_world<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>storage_free_func<sp/>=<sp/>std::function&lt;void(librdf_storage<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>serializer_free_func<sp/>=<sp/>std::function&lt;void(librdf_serializer<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>parser_free_func<sp/>=<sp/>std::function&lt;void(librdf_parser<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>statement_free_func<sp/>=<sp/>std::function&lt;void(librdf_statement<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>query_free_func<sp/>=<sp/>std::function&lt;void(librdf_query<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>query_results_free_func<sp/>=<sp/>std::function&lt;void(librdf_query_results<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>using<sp/>model_free_func<sp/>=<sp/>std::function&lt;void(librdf_model<sp/>*)&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObjType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FreeFuncType&gt;</highlight></codeline>
<codeline lineno="31" refid="classredland_1_1RedlandType" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classredland_1_1RedlandType_1a3c3a57c6b73d9bea7e0a9cdb9a725006" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1a3c3a57c6b73d9bea7e0a9cdb9a725006" kindref="member">RedlandType</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classredland_1_1RedlandType_1ab7e0f16ed9acd6ba9c65b8e9259301e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ab7e0f16ed9acd6ba9c65b8e9259301e9" kindref="member">RedlandType</ref>(ObjType<sp/>*objType,<sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(ObjType*)&gt;<sp/>func)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>(objType),<sp/>freeFunc_(func)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>call<sp/>this<sp/>from<sp/>the<sp/>constructor<sp/>of<sp/>the<sp/>superclass<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>in<sp/>some<sp/>situations,<sp/>like<sp/>creating<sp/>a<sp/>LibrdfStatement<sp/>/<sp/>Triple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>a<sp/>builder<sp/>interface,<sp/>requires<sp/>that<sp/>the<sp/>nodes<sp/>are<sp/>initially<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1a86304e5a3e82aae8ea4aae868b4fa7e4" kindref="member">RedlandType::checkForNull</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classredland_1_1RedlandType_1a028dab285bfd81fa4efca9206b0cd498" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1a028dab285bfd81fa4efca9206b0cd498" kindref="member">~RedlandType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>err;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Destructing<sp/>a<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(*this).name()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REDLAND_DEBUG(err.str());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1a812fc8fefc5df2081b8a1a384b9e1827" kindref="member">RedlandType::freeObj</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classredland_1_1RedlandType_1a86304e5a3e82aae8ea4aae868b4fa7e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1a86304e5a3e82aae8ea4aae868b4fa7e4" kindref="member">checkForNull</ref>()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classRedlandNullPointerException" kindref="compound">RedlandNullPointerException</ref>(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RedlandNullPointerException:<sp/>checkForNull():<sp/>obj_<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!freeFunc_)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classRedlandNullPointerException" kindref="compound">RedlandNullPointerException</ref>(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;RedlandNullPointerException:<sp/>checkForNull():<sp/>freeFunc_<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classredland_1_1RedlandType_1a812fc8fefc5df2081b8a1a384b9e1827" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1a812fc8fefc5df2081b8a1a384b9e1827" kindref="member">freeObj</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>ObjType<sp/>*get()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classredland_1_1RedlandType_1a89f2c7b5d8133d7b22c54263ea2dcb3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1a89f2c7b5d8133d7b22c54263ea2dcb3b" kindref="member">RedlandType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType</ref><sp/>&amp;other)<sp/>:<sp/>freeFunc_(other.freeFunc_)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/>other.get();</highlight><highlight class="comment">//<sp/>automatically<sp/>increments<sp/>the<sp/>reference<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classredland_1_1RedlandType_1a7884dd6bc66d9880090bb53f14683f1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1a7884dd6bc66d9880090bb53f14683f1f" kindref="member">RedlandType</ref>(<ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType</ref><sp/>&amp;&amp;other)<sp/>noexcept<sp/>:<sp/>freeFunc_(other.freeFunc_)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/>other.get();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.obj_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classredland_1_1RedlandType_1a5dd5fd7edeb2b6c17e8c92eb7ba01cac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType</ref><sp/>&amp;<ref refid="classredland_1_1RedlandType_1a5dd5fd7edeb2b6c17e8c92eb7ba01cac" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType</ref><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>weird<sp/>one<sp/>since<sp/>we&apos;re<sp/>treating<sp/>the<sp/>method<sp/>that<sp/>free&apos;s<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>a<sp/>member<sp/>variable.<sp/>It<sp/>means<sp/>that<sp/>we<sp/>want<sp/>to<sp/>free<sp/>an<sp/>existing<sp/>obj_<sp/>with<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uninitialized<sp/>freeFunc_.<sp/>So<sp/>we<sp/>copy<sp/>it<sp/>across<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_<sp/>=<sp/>other.freeFunc_;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>can<sp/>deal<sp/>with<sp/>obj.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/>other.get();</highlight><highlight class="comment">//<sp/>handles<sp/>reference<sp/>count<sp/>automatically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classredland_1_1RedlandType_1a22e381182a5642883ad578db40368f13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType</ref><sp/>&amp;<ref refid="classredland_1_1RedlandType_1a22e381182a5642883ad578db40368f13" kindref="member">operator=</ref>(<ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType</ref><sp/>&amp;&amp;other)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>weird<sp/>one<sp/>since<sp/>we&apos;re<sp/>treating<sp/>the<sp/>method<sp/>that<sp/>free&apos;s<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>a<sp/>member<sp/>variable.<sp/>It<sp/>means<sp/>that<sp/>we<sp/>want<sp/>to<sp/>free<sp/>an<sp/>existing<sp/>obj_<sp/>with<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uninitialized<sp/>freeFunc_.<sp/>So<sp/>we<sp/>copy<sp/>it<sp/>across<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_<sp/>=<sp/>other.freeFunc_;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>can<sp/>deal<sp/>with<sp/>obj.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/>other.get();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.obj_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classredland_1_1RedlandType_1a9fc5b1ce564f4c2497855cd965df1cfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1a9fc5b1ce564f4c2497855cd965df1cfd" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>==<sp/>rhs.<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(freeFunc_)<sp/>==<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(rhs.freeFunc_);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classredland_1_1RedlandType_1a4b0707a7465ffb5952bae3651f8c6d41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1a4b0707a7465ffb5952bae3651f8c6d41" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType" kindref="compound">RedlandType</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(rhs<sp/>==<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classredland_1_1RedlandType_1ac3255173f68c11e2ebeb0d991fec24e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1ac3255173f68c11e2ebeb0d991fec24e7" kindref="member">setFreeFunc</ref>(FreeFuncType<sp/>freeFunc){</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_<sp/>=<sp/>freeFunc;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classredland_1_1RedlandType_1a403c5018a01ee1dc94e4caa33bef91e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1a403c5018a01ee1dc94e4caa33bef91e7" kindref="member">setObj</ref>(ObjType*<sp/>objType){</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>){</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/>objType;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classredland_1_1RedlandType_1aee7e39b6197cf77b19f873e3c2cea495" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1aee7e39b6197cf77b19f873e3c2cea495" kindref="member">release</ref>(){</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>){</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeFunc_(<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classredland_1_1RedlandType_1ac6594279280345bd8a03c1a7e950d3e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1ac6594279280345bd8a03c1a7e950d3e0" kindref="member">isNull</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240" refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjType<sp/>*<ref refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" kindref="member">obj_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeFuncType<sp/>freeFunc_;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight><highlight class="comment">//<sp/>namespace<sp/>redland</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//LIBOMEXMETA_REDLAND_TYPE_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/redland/RedlandWrapper/src/include/redland/RedlandType.h"/>
  </compounddef>
</doxygen>
