<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classomexmeta_1_1OmexMetaXml" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::OmexMetaXml</compoundname>
    <derivedcompoundref refid="classomexmeta_1_1OmexMetaCellML" prot="public" virt="non-virtual">omexmeta::OmexMetaCellML</derivedcompoundref>
    <derivedcompoundref refid="classomexmeta_1_1OmexMetaSBML" prot="public" virt="non-virtual">omexmeta::OmexMetaSBML</derivedcompoundref>
    <includes refid="OmexMetaXml_8h" local="no">OmexMetaXml.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classomexmeta_1_1OmexMetaXml_1a92ec0ce7118744de652eb02943ec39ef" prot="protected" static="no" mutable="no">
        <type>xmlDocPtr</type>
        <definition>xmlDocPtr omexmeta::OmexMetaXml::doc</definition>
        <argsstring></argsstring>
        <name>doc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>xml document tree </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="85" column="19" bodyfile="src/omexmeta/include/omexmeta/OmexMetaXml.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1OmexMetaXml_1aaca7a37ac733433d4f3a143adbbccbc1" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaXml::xml_</definition>
        <argsstring></argsstring>
        <name>xml_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="104" column="21" bodyfile="src/omexmeta/include/omexmeta/OmexMetaXml.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1OmexMetaXml_1abd146e2722c99125fd93b36a5fdd1a5e" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaXml::metaid_base_</definition>
        <argsstring></argsstring>
        <name>metaid_base_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="105" column="21" bodyfile="src/omexmeta/include/omexmeta/OmexMetaXml.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1OmexMetaXml_1a45b17aa02c86936bc84d3b9d90c96a4e" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int omexmeta::OmexMetaXml::metaid_num_digits_</definition>
        <argsstring></argsstring>
        <name>metaid_num_digits_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="106" column="13" bodyfile="src/omexmeta/include/omexmeta/OmexMetaXml.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1OmexMetaXml_1a31d0a3daf83e963f0994b56700342672" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool omexmeta::OmexMetaXml::generate_new_metaids_</definition>
        <argsstring></argsstring>
        <name>generate_new_metaids_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="107" column="14" bodyfile="src/omexmeta/include/omexmeta/OmexMetaXml.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1a0971092abfca49f1510a83540047d2d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::OmexMetaXml::getMetaidBase</definition>
        <argsstring>() const</argsstring>
        <name>getMetaidBase</name>
        <briefdescription>
<para>get the base for the metaid used by the current xml type. <ref refid="classThis" kindref="compound">This</ref> base is used as a precursor string for generating new metaids if requested by the user by setting generate_new_metaids=true. </para>
        </briefdescription>
        <detaileddescription>
<para>the base is given as argument to the OmexMetaXmlAssistant on instantiation. If base is &quot;metaid&quot; then ids generated will be metaid_0000 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="40" column="28" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1a12ca5e9087c6b5b45a8e17efc5a354fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>omexmeta::OmexMetaXml::~OmexMetaXml</definition>
        <argsstring>()</argsstring>
        <name>~OmexMetaXml</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="42" column="17" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="19" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1a443985100a5a783588c4b5721800ba0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int omexmeta::OmexMetaXml::getMetaidNumDigits</definition>
        <argsstring>() const</argsstring>
        <name>getMetaidNumDigits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="44" column="13" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1a82ac21ac48b494d028cb9b40f673cf83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::OmexMetaXml::generateNewMetaids</definition>
        <argsstring>() const</argsstring>
        <name>generateNewMetaids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="46" column="15" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1acb185d817563f308ecde94491623ced0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::OmexMetaXml::OmexMetaXml</definition>
        <argsstring>(const std::string &amp;xml, std::string metaid_base=&quot;MetaID&quot;, int metaid_num_digits=4, bool generate_new_metaids=false)</argsstring>
        <name>OmexMetaXml</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>metaid_base</declname>
          <defval>&quot;MetaID&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>metaid_num_digits</declname>
          <defval>4</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>generate_new_metaids</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="48" column="18" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="11" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1ad9d10f9320a4d8c0764c86ba967de43f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
        <definition>std::pair&lt; std::string, std::vector&lt; std::string &gt; &gt; omexmeta::OmexMetaXml::addMetaIds</definition>
        <argsstring>()</argsstring>
        <name>addMetaIds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="50" column="19" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="136" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1a53ca1d90f339c6e2492a93aa9d139300" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; omexmeta::OmexMetaXml::getValidElements</definition>
        <argsstring>() const</argsstring>
        <name>getValidElements</name>
        <reimplementedby refid="classomexmeta_1_1OmexMetaSBML_1a3cb2cf767bbdb821e37f322f9d0ef976">getValidElements</reimplementedby>
        <reimplementedby refid="classomexmeta_1_1OmexMetaCellML_1ac7d90828137e6071243af3d030fe71ec">getValidElements</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="52" column="30" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1aa3f4b687b01be45593a72a84b528e0b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaXml::metaIdTagName</definition>
        <argsstring>() const</argsstring>
        <name>metaIdTagName</name>
        <reimplementedby refid="classomexmeta_1_1OmexMetaSBML_1a24dd24d2e28a152aeee93d155d0ff44c">metaIdTagName</reimplementedby>
        <reimplementedby refid="classomexmeta_1_1OmexMetaCellML_1a5023d57287069c38cf68f231e1ca3de9">metaIdTagName</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="54" column="30" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1aa2570f9e9020aab9f2ecf3637d500d95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaXml::metaIdNamespace</definition>
        <argsstring>() const</argsstring>
        <name>metaIdNamespace</name>
        <reimplementedby refid="classomexmeta_1_1OmexMetaSBML_1a78e71a49421e5069c52594c44e5965c5">metaIdNamespace</reimplementedby>
        <reimplementedby refid="classomexmeta_1_1OmexMetaCellML_1a80de71f720afc3bd31dc2b089d194d9d">metaIdNamespace</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="56" column="30" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1ae5ec502a76aa8b133de07f7b98926c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaXml::removeElement</definition>
        <argsstring>(const std::string &amp;elementName)</argsstring>
        <name>removeElement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>elementName</declname>
        </param>
        <briefdescription>
<para>returns a copy of the xml with all elemenents named </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elementName</parametername>
</parameternamelist>
<parameterdescription>
<para>removed from the document. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="62" column="21" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="198" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1a14f30f51af1d210cd02d90cbcc855148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>xmlNodePtr</type>
        <definition>xmlNodePtr omexmeta::OmexMetaXml::findFirstOccuranceOfNodeCalled</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>findFirstOccuranceOfNodeCalled</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>search the current xml document for a node called </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name.</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
if multiple such nodes exist, the first found is return </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="68" column="20" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="280" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1aaa0e43035473faa50350e1b5d703e445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaXml::toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
<para>write the current document to string </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="73" column="21" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="223" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1a81b34fa445228b70d618d352772e8838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::OmexMetaXml::getDefaultModelMetaid</definition>
        <argsstring>()</argsstring>
        <name>getDefaultModelMetaid</name>
        <briefdescription>
<para>get the model elements metaid </para>
        </briefdescription>
        <detaileddescription>
<para>the model element is often a child of the sbml or cellml element </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="79" column="21" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="240" bodyend="256"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1a6c5c36bbaee3d6b14d4e9567d248d2b5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>xmlDocPtr</type>
        <definition>xmlDocPtr omexmeta::OmexMetaXml::parseDoc</definition>
        <argsstring>(const std::string &amp;xml=std::string())</argsstring>
        <name>parseDoc</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse xml into libxml2. If<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>provided, use this xml, otherwise use private member variable xml_ </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="91" column="19" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="211" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1a1b230c4076abe31aee3471ecf01c1330" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::OmexMetaXml::addMetaIdsRecursion</definition>
        <argsstring>(xmlDocPtr doc, xmlNode *a_node, std::vector&lt; std::string &gt; &amp;seen_metaids)</argsstring>
        <name>addMetaIdsRecursion</name>
        <param>
          <type>xmlDocPtr</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>xmlNode *</type>
          <declname>a_node</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>seen_metaids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="93" column="14" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="40" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1a1088e109afa905248c3577b95e291f21" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::OmexMetaXml::generateMetaId</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;seen_metaids, long count, const MetaID &amp;metaid_gen, std::string &amp;id)</argsstring>
        <name>generateMetaId</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>seen_metaids</declname>
        </param>
        <param>
          <type>long</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="classomexmeta_1_1MetaID" kindref="compound">MetaID</ref> &amp;</type>
          <declname>metaid_gen</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="95" column="14" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="30" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1OmexMetaXml_1a9ad99abda52b82b105416148a5d1da97" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>xmlNodePtr</type>
        <definition>xmlNodePtr omexmeta::OmexMetaXml::findNodeByName</definition>
        <argsstring>(xmlNodePtr rootnode, const xmlChar *nodename)</argsstring>
        <name>findNodeByName</name>
        <param>
          <type>xmlNodePtr</type>
          <declname>rootnode</declname>
        </param>
        <param>
          <type>const xmlChar *</type>
          <declname>nodename</declname>
        </param>
        <briefdescription>
<para>looks for a node called </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nodename</parametername>
</parameternamelist>
<parameterdescription>
<para>in</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rootnode.</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the first it finds. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="103" column="20" bodyfile="src/omexmeta/OmexMetaXml.cpp" bodystart="259" bodyend="278"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Construct for handling xml. </para>
    </briefdescription>
    <detaileddescription>
<para>todo this design works but is a little clunky. A better design would be literally have an XML class, with a type enum to determine SBML, CellML or other and then the functions performed by this class would just be methods of the xml. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>omexmeta::OmexMetaCellML</label>
        <link refid="classomexmeta_1_1OmexMetaCellML"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>omexmeta::OmexMetaSBML</label>
        <link refid="classomexmeta_1_1OmexMetaSBML"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>omexmeta::OmexMetaXml</label>
        <link refid="classomexmeta_1_1OmexMetaXml"/>
      </node>
    </inheritancegraph>
    <location file="src/omexmeta/include/omexmeta/OmexMetaXml.h" line="31" column="5" bodyfile="src/omexmeta/include/omexmeta/OmexMetaXml.h" bodystart="31" bodyend="108"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1OmexMetaXml_1ad9d10f9320a4d8c0764c86ba967de43f" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>addMetaIds</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a1b230c4076abe31aee3471ecf01c1330" prot="protected" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>addMetaIdsRecursion</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a92ec0ce7118744de652eb02943ec39ef" prot="protected" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>doc</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a14f30f51af1d210cd02d90cbcc855148" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>findFirstOccuranceOfNodeCalled</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a9ad99abda52b82b105416148a5d1da97" prot="protected" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>findNodeByName</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a31d0a3daf83e963f0994b56700342672" prot="protected" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>generate_new_metaids_</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a1088e109afa905248c3577b95e291f21" prot="protected" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>generateMetaId</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a82ac21ac48b494d028cb9b40f673cf83" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>generateNewMetaids</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a81b34fa445228b70d618d352772e8838" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>getDefaultModelMetaid</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a0971092abfca49f1510a83540047d2d0" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>getMetaidBase</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a443985100a5a783588c4b5721800ba0e" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>getMetaidNumDigits</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a53ca1d90f339c6e2492a93aa9d139300" prot="public" virt="virtual"><scope>omexmeta::OmexMetaXml</scope><name>getValidElements</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1abd146e2722c99125fd93b36a5fdd1a5e" prot="protected" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>metaid_base_</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a45b17aa02c86936bc84d3b9d90c96a4e" prot="protected" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>metaid_num_digits_</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1aa2570f9e9020aab9f2ecf3637d500d95" prot="public" virt="virtual"><scope>omexmeta::OmexMetaXml</scope><name>metaIdNamespace</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1aa3f4b687b01be45593a72a84b528e0b7" prot="public" virt="virtual"><scope>omexmeta::OmexMetaXml</scope><name>metaIdTagName</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1acb185d817563f308ecde94491623ced0" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>OmexMetaXml</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a6c5c36bbaee3d6b14d4e9567d248d2b5" prot="protected" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>parseDoc</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1ae5ec502a76aa8b133de07f7b98926c6d" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>removeElement</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1aaa0e43035473faa50350e1b5d703e445" prot="public" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>toString</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1aaca7a37ac733433d4f3a143adbbccbc1" prot="protected" virt="non-virtual"><scope>omexmeta::OmexMetaXml</scope><name>xml_</name></member>
      <member refid="classomexmeta_1_1OmexMetaXml_1a12ca5e9087c6b5b45a8e17efc5a354fa" prot="public" virt="virtual"><scope>omexmeta::OmexMetaXml</scope><name>~OmexMetaXml</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
