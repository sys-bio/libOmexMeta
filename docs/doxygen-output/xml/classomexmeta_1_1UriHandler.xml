<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classomexmeta_1_1UriHandler" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::UriHandler</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classomexmeta_1_1UriHandler_1a0cfa5e8d7bf17f4ebf89fb60294869b4" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::UriHandler::repository_uri_</definition>
        <argsstring></argsstring>
        <name>repository_uri_</name>
        <initializer>= &quot;http://omex-library.org/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="144" column="21" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1UriHandler_1a9b4ed97d0a608e10550c495b4dc0a98a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::UriHandler::archive_uri_</definition>
        <argsstring></argsstring>
        <name>archive_uri_</name>
        <initializer>= repository_uri_ + &quot;NewOmex.omex/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="145" column="21" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1UriHandler_1af0dd80b7c4b17229ca645744249e2cea" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::UriHandler::model_uri_</definition>
        <argsstring></argsstring>
        <name>model_uri_</name>
        <initializer>= archive_uri_ + &quot;NewModel.xml&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="146" column="21" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1UriHandler_1a0a4ab87004debc7c614abde4cb2a16f1" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::UriHandler::local_uri_</definition>
        <argsstring></argsstring>
        <name>local_uri_</name>
        <initializer>= archive_uri_ + &quot;NewModel.rdf#&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="147" column="21" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1UriHandler_1aa915a5af3620d2d3da034d249bb18585" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::UriHandler::model_metaid_</definition>
        <argsstring></argsstring>
        <name>model_metaid_</name>
        <initializer>= &quot;NewModel&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="148" column="21" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a3fc8f7022dc611dbbed4d9994a937de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::UriHandler::UriHandler</definition>
        <argsstring>()=default</argsstring>
        <name>UriHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="23" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a57e13ab5ccdb36c87793d458f9c4961d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::UriHandler::getRepositoryUri</definition>
        <argsstring>() const</argsstring>
        <name>getRepositoryUri</name>
        <briefdescription>
<para>getter for repository uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is &quot;http://omex-library.org/&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="29" column="28" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a58c427641e81597583e6defaa497857c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
        <definition>UriHandler &amp; omexmeta::UriHandler::setRepositoryUri</definition>
        <argsstring>(const std::string &amp;repository)</argsstring>
        <name>setRepositoryUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>repository</declname>
        </param>
        <briefdescription>
<para>setter for repository uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is &quot;http://omex-library.org/&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="35" column="20" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="15" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a6615f423d49cdbf1e94bafcac0d1a2e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::UriHandler::getArchiveUri</definition>
        <argsstring>() const</argsstring>
        <name>getArchiveUri</name>
        <briefdescription>
<para>getter for archive uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is&quot;NewOmex.omex&quot; which produces the full uri &quot;http://omex-library.org/NewOmex.omex/&quot; when assembled </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="43" column="28" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1ab17e4c0a990674ec15f3c638a4d1cf52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
        <definition>UriHandler &amp; omexmeta::UriHandler::setArchiveUri</definition>
        <argsstring>(const std::string &amp;archive)</argsstring>
        <name>setArchiveUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>setter for archive uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is&quot;NewOmex.omex&quot; which produces the full uri &quot;http://omex-library.org/NewOmex.omex/&quot; when assembled </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="51" column="20" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="36" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1ad135d8d4d6fdb3af194f1cb24758e745" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::UriHandler::getModelUri</definition>
        <argsstring>() const</argsstring>
        <name>getModelUri</name>
        <briefdescription>
<para>getter for model uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is&quot;NewModel.xml&quot; and produces the full uri &quot;http://omex-library.org/NewOmex.omex/NewModel.xml#&quot; when assembled </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="59" column="28" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1acab34dfe7bdef8ddc4fbe956f74dbd69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
        <definition>UriHandler &amp; omexmeta::UriHandler::setModelUri</definition>
        <argsstring>(std::string model)</argsstring>
        <name>setModelUri</name>
        <param>
          <type>std::string</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>setter for model uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is&quot;NewModel.xml&quot; and produces the full uri &quot;http://omex-library.org/NewOmex.omex/NewModel.xml&quot; when assembled </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="67" column="20" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="67" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a4c20a7d29388f3e3d8ce736dcce386d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::UriHandler::getLocalUri</definition>
        <argsstring>() const</argsstring>
        <name>getLocalUri</name>
        <briefdescription>
<para>getter for local uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is&quot;NewModel.rdf&quot; and produces the full uri &quot;http://omex-library.org/NewOmex.omex/NewModel.rdf#&quot; when assembled. There is no setter for local_uri_ because it&apos;ll take on the name of model_uri_ with the &quot;xml&quot; extension replaced with &quot;rdf&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="77" column="28" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a25e8869750d8cdf28af0ab1fd6157df5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::UriHandler::getModelMetaid</definition>
        <argsstring>() const</argsstring>
        <name>getModelMetaid</name>
        <briefdescription>
<para>getter for model metaid. <ref refid="classThis" kindref="compound">This</ref> is used in model level annotations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="82" column="27" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a72f33038ba13647c39381b04f8087763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::UriHandler::getModelLevelAnnotationUri</definition>
        <argsstring>()</argsstring>
        <name>getModelLevelAnnotationUri</name>
        <briefdescription>
<para>get the full uri for model level annotations. </para>
        </briefdescription>
        <detaileddescription>
<para>the modelUri concatonated with the model metaid fragment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="88" column="22" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a870e030a93112076f1c0880572e22db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
        <definition>UriHandler &amp; omexmeta::UriHandler::setModelMetaid</definition>
        <argsstring>(const std::string &amp;modelMetaid)</argsstring>
        <name>setModelMetaid</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>modelMetaid</declname>
        </param>
        <briefdescription>
<para>setting for model metaid. <ref refid="classThis" kindref="compound">This</ref> is used in model level annotations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="93" column="20" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1ad30de26a22a4e9bfd0417cc19c7c67cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::UriHandler::uriModifier</definition>
        <argsstring>(std::string uri_to_modify, eUriType type) const</argsstring>
        <name>uriModifier</name>
        <param>
          <type>std::string</type>
          <declname>uri_to_modify</declname>
        </param>
        <param>
          <type>eUriType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="95" column="22" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="130" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a2549db1e5246b677be92914cca82f6a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::UriHandler::operator==</definition>
        <argsstring>(const UriHandler &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="134" column="14" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="144" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a53ad815e57019fd58402c04edbd53ed3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::UriHandler::operator!=</definition>
        <argsstring>(const UriHandler &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="136" column="14" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="151" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a9cde7e91ac8c45800decd9263a853f74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>static std::string omexmeta::UriHandler::uriModifier</definition>
        <argsstring>(T &amp;cls, std::string uri_to_modify, eUriType type)</argsstring>
        <name>uriModifier</name>
        <param>
          <type>T &amp;</type>
          <declname>cls</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>uri_to_modify</declname>
        </param>
        <param>
          <type>eUriType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="98" column="28" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="98" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="21" column="5" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="21" bodyend="150"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1UriHandler_1a9b4ed97d0a608e10550c495b4dc0a98a" prot="private" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>archive_uri_</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a6615f423d49cdbf1e94bafcac0d1a2e0" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>getArchiveUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a4c20a7d29388f3e3d8ce736dcce386d6" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>getLocalUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a72f33038ba13647c39381b04f8087763" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>getModelLevelAnnotationUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a25e8869750d8cdf28af0ab1fd6157df5" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>getModelMetaid</name></member>
      <member refid="classomexmeta_1_1UriHandler_1ad135d8d4d6fdb3af194f1cb24758e745" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>getModelUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a57e13ab5ccdb36c87793d458f9c4961d" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>getRepositoryUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a0a4ab87004debc7c614abde4cb2a16f1" prot="private" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>local_uri_</name></member>
      <member refid="classomexmeta_1_1UriHandler_1aa915a5af3620d2d3da034d249bb18585" prot="private" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>model_metaid_</name></member>
      <member refid="classomexmeta_1_1UriHandler_1af0dd80b7c4b17229ca645744249e2cea" prot="private" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>model_uri_</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a53ad815e57019fd58402c04edbd53ed3" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>operator!=</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a2549db1e5246b677be92914cca82f6a6" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>operator==</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a0cfa5e8d7bf17f4ebf89fb60294869b4" prot="private" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>repository_uri_</name></member>
      <member refid="classomexmeta_1_1UriHandler_1ab17e4c0a990674ec15f3c638a4d1cf52" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>setArchiveUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a870e030a93112076f1c0880572e22db0" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>setModelMetaid</name></member>
      <member refid="classomexmeta_1_1UriHandler_1acab34dfe7bdef8ddc4fbe956f74dbd69" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>setModelUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a58c427641e81597583e6defaa497857c" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>setRepositoryUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a3fc8f7022dc611dbbed4d9994a937de7" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>UriHandler</name></member>
      <member refid="classomexmeta_1_1UriHandler_1ad30de26a22a4e9bfd0417cc19c7c67cc" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>uriModifier</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a9cde7e91ac8c45800decd9263a853f74" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>uriModifier</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
