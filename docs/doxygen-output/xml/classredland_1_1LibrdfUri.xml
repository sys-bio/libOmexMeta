<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classredland_1_1LibrdfUri" kind="class" language="C++" prot="public">
    <compoundname>redland::LibrdfUri</compoundname>
    <basecompoundref refid="classredland_1_1RefCountedRedlandType" prot="public" virt="non-virtual">redland::RefCountedRedlandType&lt; librdf_uri, uri_free_func &gt;</basecompoundref>
    <includes refid="LibrdfUri_8h" local="no">LibrdfUri.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1ae178bed8994fa2b3e32c1ad97a45e67d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfUri::LibrdfUri</definition>
        <argsstring>()=default</argsstring>
        <name>LibrdfUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="37" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a4992fcae8de6b2814b6c9061f8f3d5b8" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfUri::LibrdfUri</definition>
        <argsstring>(librdf_uri *uri)</argsstring>
        <name>LibrdfUri</name>
        <param>
          <type><ref refid="structraptor__uri__s" kindref="compound">librdf_uri</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
<para>instantiate a <ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> from a librdf_uri pointer. The pointer is stolen from librdf_uri and thereafter managed correctly by <ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> via RAII. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="44" column="18" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a3630cf904c9e4546fb6d6c175ed6c66e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref></type>
        <definition>LibrdfUri redland::LibrdfUri::concatonate</definition>
        <argsstring>(const std::string &amp;local_name) const</argsstring>
        <name>concatonate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>local_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="85" column="20" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1acaeb8a0d4b6f493805ecc1b198807e1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string redland::LibrdfUri::str</definition>
        <argsstring>() const</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="87" column="22" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="30" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a36c5c589ae207ad6294e10be2bb8df17" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfUri::LibrdfUri</definition>
        <argsstring>(const std::string &amp;uri)</argsstring>
        <name>LibrdfUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="89" column="18" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="19" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a13f1a7bc775cd79b6bb4dc6cd31b5d53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool redland::LibrdfUri::isEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isEmpty</name>
        <briefdescription>
<para>returns a librdf_uri pointer and increments the usage count. The caller is responsible for calling </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>freeUri to decrement the librdf_uri* again. </para>
</simplesect>
<simplesect kind="note"><para>when </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classredland_1_1RefCountedRedlandType_1a6984bffbdd92f2eaaf23e86f65044fb9" kindref="member">getUsage()</ref> is 1 the destructor will take care of freeing memory associated with librdf_uri object.</para>
</simplesect>
get the underlying librdf_uri*</para>
<para>do not increment the shared pointer reference counter. <simplesect kind="warning"><para>this method assumes you know what you are doing with regards to the librdf reference counting system </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classredland_1_1RefCountedRedlandType_1aad3189482972131c1d253e7759fee33e" kindref="member">LibrdfUri::get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="111" column="15" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a770d47b63c041e39761f8dd46b0bf8b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool redland::LibrdfUri::isFileUri</definition>
        <argsstring>() const</argsstring>
        <name>isFileUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="120" column="15" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a02d802c21de7c9dba4133779701e3a45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool redland::LibrdfUri::operator==</definition>
        <argsstring>(const LibrdfUri &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="122" column="14" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a8ded118526be9cfdbe6dbc87d075fb06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool redland::LibrdfUri::operator!=</definition>
        <argsstring>(const LibrdfUri &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="124" column="14" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1ad24448f9b22adce080a35decc4694479" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string redland::LibrdfUri::toFilenameString</definition>
        <argsstring>() const</argsstring>
        <name>toFilenameString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="130" column="22" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="82" bodyend="90"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1ad7245bf32a2538d220ec7d3a0afc0802" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref></type>
        <definition>LibrdfUri redland::LibrdfUri::fromFilename</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>fromFilename</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="55" column="26" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a58ab2ce202cc9b563d1dc60a20a545b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref></type>
        <definition>LibrdfUri redland::LibrdfUri::concatonate</definition>
        <argsstring>(librdf_uri *old_name, const std::string &amp;local_name)</argsstring>
        <name>concatonate</name>
        <param>
          <type><ref refid="structraptor__uri__s" kindref="compound">librdf_uri</ref> *</type>
          <declname>old_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>local_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="69" column="26" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C++ wrapper around librdf_uri using RAII. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>redland::RedlandType&lt; ObjType, FreeFuncType &gt;</label>
        <link refid="classredland_1_1RedlandType"/>
      </node>
      <node id="2">
        <label>RefCounted_librdf_uri</label>
        <link refid="classredland_1_1RefCountedRedlandType"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>redland::LibrdfUri</label>
        <link refid="classredland_1_1LibrdfUri"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>redland::RedlandType&lt; ObjType, FreeFuncType &gt;</label>
        <link refid="classredland_1_1RedlandType"/>
      </node>
      <node id="2">
        <label>RefCounted_librdf_uri</label>
        <link refid="classredland_1_1RefCountedRedlandType"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>redland::LibrdfUri</label>
        <link refid="classredland_1_1LibrdfUri"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="29" column="5" bodyfile="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" bodystart="29" bodyend="148"/>
    <listofallmembers>
      <member refid="classredland_1_1RedlandType_1a86304e5a3e82aae8ea4aae868b4fa7e4" prot="public" virt="virtual"><scope>redland::LibrdfUri</scope><name>checkForNull</name></member>
      <member refid="classredland_1_1LibrdfUri_1a58ab2ce202cc9b563d1dc60a20a545b2" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>concatonate</name></member>
      <member refid="classredland_1_1LibrdfUri_1a3630cf904c9e4546fb6d6c175ed6c66e" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>concatonate</name></member>
      <member refid="classredland_1_1RedlandType_1afd3a894521540cf05dfa56a3a59b25b9" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>freeFunc_</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1a5e09c936eada4386171e23bc599f334f" prot="public" virt="virtual"><scope>redland::LibrdfUri</scope><name>freeObj</name></member>
      <member refid="classredland_1_1LibrdfUri_1ad7245bf32a2538d220ec7d3a0afc0802" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>fromFilename</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1aad3189482972131c1d253e7759fee33e" prot="public" virt="virtual"><scope>redland::LibrdfUri</scope><name>get</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1a6984bffbdd92f2eaaf23e86f65044fb9" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>getUsage</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1a688d681a2a77dcbd3223757912cc93b6" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>getWithoutIncrement</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1ae8d1c23cc4bb8a9df585c87765d857bb" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>incrementUsage</name></member>
      <member refid="classredland_1_1LibrdfUri_1a13f1a7bc775cd79b6bb4dc6cd31b5d53" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>isEmpty</name></member>
      <member refid="classredland_1_1LibrdfUri_1a770d47b63c041e39761f8dd46b0bf8b5" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>isFileUri</name></member>
      <member refid="classredland_1_1RedlandType_1ac6594279280345bd8a03c1a7e950d3e0" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>isNull</name></member>
      <member refid="classredland_1_1LibrdfUri_1ae178bed8994fa2b3e32c1ad97a45e67d" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>LibrdfUri</name></member>
      <member refid="classredland_1_1LibrdfUri_1a4992fcae8de6b2814b6c9061f8f3d5b8" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>LibrdfUri</name></member>
      <member refid="classredland_1_1LibrdfUri_1a36c5c589ae207ad6294e10be2bb8df17" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>LibrdfUri</name></member>
      <member refid="classredland_1_1RedlandType_1ac9d0c3d245e2394c137ee0ab266784ed" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>obj_</name></member>
      <member refid="classredland_1_1LibrdfUri_1a8ded118526be9cfdbe6dbc87d075fb06" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>operator!=</name></member>
      <member refid="classredland_1_1RedlandType_1a4b0707a7465ffb5952bae3651f8c6d41" prot="public" virt="non-virtual" ambiguityscope="redland::RefCountedRedlandType::"><scope>redland::LibrdfUri</scope><name>operator!=</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1aa0d305fe2357f0f5370a5027e165506a" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>operator=</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1a1ac9b3d35fbbc1f17fb474d61071690e" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>operator=</name></member>
      <member refid="classredland_1_1RedlandType_1a5dd5fd7edeb2b6c17e8c92eb7ba01cac" prot="public" virt="non-virtual" ambiguityscope="redland::RedlandType::"><scope>redland::LibrdfUri</scope><name>operator=</name></member>
      <member refid="classredland_1_1RedlandType_1a22e381182a5642883ad578db40368f13" prot="public" virt="non-virtual" ambiguityscope="redland::RedlandType::"><scope>redland::LibrdfUri</scope><name>operator=</name></member>
      <member refid="classredland_1_1LibrdfUri_1a02d802c21de7c9dba4133779701e3a45" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>operator==</name></member>
      <member refid="classredland_1_1RedlandType_1a9fc5b1ce564f4c2497855cd965df1cfd" prot="public" virt="non-virtual" ambiguityscope="redland::RefCountedRedlandType::"><scope>redland::LibrdfUri</scope><name>operator==</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1a3c3a57c6b73d9bea7e0a9cdb9a725006" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>RedlandType</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1ab7e0f16ed9acd6ba9c65b8e9259301e9" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>RedlandType</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1a89f2c7b5d8133d7b22c54263ea2dcb3b" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>RedlandType</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1a7884dd6bc66d9880090bb53f14683f1f" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>RedlandType</name></member>
      <member refid="classredland_1_1RedlandType_1ab7e0f16ed9acd6ba9c65b8e9259301e9" prot="public" virt="non-virtual" ambiguityscope="redland::RedlandType::"><scope>redland::LibrdfUri</scope><name>RedlandType</name></member>
      <member refid="classredland_1_1RedlandType_1a89f2c7b5d8133d7b22c54263ea2dcb3b" prot="public" virt="non-virtual" ambiguityscope="redland::RedlandType::"><scope>redland::LibrdfUri</scope><name>RedlandType</name></member>
      <member refid="classredland_1_1RedlandType_1a7884dd6bc66d9880090bb53f14683f1f" prot="public" virt="non-virtual" ambiguityscope="redland::RedlandType::"><scope>redland::LibrdfUri</scope><name>RedlandType</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1ae0ca62ccfcffebe1f8d391fc80719fd7" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>RefCountedRedlandType</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1abb14a238dec2d35068c96d873ccef2da" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>RefCountedRedlandType</name></member>
      <member refid="classredland_1_1RedlandType_1aee7e39b6197cf77b19f873e3c2cea495" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>release</name></member>
      <member refid="classredland_1_1RedlandType_1ac3255173f68c11e2ebeb0d991fec24e7" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>setFreeFunc</name></member>
      <member refid="classredland_1_1RedlandType_1a403c5018a01ee1dc94e4caa33bef91e7" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>setObj</name></member>
      <member refid="classredland_1_1LibrdfUri_1acaeb8a0d4b6f493805ecc1b198807e1c" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>str</name></member>
      <member refid="classredland_1_1RefCountedRedlandType_1a8ce7a7bf352c4d91ae785a4468cf0960" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>ThisType</name></member>
      <member refid="classredland_1_1LibrdfUri_1ad24448f9b22adce080a35decc4694479" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>toFilenameString</name></member>
      <member refid="classredland_1_1RedlandType_1a028dab285bfd81fa4efca9206b0cd498" prot="public" virt="virtual"><scope>redland::LibrdfUri</scope><name>~RedlandType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
