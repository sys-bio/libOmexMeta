<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classomexmeta_1_1ValueException" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::ValueException</compoundname>
    <basecompoundref refid="classomexmeta_1_1Exception" prot="public" virt="non-virtual">omexmeta::Exception</basecompoundref>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classomexmeta_1_1ValueException_1ad09e2a190a245199974678e2790e81ff" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>omexmeta::Exception::Exception</definition>
        <argsstring>(const char *message)</argsstring>
        <name>Exception</name>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor (C strings). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>C-style string error message. The string contents are copied upon construction. Hence, responsibility for deleting the char* lies with the caller. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Error.h" line="64" column="9" bodyfile="src/omexmeta/include/omexmeta/Error.h" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1ValueException_1ac50b0a25504303cc1a4a1a20de0127eb" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>omexmeta::Exception::Exception</definition>
        <argsstring>(std::string message)</argsstring>
        <name>Exception</name>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor (C++ STL strings). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The error message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/Error.h" line="64" column="9" bodyfile="src/omexmeta/include/omexmeta/Error.h" bodystart="24" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>std::exception</label>
      </node>
      <node id="1">
        <label>omexmeta::ValueException</label>
        <link refid="classomexmeta_1_1ValueException"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>omexmeta::Exception</label>
        <link refid="classomexmeta_1_1Exception"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>std::exception</label>
      </node>
      <node id="1">
        <label>omexmeta::ValueException</label>
        <link refid="classomexmeta_1_1ValueException"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>omexmeta::Exception</label>
        <link refid="classomexmeta_1_1Exception"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/omexmeta/include/omexmeta/Error.h" line="63" column="5" bodyfile="src/omexmeta/include/omexmeta/Error.h" bodystart="63" bodyend="65"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1ValueException_1ad09e2a190a245199974678e2790e81ff" prot="private" virt="non-virtual"><scope>omexmeta::ValueException</scope><name>Exception</name></member>
      <member refid="classomexmeta_1_1ValueException_1ac50b0a25504303cc1a4a1a20de0127eb" prot="private" virt="non-virtual"><scope>omexmeta::ValueException</scope><name>Exception</name></member>
      <member refid="classomexmeta_1_1Exception_1ad09e2a190a245199974678e2790e81ff" prot="public" virt="non-virtual" ambiguityscope="omexmeta::Exception::"><scope>omexmeta::ValueException</scope><name>Exception</name></member>
      <member refid="classomexmeta_1_1Exception_1ac50b0a25504303cc1a4a1a20de0127eb" prot="public" virt="non-virtual" ambiguityscope="omexmeta::Exception::"><scope>omexmeta::ValueException</scope><name>Exception</name></member>
      <member refid="classomexmeta_1_1Exception_1a99067aa4ed7e38cf27b986cca3734512" prot="protected" virt="non-virtual"><scope>omexmeta::ValueException</scope><name>msg_</name></member>
      <member refid="classomexmeta_1_1Exception_1af9c3f258e4715dd2102f5c2db5fbe260" prot="public" virt="non-virtual"><scope>omexmeta::ValueException</scope><name>what</name></member>
      <member refid="classomexmeta_1_1Exception_1aaa08b2467c40a3e28586c0da5da45736" prot="public" virt="non-virtual"><scope>omexmeta::ValueException</scope><name>~Exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
